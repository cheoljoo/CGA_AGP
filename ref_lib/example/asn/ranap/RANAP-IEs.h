/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.83, Date: 20-Mar-2007.
 */
#ifndef RANAP_IES_H
#define RANAP_IES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "asn1per.h"
#include "rtTable.h"
#include "RANAP-CommonDataTypes.h"
#include "RANAP-Containers.h"

/**************************************************************/
/*                                                            */
/*  CauseRadioNetwork                                         */
/*                                                            */
/**************************************************************/

typedef enum {
   rab_pre_empted = 1,
   trelocoverall_expiry = 2,
   trelocprep_expiry = 3,
   treloccomplete_expiry = 4,
   tqueing_expiry = 5,
   relocation_triggered = 6,
   trellocalloc_expiry = 7,
   unable_to_establish_during_relocation = 8,
   unknown_target_rnc = 9,
   relocation_cancelled = 10,
   successful_relocation = 11,
   requested_ciphering_and_or_integrity_protection_algorithms_not_supported = 12,
   conflict_with_already_existing_integrity_protection_and_or_ciphering_information = 13,
   failure_in_the_radio_interface_procedure = 14,
   release_due_to_utran_generated_reason = 15,
   user_inactivity = 16,
   time_critical_relocation = 17,
   requested_traffic_class_not_available = 18,
   invalid_rab_parameters_value = 19,
   requested_maximum_bit_rate_not_available = 20,
   requested_guaranteed_bit_rate_not_available = 21,
   requested_transfer_delay_not_achievable = 22,
   invalid_rab_parameters_combination = 23,
   condition_violation_for_sdu_parameters = 24,
   condition_violation_for_traffic_handling_priority = 25,
   condition_violation_for_guaranteed_bit_rate = 26,
   user_plane_versions_not_supported = 27,
   iu_up_failure = 28,
   relocation_failure_in_target_CN_RNC_or_target_system = 29,
   invalid_RAB_ID = 30,
   no_remaining_rab = 31,
   interaction_with_other_procedure = 32,
   requested_maximum_bit_rate_for_dl_not_available = 33,
   requested_maximum_bit_rate_for_ul_not_available = 34,
   requested_guaranteed_bit_rate_for_dl_not_available = 35,
   requested_guaranteed_bit_rate_for_ul_not_available = 36,
   repeated_integrity_checking_failure = 37,
   requested_request_type_not_supported = 38,
   request_superseded = 39,
   release_due_to_UE_generated_signalling_connection_release = 40,
   resource_optimisation_relocation = 41,
   requested_information_not_available = 42,
   relocation_desirable_for_radio_reasons = 43,
   relocation_not_supported_in_target_RNC_or_target_system = 44,
   directed_retry = 45,
   radio_connection_with_UE_Lost = 46,
   rNC_unable_to_establish_all_RFCs = 47,
   deciphering_keys_not_available = 48,
   dedicated_assistance_data_not_available = 49,
   relocation_target_not_allowed = 50,
   location_reporting_congestion = 51,
   reduce_load_in_serving_cell = 52,
   no_radio_resources_available_in_target_cell = 53,
   gERAN_Iumode_failure = 54,
   access_restricted_due_to_shared_networks = 55,
   incoming_relocation_not_supported_due_to_PUESBINE_feature = 56,
   traffic_load_in_the_target_cell_higher_than_in_the_source_cell = 57,
   mBMS_no_multicast_service_for_this_UE = 58,
   mBMS_unknown_UE_ID = 59,
   successful_MBMS_session_start_no_data_bearer_necessary = 60,
   mBMS_superseded_due_to_NNSF = 61,
   mBMS_UE_linking_already_done = 62,
   mBMS_UE_de_linking_failure_no_existing_UE_linking = 63,
   tMGI_unknown = 64
} CauseRadioNetwork_Root;

typedef OSUINT8 CauseRadioNetwork;

EXTERN int asn1PE_CauseRadioNetwork (ASN1CTXT* pctxt, CauseRadioNetwork value);

EXTERN int asn1PD_CauseRadioNetwork (ASN1CTXT* pctxt, CauseRadioNetwork* pvalue);

EXTERN void asn1Print_CauseRadioNetwork
   (const char* name, CauseRadioNetwork* pvalue);

EXTERN CauseRadioNetwork* asn1Test_CauseRadioNetwork
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseTransmissionNetwork                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   signalling_transport_resource_failure = 65,
   iu_transport_connection_failed_to_establish = 66
} CauseTransmissionNetwork_Root;

typedef OSUINT8 CauseTransmissionNetwork;

EXTERN int asn1PE_CauseTransmissionNetwork (ASN1CTXT* pctxt, CauseTransmissionNetwork value);

EXTERN int asn1PD_CauseTransmissionNetwork (ASN1CTXT* pctxt, CauseTransmissionNetwork* pvalue);

EXTERN void asn1Print_CauseTransmissionNetwork
   (const char* name, CauseTransmissionNetwork* pvalue);

EXTERN CauseTransmissionNetwork* asn1Test_CauseTransmissionNetwork
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseNAS                                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   user_restriction_start_indication = 81,
   user_restriction_end_indication = 82,
   normal_release = 83
} CauseNAS_Root;

typedef OSUINT8 CauseNAS;

EXTERN int asn1PE_CauseNAS (ASN1CTXT* pctxt, CauseNAS value);

EXTERN int asn1PD_CauseNAS (ASN1CTXT* pctxt, CauseNAS* pvalue);

EXTERN void asn1Print_CauseNAS
   (const char* name, CauseNAS* pvalue);

EXTERN CauseNAS* asn1Test_CauseNAS
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseProtocol                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   transfer_syntax_error = 97,
   semantic_error = 98,
   message_not_compatible_with_receiver_state = 99,
   abstract_syntax_error_reject = 100,
   abstract_syntax_error_ignore_and_notify = 101,
   abstract_syntax_error_falsely_constructed_message = 102
} CauseProtocol_Root;

typedef OSUINT8 CauseProtocol;

EXTERN int asn1PE_CauseProtocol (ASN1CTXT* pctxt, CauseProtocol value);

EXTERN int asn1PD_CauseProtocol (ASN1CTXT* pctxt, CauseProtocol* pvalue);

EXTERN void asn1Print_CauseProtocol
   (const char* name, CauseProtocol* pvalue);

EXTERN CauseProtocol* asn1Test_CauseProtocol
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseMisc                                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   om_intervention = 113,
   no_resource_available = 114,
   unspecified_failure = 115,
   network_optimisation = 116
} CauseMisc_Root;

typedef OSUINT8 CauseMisc;

EXTERN int asn1PE_CauseMisc (ASN1CTXT* pctxt, CauseMisc value);

EXTERN int asn1PD_CauseMisc (ASN1CTXT* pctxt, CauseMisc* pvalue);

EXTERN void asn1Print_CauseMisc
   (const char* name, CauseMisc* pvalue);

EXTERN CauseMisc* asn1Test_CauseMisc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseNon_Standard                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT16 CauseNon_Standard;

EXTERN int asn1PE_CauseNon_Standard (ASN1CTXT* pctxt, CauseNon_Standard value);

EXTERN int asn1PD_CauseNon_Standard (ASN1CTXT* pctxt, CauseNon_Standard* pvalue);

EXTERN void asn1Print_CauseNon_Standard
   (const char* name, CauseNon_Standard* pvalue);

EXTERN CauseNon_Standard* asn1Test_CauseNon_Standard
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseRadioNetworkExtension                                */
/*                                                            */
/**************************************************************/

typedef enum {
   iP_multicast_address_and_APN_not_valid = 257,
   mBMS_de_registration_rejected_due_to_implicit_registration = 258,
   mBMS_request_superseded = 259,
   mBMS_de_registration_during_session_not_allowed = 260,
   mBMS_no_data_bearer_necessary = 261
} CauseRadioNetworkExtension_Root;

typedef OSUINT16 CauseRadioNetworkExtension;

EXTERN int asn1PE_CauseRadioNetworkExtension (ASN1CTXT* pctxt, CauseRadioNetworkExtension value);

EXTERN int asn1PD_CauseRadioNetworkExtension (ASN1CTXT* pctxt, CauseRadioNetworkExtension* pvalue);

EXTERN void asn1Print_CauseRadioNetworkExtension
   (const char* name, CauseRadioNetworkExtension* pvalue);

EXTERN CauseRadioNetworkExtension* asn1Test_CauseRadioNetworkExtension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Cause                                                     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_Cause_radioNetwork            1
#define T_Cause_transmissionNetwork     2
#define T_Cause_nAS                     3
#define T_Cause_protocol                4
#define T_Cause_misc                    5
#define T_Cause_non_Standard            6
#define T_Cause_radioNetworkExtension   7
#define T_Cause_extElem1                8

typedef struct EXTERN Cause {
   int t;
   union {
      /* t = 1 */
      CauseRadioNetwork radioNetwork;
      /* t = 2 */
      CauseTransmissionNetwork transmissionNetwork;
      /* t = 3 */
      CauseNAS nAS;
      /* t = 4 */
      CauseProtocol protocol;
      /* t = 5 */
      CauseMisc misc;
      /* t = 6 */
      CauseNon_Standard non_Standard;
      /* t = 7 */
      CauseRadioNetworkExtension radioNetworkExtension;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} Cause;

EXTERN int asn1PE_Cause (ASN1CTXT* pctxt, Cause* pvalue);

EXTERN int asn1PD_Cause (ASN1CTXT* pctxt, Cause* pvalue);

EXTERN void asn1Print_Cause
   (const char* name, Cause* pvalue);

EXTERN Cause* asn1Test_Cause
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_ID                                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_ID {
   OSUINT32  numbits;
   OSOCTET data[1];
} RAB_ID;

EXTERN int asn1PE_RAB_ID (ASN1CTXT* pctxt, RAB_ID* pvalue);

EXTERN int asn1PD_RAB_ID (ASN1CTXT* pctxt, RAB_ID* pvalue);

EXTERN void asn1Print_RAB_ID
   (const char* name, RAB_ID* pvalue);

EXTERN RAB_ID* asn1Test_RAB_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UnsuccessfullyTransmittedDataVolume                       */
/*                                                            */
/**************************************************************/

typedef OSUINT32 UnsuccessfullyTransmittedDataVolume;

EXTERN int asn1PE_UnsuccessfullyTransmittedDataVolume (ASN1CTXT* pctxt, UnsuccessfullyTransmittedDataVolume value);

EXTERN int asn1PD_UnsuccessfullyTransmittedDataVolume (ASN1CTXT* pctxt, UnsuccessfullyTransmittedDataVolume* pvalue);

EXTERN void asn1Print_UnsuccessfullyTransmittedDataVolume
   (const char* name, UnsuccessfullyTransmittedDataVolume* pvalue);

EXTERN UnsuccessfullyTransmittedDataVolume* asn1Test_UnsuccessfullyTransmittedDataVolume
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DataVolumeReference                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DataVolumeReference;

EXTERN int asn1PE_DataVolumeReference (ASN1CTXT* pctxt, DataVolumeReference value);

EXTERN int asn1PD_DataVolumeReference (ASN1CTXT* pctxt, DataVolumeReference* pvalue);

EXTERN void asn1Print_DataVolumeReference
   (const char* name, DataVolumeReference* pvalue);

EXTERN DataVolumeReference* asn1Test_DataVolumeReference
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_GTP_PDU_SequenceNumber                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 DL_GTP_PDU_SequenceNumber;

EXTERN int asn1PE_DL_GTP_PDU_SequenceNumber (ASN1CTXT* pctxt, DL_GTP_PDU_SequenceNumber value);

EXTERN int asn1PD_DL_GTP_PDU_SequenceNumber (ASN1CTXT* pctxt, DL_GTP_PDU_SequenceNumber* pvalue);

EXTERN void asn1Print_DL_GTP_PDU_SequenceNumber
   (const char* name, DL_GTP_PDU_SequenceNumber* pvalue);

EXTERN DL_GTP_PDU_SequenceNumber* asn1Test_DL_GTP_PDU_SequenceNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_GTP_PDU_SequenceNumber                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 UL_GTP_PDU_SequenceNumber;

EXTERN int asn1PE_UL_GTP_PDU_SequenceNumber (ASN1CTXT* pctxt, UL_GTP_PDU_SequenceNumber value);

EXTERN int asn1PD_UL_GTP_PDU_SequenceNumber (ASN1CTXT* pctxt, UL_GTP_PDU_SequenceNumber* pvalue);

EXTERN void asn1Print_UL_GTP_PDU_SequenceNumber
   (const char* name, UL_GTP_PDU_SequenceNumber* pvalue);

EXTERN UL_GTP_PDU_SequenceNumber* asn1Test_UL_GTP_PDU_SequenceNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RepetitionNumber0                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RepetitionNumber0;

EXTERN int asn1PE_RepetitionNumber0 (ASN1CTXT* pctxt, RepetitionNumber0 value);

EXTERN int asn1PD_RepetitionNumber0 (ASN1CTXT* pctxt, RepetitionNumber0* pvalue);

EXTERN void asn1Print_RepetitionNumber0
   (const char* name, RepetitionNumber0* pvalue);

EXTERN RepetitionNumber0* asn1Test_RepetitionNumber0
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RepetitionNumber1                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT16 RepetitionNumber1;

EXTERN int asn1PE_RepetitionNumber1 (ASN1CTXT* pctxt, RepetitionNumber1 value);

EXTERN int asn1PD_RepetitionNumber1 (ASN1CTXT* pctxt, RepetitionNumber1* pvalue);

EXTERN void asn1Print_RepetitionNumber1
   (const char* name, RepetitionNumber1* pvalue);

EXTERN RepetitionNumber1* asn1Test_RepetitionNumber1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageStructure_element_iE_Extensions_element            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MessageStructure_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} MessageStructure_element_iE_Extensions_element;

EXTERN int asn1PE_MessageStructure_element_iE_Extensions_element (ASN1CTXT* pctxt, MessageStructure_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_MessageStructure_element_iE_Extensions_element (ASN1CTXT* pctxt, MessageStructure_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_MessageStructure_element_iE_Extensions_element (ASN1CTXT* pctxt,
   MessageStructure_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_MessageStructure_element_iE_Extensions_element (ASN1CTXT* pctxt,
   MessageStructure_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_MessageStructure_element_iE_Extensions_element
   (const char* name, MessageStructure_element_iE_Extensions_element* pvalue);

EXTERN MessageStructure_element_iE_Extensions_element* asn1Test_MessageStructure_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageStructure_element_iE_Extensions                    */
/*                                                            */
/**************************************************************/

/* List of MessageStructure_element_iE_Extensions_element */
typedef Asn1RTDList MessageStructure_element_iE_Extensions;

EXTERN int asn1PE_MessageStructure_element_iE_Extensions (ASN1CTXT* pctxt, MessageStructure_element_iE_Extensions* pvalue);

EXTERN int asn1PD_MessageStructure_element_iE_Extensions (ASN1CTXT* pctxt, MessageStructure_element_iE_Extensions* pvalue);

EXTERN void asn1Print_MessageStructure_element_iE_Extensions
   (const char* name, MessageStructure_element_iE_Extensions* pvalue);

EXTERN MessageStructure_element_iE_Extensions* asn1Test_MessageStructure_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageStructure_element                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MessageStructure_element {
   struct {
      unsigned repetitionNumberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ProtocolIE_ID iE_ID;
   RepetitionNumber1 repetitionNumber;
   MessageStructure_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} MessageStructure_element;

EXTERN int asn1PE_MessageStructure_element (ASN1CTXT* pctxt, MessageStructure_element* pvalue);

EXTERN int asn1PD_MessageStructure_element (ASN1CTXT* pctxt, MessageStructure_element* pvalue);

EXTERN void asn1Print_MessageStructure_element
   (const char* name, MessageStructure_element* pvalue);

EXTERN MessageStructure_element* asn1Test_MessageStructure_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageStructure                                          */
/*                                                            */
/**************************************************************/

/* List of MessageStructure_element */
typedef Asn1RTDList MessageStructure;

EXTERN int asn1PE_MessageStructure (ASN1CTXT* pctxt, MessageStructure* pvalue);

EXTERN int asn1PD_MessageStructure (ASN1CTXT* pctxt, MessageStructure* pvalue);

EXTERN void asn1Print_MessageStructure
   (const char* name, MessageStructure* pvalue);

EXTERN MessageStructure* asn1Test_MessageStructure
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _CriticalityDiagnostics_IE_List_ExtIEs_Extension          */
/*                                                            */
/**************************************************************/

typedef MessageStructure _CriticalityDiagnostics_IE_List_ExtIEs_Extension;

EXTERN int asn1PE__CriticalityDiagnostics_IE_List_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__CriticalityDiagnostics_IE_List_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__CriticalityDiagnostics_IE_List_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _CriticalityDiagnostics_IE_List_ExtIEs_Extension* asn1Test__CriticalityDiagnostics_IE_List_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TypeOfError                                               */
/*                                                            */
/**************************************************************/

typedef enum {
   not_understood = 0,
   missing = 1
} TypeOfError_Root;

typedef OSUINT32 TypeOfError;

EXTERN int asn1PE_TypeOfError (ASN1CTXT* pctxt, TypeOfError value);

EXTERN int asn1PD_TypeOfError (ASN1CTXT* pctxt, TypeOfError* pvalue);

EXTERN void asn1Print_TypeOfError
   (const char* name, TypeOfError* pvalue);

EXTERN TypeOfError* asn1Test_TypeOfError
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _CriticalityDiagnostics_IE_List_ExtIEs_Extension_1        */
/*                                                            */
/**************************************************************/

typedef TypeOfError _CriticalityDiagnostics_IE_List_ExtIEs_Extension_1;

EXTERN int asn1PE__CriticalityDiagnostics_IE_List_ExtIEs_Extension_1 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__CriticalityDiagnostics_IE_List_ExtIEs_Extension_1 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__CriticalityDiagnostics_IE_List_ExtIEs_Extension_1
   (const char* name, void* pvalue_);

EXTERN _CriticalityDiagnostics_IE_List_ExtIEs_Extension_1* asn1Test__CriticalityDiagnostics_IE_List_ExtIEs_Extension_1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element_iE_Extensions_ele  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CriticalityDiagnostics_IE_List_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} CriticalityDiagnostics_IE_List_element_iE_Extensions_element;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (ASN1CTXT* pctxt,
   CriticalityDiagnostics_IE_List_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (ASN1CTXT* pctxt,
   CriticalityDiagnostics_IE_List_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List_element_iE_Extensions_element
   (const char* name, CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN CriticalityDiagnostics_IE_List_element_iE_Extensions_element* asn1Test_CriticalityDiagnostics_IE_List_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element_iE_Extensions      */
/*                                                            */
/**************************************************************/

/* List of CriticalityDiagnostics_IE_List_element_iE_Extensions_element */
typedef Asn1RTDList CriticalityDiagnostics_IE_List_element_iE_Extensions;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List_element_iE_Extensions (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List_element_iE_Extensions (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List_element_iE_Extensions
   (const char* name, CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN CriticalityDiagnostics_IE_List_element_iE_Extensions* asn1Test_CriticalityDiagnostics_IE_List_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CriticalityDiagnostics_IE_List_element {
   struct {
      unsigned repetitionNumberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Criticality iECriticality;
   ProtocolIE_ID iE_ID;
   RepetitionNumber0 repetitionNumber;
   CriticalityDiagnostics_IE_List_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} CriticalityDiagnostics_IE_List_element;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List_element (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List_element (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List_element
   (const char* name, CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN CriticalityDiagnostics_IE_List_element* asn1Test_CriticalityDiagnostics_IE_List_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List                            */
/*                                                            */
/**************************************************************/

/* List of CriticalityDiagnostics_IE_List_element */
typedef Asn1RTDList CriticalityDiagnostics_IE_List;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List
   (const char* name, CriticalityDiagnostics_IE_List* pvalue);

EXTERN CriticalityDiagnostics_IE_List* asn1Test_CriticalityDiagnostics_IE_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions_element              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CriticalityDiagnostics_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} CriticalityDiagnostics_iE_Extensions_element;

EXTERN int asn1PE_CriticalityDiagnostics_iE_Extensions_element (ASN1CTXT* pctxt, CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_iE_Extensions_element (ASN1CTXT* pctxt, CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_CriticalityDiagnostics_iE_Extensions_element (ASN1CTXT* pctxt,
   CriticalityDiagnostics_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_CriticalityDiagnostics_iE_Extensions_element (ASN1CTXT* pctxt,
   CriticalityDiagnostics_iE_Extensions_element *pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_iE_Extensions_element
   (const char* name, CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN CriticalityDiagnostics_iE_Extensions_element* asn1Test_CriticalityDiagnostics_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions                      */
/*                                                            */
/**************************************************************/

/* List of CriticalityDiagnostics_iE_Extensions_element */
typedef Asn1RTDList CriticalityDiagnostics_iE_Extensions;

EXTERN int asn1PE_CriticalityDiagnostics_iE_Extensions (ASN1CTXT* pctxt, CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_iE_Extensions (ASN1CTXT* pctxt, CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_iE_Extensions
   (const char* name, CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN CriticalityDiagnostics_iE_Extensions* asn1Test_CriticalityDiagnostics_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CriticalityDiagnostics {
   struct {
      unsigned procedureCodePresent : 1;
      unsigned triggeringMessagePresent : 1;
      unsigned procedureCriticalityPresent : 1;
      unsigned iEsCriticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ProcedureCode procedureCode;
   TriggeringMessage triggeringMessage;
   Criticality procedureCriticality;
   CriticalityDiagnostics_IE_List iEsCriticalityDiagnostics;
   CriticalityDiagnostics_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} CriticalityDiagnostics;

EXTERN int asn1PE_CriticalityDiagnostics (ASN1CTXT* pctxt, CriticalityDiagnostics* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics (ASN1CTXT* pctxt, CriticalityDiagnostics* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics
   (const char* name, CriticalityDiagnostics* pvalue);

EXTERN CriticalityDiagnostics* asn1Test_CriticalityDiagnostics
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RelocationType                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   ue_not_involved = 0,
   ue_involved = 1
} RelocationType_Root;

typedef OSUINT32 RelocationType;

EXTERN int asn1PE_RelocationType (ASN1CTXT* pctxt, RelocationType value);

EXTERN int asn1PD_RelocationType (ASN1CTXT* pctxt, RelocationType* pvalue);

EXTERN void asn1Print_RelocationType
   (const char* name, RelocationType* pvalue);

EXTERN RelocationType* asn1Test_RelocationType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TBCD_STRING                                               */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr TBCD_STRING;

EXTERN int asn1PE_TBCD_STRING (ASN1CTXT* pctxt, TBCD_STRING value);

EXTERN int asn1PD_TBCD_STRING (ASN1CTXT* pctxt, TBCD_STRING* pvalue);

EXTERN void asn1Print_TBCD_STRING
   (const char* name, TBCD_STRING* pvalue);

EXTERN TBCD_STRING* asn1Test_TBCD_STRING
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PLMNidentity                                              */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr PLMNidentity;

EXTERN int asn1PE_PLMNidentity (ASN1CTXT* pctxt, PLMNidentity value);

EXTERN int asn1PD_PLMNidentity (ASN1CTXT* pctxt, PLMNidentity* pvalue);

EXTERN void asn1Print_PLMNidentity
   (const char* name, PLMNidentity* pvalue);

EXTERN PLMNidentity* asn1Test_PLMNidentity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RNC_ID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT16 RNC_ID;

EXTERN int asn1PE_RNC_ID (ASN1CTXT* pctxt, RNC_ID value);

EXTERN int asn1PD_RNC_ID (ASN1CTXT* pctxt, RNC_ID* pvalue);

EXTERN void asn1Print_RNC_ID
   (const char* name, RNC_ID* pvalue);

EXTERN RNC_ID* asn1Test_RNC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SourceRNC_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SourceRNC_ID_iE_Extensions_element;

EXTERN int asn1PE_SourceRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt, SourceRNC_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SourceRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt, SourceRNC_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SourceRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   SourceRNC_ID_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SourceRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   SourceRNC_ID_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SourceRNC_ID_iE_Extensions_element
   (const char* name, SourceRNC_ID_iE_Extensions_element* pvalue);

EXTERN SourceRNC_ID_iE_Extensions_element* asn1Test_SourceRNC_ID_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/

/* List of SourceRNC_ID_iE_Extensions_element */
typedef Asn1RTDList SourceRNC_ID_iE_Extensions;

EXTERN int asn1PE_SourceRNC_ID_iE_Extensions (ASN1CTXT* pctxt, SourceRNC_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_SourceRNC_ID_iE_Extensions (ASN1CTXT* pctxt, SourceRNC_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_SourceRNC_ID_iE_Extensions
   (const char* name, SourceRNC_ID_iE_Extensions* pvalue);

EXTERN SourceRNC_ID_iE_Extensions* asn1Test_SourceRNC_ID_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ID                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SourceRNC_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   RNC_ID rNC_ID;
   SourceRNC_ID_iE_Extensions iE_Extensions;
} SourceRNC_ID;

EXTERN int asn1PE_SourceRNC_ID (ASN1CTXT* pctxt, SourceRNC_ID* pvalue);

EXTERN int asn1PD_SourceRNC_ID (ASN1CTXT* pctxt, SourceRNC_ID* pvalue);

EXTERN void asn1Print_SourceRNC_ID
   (const char* name, SourceRNC_ID* pvalue);

EXTERN SourceRNC_ID* asn1Test_SourceRNC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LAC                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LAC {
   OSUINT32 numocts;
   OSOCTET data[2];
} LAC;

EXTERN int asn1PE_LAC (ASN1CTXT* pctxt, LAC* pvalue);

EXTERN int asn1PD_LAC (ASN1CTXT* pctxt, LAC* pvalue);

EXTERN void asn1Print_LAC
   (const char* name, LAC* pvalue);

EXTERN LAC* asn1Test_LAC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAC                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAC {
   OSUINT32 numocts;
   OSOCTET data[2];
} SAC;

EXTERN int asn1PE_SAC (ASN1CTXT* pctxt, SAC* pvalue);

EXTERN int asn1PD_SAC (ASN1CTXT* pctxt, SAC* pvalue);

EXTERN void asn1Print_SAC
   (const char* name, SAC* pvalue);

EXTERN SAC* asn1Test_SAC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SAI_iE_Extensions_element;

EXTERN int asn1PE_SAI_iE_Extensions_element (ASN1CTXT* pctxt, SAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SAI_iE_Extensions_element (ASN1CTXT* pctxt, SAI_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SAI_iE_Extensions_element (ASN1CTXT* pctxt,
   SAI_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SAI_iE_Extensions_element (ASN1CTXT* pctxt,
   SAI_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SAI_iE_Extensions_element
   (const char* name, SAI_iE_Extensions_element* pvalue);

EXTERN SAI_iE_Extensions_element* asn1Test_SAI_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/

/* List of SAI_iE_Extensions_element */
typedef Asn1RTDList SAI_iE_Extensions;

EXTERN int asn1PE_SAI_iE_Extensions (ASN1CTXT* pctxt, SAI_iE_Extensions* pvalue);

EXTERN int asn1PD_SAI_iE_Extensions (ASN1CTXT* pctxt, SAI_iE_Extensions* pvalue);

EXTERN void asn1Print_SAI_iE_Extensions
   (const char* name, SAI_iE_Extensions* pvalue);

EXTERN SAI_iE_Extensions* asn1Test_SAI_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAI                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   LAC lAC;
   SAC sAC;
   SAI_iE_Extensions iE_Extensions;
} SAI;

EXTERN int asn1PE_SAI (ASN1CTXT* pctxt, SAI* pvalue);

EXTERN int asn1PD_SAI (ASN1CTXT* pctxt, SAI* pvalue);

EXTERN void asn1Print_SAI
   (const char* name, SAI* pvalue);

EXTERN SAI* asn1Test_SAI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceID                                                  */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_SourceID_sourceRNC_ID         1
#define T_SourceID_sAI                  2
#define T_SourceID_extElem1             3

typedef struct EXTERN SourceID {
   int t;
   union {
      /* t = 1 */
      SourceRNC_ID *sourceRNC_ID;
      /* t = 2 */
      SAI *sAI;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} SourceID;

EXTERN int asn1PE_SourceID (ASN1CTXT* pctxt, SourceID* pvalue);

EXTERN int asn1PD_SourceID (ASN1CTXT* pctxt, SourceID* pvalue);

EXTERN void asn1Print_SourceID
   (const char* name, SourceID* pvalue);

EXTERN SourceID* asn1Test_SourceID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LAI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LAI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} LAI_iE_Extensions_element;

EXTERN int asn1PE_LAI_iE_Extensions_element (ASN1CTXT* pctxt, LAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_LAI_iE_Extensions_element (ASN1CTXT* pctxt, LAI_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_LAI_iE_Extensions_element (ASN1CTXT* pctxt,
   LAI_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_LAI_iE_Extensions_element (ASN1CTXT* pctxt,
   LAI_iE_Extensions_element *pvalue);

EXTERN void asn1Print_LAI_iE_Extensions_element
   (const char* name, LAI_iE_Extensions_element* pvalue);

EXTERN LAI_iE_Extensions_element* asn1Test_LAI_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LAI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/

/* List of LAI_iE_Extensions_element */
typedef Asn1RTDList LAI_iE_Extensions;

EXTERN int asn1PE_LAI_iE_Extensions (ASN1CTXT* pctxt, LAI_iE_Extensions* pvalue);

EXTERN int asn1PD_LAI_iE_Extensions (ASN1CTXT* pctxt, LAI_iE_Extensions* pvalue);

EXTERN void asn1Print_LAI_iE_Extensions
   (const char* name, LAI_iE_Extensions* pvalue);

EXTERN LAI_iE_Extensions* asn1Test_LAI_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LAI                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   LAC lAC;
   LAI_iE_Extensions iE_Extensions;
} LAI;

EXTERN int asn1PE_LAI (ASN1CTXT* pctxt, LAI* pvalue);

EXTERN int asn1PD_LAI (ASN1CTXT* pctxt, LAI* pvalue);

EXTERN void asn1Print_LAI
   (const char* name, LAI* pvalue);

EXTERN LAI* asn1Test_LAI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAC                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAC {
   OSUINT32 numocts;
   OSOCTET data[1];
} RAC;

EXTERN int asn1PE_RAC (ASN1CTXT* pctxt, RAC* pvalue);

EXTERN int asn1PD_RAC (ASN1CTXT* pctxt, RAC* pvalue);

EXTERN void asn1Print_RAC
   (const char* name, RAC* pvalue);

EXTERN RAC* asn1Test_RAC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TargetRNC_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} TargetRNC_ID_iE_Extensions_element;

EXTERN int asn1PE_TargetRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt, TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TargetRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt, TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_TargetRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   TargetRNC_ID_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_TargetRNC_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   TargetRNC_ID_iE_Extensions_element *pvalue);

EXTERN void asn1Print_TargetRNC_ID_iE_Extensions_element
   (const char* name, TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN TargetRNC_ID_iE_Extensions_element* asn1Test_TargetRNC_ID_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/

/* List of TargetRNC_ID_iE_Extensions_element */
typedef Asn1RTDList TargetRNC_ID_iE_Extensions;

EXTERN int asn1PE_TargetRNC_ID_iE_Extensions (ASN1CTXT* pctxt, TargetRNC_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_TargetRNC_ID_iE_Extensions (ASN1CTXT* pctxt, TargetRNC_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_TargetRNC_ID_iE_Extensions
   (const char* name, TargetRNC_ID_iE_Extensions* pvalue);

EXTERN TargetRNC_ID_iE_Extensions* asn1Test_TargetRNC_ID_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ID                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TargetRNC_ID {
   struct {
      unsigned rACPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   LAI lAI;
   RAC rAC;
   RNC_ID rNC_ID;
   TargetRNC_ID_iE_Extensions iE_Extensions;
} TargetRNC_ID;

EXTERN int asn1PE_TargetRNC_ID (ASN1CTXT* pctxt, TargetRNC_ID* pvalue);

EXTERN int asn1PD_TargetRNC_ID (ASN1CTXT* pctxt, TargetRNC_ID* pvalue);

EXTERN void asn1Print_TargetRNC_ID
   (const char* name, TargetRNC_ID* pvalue);

EXTERN TargetRNC_ID* asn1Test_TargetRNC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CI                                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CI {
   OSUINT32 numocts;
   OSOCTET data[2];
} CI;

EXTERN int asn1PE_CI (ASN1CTXT* pctxt, CI* pvalue);

EXTERN int asn1PD_CI (ASN1CTXT* pctxt, CI* pvalue);

EXTERN void asn1Print_CI
   (const char* name, CI* pvalue);

EXTERN CI* asn1Test_CI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _CGI_ExtIEs_Extension                                     */
/*                                                            */
/**************************************************************/

typedef RAC _CGI_ExtIEs_Extension;

EXTERN int asn1PE__CGI_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__CGI_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__CGI_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _CGI_ExtIEs_Extension* asn1Test__CGI_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CGI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CGI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} CGI_iE_Extensions_element;

EXTERN int asn1PE_CGI_iE_Extensions_element (ASN1CTXT* pctxt, CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CGI_iE_Extensions_element (ASN1CTXT* pctxt, CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_CGI_iE_Extensions_element (ASN1CTXT* pctxt,
   CGI_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_CGI_iE_Extensions_element (ASN1CTXT* pctxt,
   CGI_iE_Extensions_element *pvalue);

EXTERN void asn1Print_CGI_iE_Extensions_element
   (const char* name, CGI_iE_Extensions_element* pvalue);

EXTERN CGI_iE_Extensions_element* asn1Test_CGI_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CGI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/

/* List of CGI_iE_Extensions_element */
typedef Asn1RTDList CGI_iE_Extensions;

EXTERN int asn1PE_CGI_iE_Extensions (ASN1CTXT* pctxt, CGI_iE_Extensions* pvalue);

EXTERN int asn1PD_CGI_iE_Extensions (ASN1CTXT* pctxt, CGI_iE_Extensions* pvalue);

EXTERN void asn1Print_CGI_iE_Extensions
   (const char* name, CGI_iE_Extensions* pvalue);

EXTERN CGI_iE_Extensions* asn1Test_CGI_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CGI                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   LAC lAC;
   CI cI;
   CGI_iE_Extensions iE_Extensions;
} CGI;

EXTERN int asn1PE_CGI (ASN1CTXT* pctxt, CGI* pvalue);

EXTERN int asn1PD_CGI (ASN1CTXT* pctxt, CGI* pvalue);

EXTERN void asn1Print_CGI
   (const char* name, CGI* pvalue);

EXTERN CGI* asn1Test_CGI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetID                                                  */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TargetID_targetRNC_ID         1
#define T_TargetID_cGI                  2
#define T_TargetID_extElem1             3

typedef struct EXTERN TargetID {
   int t;
   union {
      /* t = 1 */
      TargetRNC_ID *targetRNC_ID;
      /* t = 2 */
      CGI *cGI;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TargetID;

EXTERN int asn1PE_TargetID (ASN1CTXT* pctxt, TargetID* pvalue);

EXTERN int asn1PD_TargetID (ASN1CTXT* pctxt, TargetID* pvalue);

EXTERN void asn1Print_TargetID
   (const char* name, TargetID* pvalue);

EXTERN TargetID* asn1Test_TargetID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ClassmarkInformation2                                     */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr ClassmarkInformation2;

EXTERN int asn1PE_ClassmarkInformation2 (ASN1CTXT* pctxt, ClassmarkInformation2 value);

EXTERN int asn1PD_ClassmarkInformation2 (ASN1CTXT* pctxt, ClassmarkInformation2* pvalue);

EXTERN void asn1Print_ClassmarkInformation2
   (const char* name, ClassmarkInformation2* pvalue);

EXTERN ClassmarkInformation2* asn1Test_ClassmarkInformation2
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ClassmarkInformation3                                     */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr ClassmarkInformation3;

EXTERN int asn1PE_ClassmarkInformation3 (ASN1CTXT* pctxt, ClassmarkInformation3 value);

EXTERN int asn1PD_ClassmarkInformation3 (ASN1CTXT* pctxt, ClassmarkInformation3* pvalue);

EXTERN void asn1Print_ClassmarkInformation3
   (const char* name, ClassmarkInformation3* pvalue);

EXTERN ClassmarkInformation3* asn1Test_ClassmarkInformation3
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RRC_Container                                             */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr RRC_Container;

EXTERN int asn1PE_RRC_Container (ASN1CTXT* pctxt, RRC_Container value);

EXTERN int asn1PD_RRC_Container (ASN1CTXT* pctxt, RRC_Container* pvalue);

EXTERN void asn1Print_RRC_Container
   (const char* name, RRC_Container* pvalue);

EXTERN RRC_Container* asn1Test_RRC_Container
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NumberOfIuInstances                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 NumberOfIuInstances;

EXTERN int asn1PE_NumberOfIuInstances (ASN1CTXT* pctxt, NumberOfIuInstances value);

EXTERN int asn1PD_NumberOfIuInstances (ASN1CTXT* pctxt, NumberOfIuInstances* pvalue);

EXTERN void asn1Print_NumberOfIuInstances
   (const char* name, NumberOfIuInstances* pvalue);

EXTERN NumberOfIuInstances* asn1Test_NumberOfIuInstances
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionAlgorithm                              */
/*                                                            */
/**************************************************************/

typedef enum {
   standard_UMTS_integrity_algorithm_UIA1 = 0,
   no_value = 15
} IntegrityProtectionAlgorithm_Root;

typedef OSUINT8 IntegrityProtectionAlgorithm;

EXTERN int asn1PE_IntegrityProtectionAlgorithm (ASN1CTXT* pctxt, IntegrityProtectionAlgorithm value);

EXTERN int asn1PD_IntegrityProtectionAlgorithm (ASN1CTXT* pctxt, IntegrityProtectionAlgorithm* pvalue);

EXTERN void asn1Print_IntegrityProtectionAlgorithm
   (const char* name, IntegrityProtectionAlgorithm* pvalue);

EXTERN IntegrityProtectionAlgorithm* asn1Test_IntegrityProtectionAlgorithm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ChosenIntegrityProtectionAlgorithm                        */
/*                                                            */
/**************************************************************/

typedef IntegrityProtectionAlgorithm ChosenIntegrityProtectionAlgorithm;

EXTERN int asn1PE_ChosenIntegrityProtectionAlgorithm (ASN1CTXT* pctxt, ChosenIntegrityProtectionAlgorithm value);

EXTERN int asn1PD_ChosenIntegrityProtectionAlgorithm (ASN1CTXT* pctxt, ChosenIntegrityProtectionAlgorithm* pvalue);

EXTERN void asn1Print_ChosenIntegrityProtectionAlgorithm
   (const char* name, ChosenIntegrityProtectionAlgorithm* pvalue);

EXTERN ChosenIntegrityProtectionAlgorithm* asn1Test_ChosenIntegrityProtectionAlgorithm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionKey                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IntegrityProtectionKey {
   OSUINT32  numbits;
   OSOCTET data[16];
} IntegrityProtectionKey;

EXTERN int asn1PE_IntegrityProtectionKey (ASN1CTXT* pctxt, IntegrityProtectionKey* pvalue);

EXTERN int asn1PD_IntegrityProtectionKey (ASN1CTXT* pctxt, IntegrityProtectionKey* pvalue);

EXTERN void asn1Print_IntegrityProtectionKey
   (const char* name, IntegrityProtectionKey* pvalue);

EXTERN IntegrityProtectionKey* asn1Test_IntegrityProtectionKey
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EncryptionAlgorithm                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   no_encryption = 0,
   standard_UMTS_encryption_algorith_UEA1 = 1
} EncryptionAlgorithm_Root;

typedef OSUINT8 EncryptionAlgorithm;

EXTERN int asn1PE_EncryptionAlgorithm (ASN1CTXT* pctxt, EncryptionAlgorithm value);

EXTERN int asn1PD_EncryptionAlgorithm (ASN1CTXT* pctxt, EncryptionAlgorithm* pvalue);

EXTERN void asn1Print_EncryptionAlgorithm
   (const char* name, EncryptionAlgorithm* pvalue);

EXTERN EncryptionAlgorithm* asn1Test_EncryptionAlgorithm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ChosenEncryptionAlgorithm                                 */
/*                                                            */
/**************************************************************/

typedef EncryptionAlgorithm ChosenEncryptionAlgorithm;

EXTERN int asn1PE_ChosenEncryptionAlgorithm (ASN1CTXT* pctxt, ChosenEncryptionAlgorithm value);

EXTERN int asn1PD_ChosenEncryptionAlgorithm (ASN1CTXT* pctxt, ChosenEncryptionAlgorithm* pvalue);

EXTERN void asn1Print_ChosenEncryptionAlgorithm
   (const char* name, ChosenEncryptionAlgorithm* pvalue);

EXTERN ChosenEncryptionAlgorithm* asn1Test_ChosenEncryptionAlgorithm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EncryptionKey                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN EncryptionKey {
   OSUINT32  numbits;
   OSOCTET data[16];
} EncryptionKey;

EXTERN int asn1PE_EncryptionKey (ASN1CTXT* pctxt, EncryptionKey* pvalue);

EXTERN int asn1PD_EncryptionKey (ASN1CTXT* pctxt, EncryptionKey* pvalue);

EXTERN void asn1Print_EncryptionKey
   (const char* name, EncryptionKey* pvalue);

EXTERN EncryptionKey* asn1Test_EncryptionKey
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  D_RNTI                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT32 D_RNTI;

EXTERN int asn1PE_D_RNTI (ASN1CTXT* pctxt, D_RNTI value);

EXTERN int asn1PD_D_RNTI (ASN1CTXT* pctxt, D_RNTI* pvalue);

EXTERN void asn1Print_D_RNTI
   (const char* name, D_RNTI* pvalue);

EXTERN D_RNTI* asn1Test_D_RNTI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetCellId                                              */
/*                                                            */
/**************************************************************/

typedef OSUINT32 TargetCellId;

EXTERN int asn1PE_TargetCellId (ASN1CTXT* pctxt, TargetCellId value);

EXTERN int asn1PD_TargetCellId (ASN1CTXT* pctxt, TargetCellId* pvalue);

EXTERN void asn1Print_TargetCellId
   (const char* name, TargetCellId* pvalue);

EXTERN TargetCellId* asn1Test_TargetCellId
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DCH_ID;

EXTERN int asn1PE_DCH_ID (ASN1CTXT* pctxt, DCH_ID value);

EXTERN int asn1PD_DCH_ID (ASN1CTXT* pctxt, DCH_ID* pvalue);

EXTERN void asn1Print_DCH_ID
   (const char* name, DCH_ID* pvalue);

EXTERN DCH_ID* asn1Test_DCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSCH_ID                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DSCH_ID;

EXTERN int asn1PE_DSCH_ID (ASN1CTXT* pctxt, DSCH_ID value);

EXTERN int asn1PD_DSCH_ID (ASN1CTXT* pctxt, DSCH_ID* pvalue);

EXTERN void asn1Print_DSCH_ID
   (const char* name, DSCH_ID* pvalue);

EXTERN DSCH_ID* asn1Test_DSCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  USCH_ID                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 USCH_ID;

EXTERN int asn1PE_USCH_ID (ASN1CTXT* pctxt, USCH_ID value);

EXTERN int asn1PD_USCH_ID (ASN1CTXT* pctxt, USCH_ID* pvalue);

EXTERN void asn1Print_USCH_ID
   (const char* name, USCH_ID* pvalue);

EXTERN USCH_ID* asn1Test_USCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCH_MAC_d_Flow_ID                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_DSCH_MAC_d_Flow_ID;

EXTERN int asn1PE_HS_DSCH_MAC_d_Flow_ID (ASN1CTXT* pctxt, HS_DSCH_MAC_d_Flow_ID value);

EXTERN int asn1PD_HS_DSCH_MAC_d_Flow_ID (ASN1CTXT* pctxt, HS_DSCH_MAC_d_Flow_ID* pvalue);

EXTERN void asn1Print_HS_DSCH_MAC_d_Flow_ID
   (const char* name, HS_DSCH_MAC_d_Flow_ID* pvalue);

EXTERN HS_DSCH_MAC_d_Flow_ID* asn1Test_HS_DSCH_MAC_d_Flow_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _TrCH_ID_ExtIEs_Extension                                 */
/*                                                            */
/**************************************************************/

typedef HS_DSCH_MAC_d_Flow_ID _TrCH_ID_ExtIEs_Extension;

EXTERN int asn1PE__TrCH_ID_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__TrCH_ID_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__TrCH_ID_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _TrCH_ID_ExtIEs_Extension* asn1Test__TrCH_ID_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MAC_d_Flow_ID                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_DCH_MAC_d_Flow_ID;

EXTERN int asn1PE_E_DCH_MAC_d_Flow_ID (ASN1CTXT* pctxt, E_DCH_MAC_d_Flow_ID value);

EXTERN int asn1PD_E_DCH_MAC_d_Flow_ID (ASN1CTXT* pctxt, E_DCH_MAC_d_Flow_ID* pvalue);

EXTERN void asn1Print_E_DCH_MAC_d_Flow_ID
   (const char* name, E_DCH_MAC_d_Flow_ID* pvalue);

EXTERN E_DCH_MAC_d_Flow_ID* asn1Test_E_DCH_MAC_d_Flow_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _TrCH_ID_ExtIEs_Extension_1                               */
/*                                                            */
/**************************************************************/

typedef E_DCH_MAC_d_Flow_ID _TrCH_ID_ExtIEs_Extension_1;

EXTERN int asn1PE__TrCH_ID_ExtIEs_Extension_1 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__TrCH_ID_ExtIEs_Extension_1 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__TrCH_ID_ExtIEs_Extension_1
   (const char* name, void* pvalue_);

EXTERN _TrCH_ID_ExtIEs_Extension_1* asn1Test__TrCH_ID_ExtIEs_Extension_1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrCH_ID_iE_Extensions_element                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TrCH_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} TrCH_ID_iE_Extensions_element;

EXTERN int asn1PE_TrCH_ID_iE_Extensions_element (ASN1CTXT* pctxt, TrCH_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TrCH_ID_iE_Extensions_element (ASN1CTXT* pctxt, TrCH_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_TrCH_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   TrCH_ID_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_TrCH_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   TrCH_ID_iE_Extensions_element *pvalue);

EXTERN void asn1Print_TrCH_ID_iE_Extensions_element
   (const char* name, TrCH_ID_iE_Extensions_element* pvalue);

EXTERN TrCH_ID_iE_Extensions_element* asn1Test_TrCH_ID_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrCH_ID_iE_Extensions                                     */
/*                                                            */
/**************************************************************/

/* List of TrCH_ID_iE_Extensions_element */
typedef Asn1RTDList TrCH_ID_iE_Extensions;

EXTERN int asn1PE_TrCH_ID_iE_Extensions (ASN1CTXT* pctxt, TrCH_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_TrCH_ID_iE_Extensions (ASN1CTXT* pctxt, TrCH_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_TrCH_ID_iE_Extensions
   (const char* name, TrCH_ID_iE_Extensions* pvalue);

EXTERN TrCH_ID_iE_Extensions* asn1Test_TrCH_ID_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrCH_ID                                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TrCH_ID {
   struct {
      unsigned dCH_IDPresent : 1;
      unsigned dSCH_IDPresent : 1;
      unsigned uSCH_IDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_ID;
   DSCH_ID dSCH_ID;
   USCH_ID uSCH_ID;
   TrCH_ID_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} TrCH_ID;

EXTERN int asn1PE_TrCH_ID (ASN1CTXT* pctxt, TrCH_ID* pvalue);

EXTERN int asn1PD_TrCH_ID (ASN1CTXT* pctxt, TrCH_ID* pvalue);

EXTERN void asn1Print_TrCH_ID
   (const char* name, TrCH_ID* pvalue);

EXTERN TrCH_ID* asn1Test_TrCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrCH_ID_List                                              */
/*                                                            */
/**************************************************************/

/* List of TrCH_ID */
typedef Asn1RTDList TrCH_ID_List;

EXTERN int asn1PE_TrCH_ID_List (ASN1CTXT* pctxt, TrCH_ID_List* pvalue);

EXTERN int asn1PD_TrCH_ID_List (ASN1CTXT* pctxt, TrCH_ID_List* pvalue);

EXTERN void asn1Print_TrCH_ID_List
   (const char* name, TrCH_ID_List* pvalue);

EXTERN TrCH_ID_List* asn1Test_TrCH_ID_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CN_DomainIndicator                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   cs_domain = 0,
   ps_domain = 1
} CN_DomainIndicator_Root;

typedef OSUINT32 CN_DomainIndicator;

EXTERN int asn1PE_CN_DomainIndicator (ASN1CTXT* pctxt, CN_DomainIndicator value);

EXTERN int asn1PD_CN_DomainIndicator (ASN1CTXT* pctxt, CN_DomainIndicator* pvalue);

EXTERN void asn1Print_CN_DomainIndicator
   (const char* name, CN_DomainIndicator* pvalue);

EXTERN CN_DomainIndicator* asn1Test_CN_DomainIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _RAB_TrCH_MappingItem_ExtIEs_Extension                    */
/*                                                            */
/**************************************************************/

typedef CN_DomainIndicator _RAB_TrCH_MappingItem_ExtIEs_Extension;

EXTERN int asn1PE__RAB_TrCH_MappingItem_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__RAB_TrCH_MappingItem_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__RAB_TrCH_MappingItem_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _RAB_TrCH_MappingItem_ExtIEs_Extension* asn1Test__RAB_TrCH_MappingItem_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_TrCH_MappingItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_TrCH_MappingItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} RAB_TrCH_MappingItem_iE_Extensions_element;

EXTERN int asn1PE_RAB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt, RAB_TrCH_MappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RAB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt, RAB_TrCH_MappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_RAB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt,
   RAB_TrCH_MappingItem_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_RAB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt,
   RAB_TrCH_MappingItem_iE_Extensions_element *pvalue);

EXTERN void asn1Print_RAB_TrCH_MappingItem_iE_Extensions_element
   (const char* name, RAB_TrCH_MappingItem_iE_Extensions_element* pvalue);

EXTERN RAB_TrCH_MappingItem_iE_Extensions_element* asn1Test_RAB_TrCH_MappingItem_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_TrCH_MappingItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/

/* List of RAB_TrCH_MappingItem_iE_Extensions_element */
typedef Asn1RTDList RAB_TrCH_MappingItem_iE_Extensions;

EXTERN int asn1PE_RAB_TrCH_MappingItem_iE_Extensions (ASN1CTXT* pctxt, RAB_TrCH_MappingItem_iE_Extensions* pvalue);

EXTERN int asn1PD_RAB_TrCH_MappingItem_iE_Extensions (ASN1CTXT* pctxt, RAB_TrCH_MappingItem_iE_Extensions* pvalue);

EXTERN void asn1Print_RAB_TrCH_MappingItem_iE_Extensions
   (const char* name, RAB_TrCH_MappingItem_iE_Extensions* pvalue);

EXTERN RAB_TrCH_MappingItem_iE_Extensions* asn1Test_RAB_TrCH_MappingItem_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_TrCH_MappingItem                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_TrCH_MappingItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RAB_ID rAB_ID;
   TrCH_ID_List trCH_ID_List;
   RAB_TrCH_MappingItem_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} RAB_TrCH_MappingItem;

EXTERN int asn1PE_RAB_TrCH_MappingItem (ASN1CTXT* pctxt, RAB_TrCH_MappingItem* pvalue);

EXTERN int asn1PD_RAB_TrCH_MappingItem (ASN1CTXT* pctxt, RAB_TrCH_MappingItem* pvalue);

EXTERN void asn1Print_RAB_TrCH_MappingItem
   (const char* name, RAB_TrCH_MappingItem* pvalue);

EXTERN RAB_TrCH_MappingItem* asn1Test_RAB_TrCH_MappingItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_TrCH_Mapping                                          */
/*                                                            */
/**************************************************************/

/* List of RAB_TrCH_MappingItem */
typedef Asn1RTDList RAB_TrCH_Mapping;

EXTERN int asn1PE_RAB_TrCH_Mapping (ASN1CTXT* pctxt, RAB_TrCH_Mapping* pvalue);

EXTERN int asn1PD_RAB_TrCH_Mapping (ASN1CTXT* pctxt, RAB_TrCH_Mapping* pvalue);

EXTERN void asn1Print_RAB_TrCH_Mapping
   (const char* name, RAB_TrCH_Mapping* pvalue);

EXTERN RAB_TrCH_Mapping* asn1Test_RAB_TrCH_Mapping
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SRB_ID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SRB_ID;

EXTERN int asn1PE_SRB_ID (ASN1CTXT* pctxt, SRB_ID value);

EXTERN int asn1PD_SRB_ID (ASN1CTXT* pctxt, SRB_ID* pvalue);

EXTERN void asn1Print_SRB_ID
   (const char* name, SRB_ID* pvalue);

EXTERN SRB_ID* asn1Test_SRB_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SRB_TrCH_MappingItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SRB_TrCH_MappingItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SRB_TrCH_MappingItem_iE_Extensions_element;

EXTERN int asn1PE_SRB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt, SRB_TrCH_MappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SRB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt, SRB_TrCH_MappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SRB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt,
   SRB_TrCH_MappingItem_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SRB_TrCH_MappingItem_iE_Extensions_element (ASN1CTXT* pctxt,
   SRB_TrCH_MappingItem_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SRB_TrCH_MappingItem_iE_Extensions_element
   (const char* name, SRB_TrCH_MappingItem_iE_Extensions_element* pvalue);

EXTERN SRB_TrCH_MappingItem_iE_Extensions_element* asn1Test_SRB_TrCH_MappingItem_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SRB_TrCH_MappingItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/

/* List of SRB_TrCH_MappingItem_iE_Extensions_element */
typedef Asn1RTDList SRB_TrCH_MappingItem_iE_Extensions;

EXTERN int asn1PE_SRB_TrCH_MappingItem_iE_Extensions (ASN1CTXT* pctxt, SRB_TrCH_MappingItem_iE_Extensions* pvalue);

EXTERN int asn1PD_SRB_TrCH_MappingItem_iE_Extensions (ASN1CTXT* pctxt, SRB_TrCH_MappingItem_iE_Extensions* pvalue);

EXTERN void asn1Print_SRB_TrCH_MappingItem_iE_Extensions
   (const char* name, SRB_TrCH_MappingItem_iE_Extensions* pvalue);

EXTERN SRB_TrCH_MappingItem_iE_Extensions* asn1Test_SRB_TrCH_MappingItem_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SRB_TrCH_MappingItem                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SRB_TrCH_MappingItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SRB_ID sRB_ID;
   TrCH_ID trCH_ID;
   SRB_TrCH_MappingItem_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} SRB_TrCH_MappingItem;

EXTERN int asn1PE_SRB_TrCH_MappingItem (ASN1CTXT* pctxt, SRB_TrCH_MappingItem* pvalue);

EXTERN int asn1PD_SRB_TrCH_MappingItem (ASN1CTXT* pctxt, SRB_TrCH_MappingItem* pvalue);

EXTERN void asn1Print_SRB_TrCH_MappingItem
   (const char* name, SRB_TrCH_MappingItem* pvalue);

EXTERN SRB_TrCH_MappingItem* asn1Test_SRB_TrCH_MappingItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SRB_TrCH_Mapping                                          */
/*                                                            */
/**************************************************************/

/* List of SRB_TrCH_MappingItem */
typedef Asn1RTDList SRB_TrCH_Mapping;

EXTERN int asn1PE_SRB_TrCH_Mapping (ASN1CTXT* pctxt, SRB_TrCH_Mapping* pvalue);

EXTERN int asn1PD_SRB_TrCH_Mapping (ASN1CTXT* pctxt, SRB_TrCH_Mapping* pvalue);

EXTERN void asn1Print_SRB_TrCH_Mapping
   (const char* name, SRB_TrCH_Mapping* pvalue);

EXTERN SRB_TrCH_Mapping* asn1Test_SRB_TrCH_Mapping
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Exten  */
/*                                                            */
/**************************************************************/

typedef SRB_TrCH_Mapping _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension;

EXTERN int asn1PE__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension* asn1Test__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceUTRANCellID_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SourceUTRANCellID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SourceUTRANCellID_iE_Extensions_element;

EXTERN int asn1PE_SourceUTRANCellID_iE_Extensions_element (ASN1CTXT* pctxt, SourceUTRANCellID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SourceUTRANCellID_iE_Extensions_element (ASN1CTXT* pctxt, SourceUTRANCellID_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SourceUTRANCellID_iE_Extensions_element (ASN1CTXT* pctxt,
   SourceUTRANCellID_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SourceUTRANCellID_iE_Extensions_element (ASN1CTXT* pctxt,
   SourceUTRANCellID_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SourceUTRANCellID_iE_Extensions_element
   (const char* name, SourceUTRANCellID_iE_Extensions_element* pvalue);

EXTERN SourceUTRANCellID_iE_Extensions_element* asn1Test_SourceUTRANCellID_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceUTRANCellID_iE_Extensions                           */
/*                                                            */
/**************************************************************/

/* List of SourceUTRANCellID_iE_Extensions_element */
typedef Asn1RTDList SourceUTRANCellID_iE_Extensions;

EXTERN int asn1PE_SourceUTRANCellID_iE_Extensions (ASN1CTXT* pctxt, SourceUTRANCellID_iE_Extensions* pvalue);

EXTERN int asn1PD_SourceUTRANCellID_iE_Extensions (ASN1CTXT* pctxt, SourceUTRANCellID_iE_Extensions* pvalue);

EXTERN void asn1Print_SourceUTRANCellID_iE_Extensions
   (const char* name, SourceUTRANCellID_iE_Extensions* pvalue);

EXTERN SourceUTRANCellID_iE_Extensions* asn1Test_SourceUTRANCellID_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceUTRANCellID                                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SourceUTRANCellID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   TargetCellId uTRANcellID;
   SourceUTRANCellID_iE_Extensions iE_Extensions;
} SourceUTRANCellID;

EXTERN int asn1PE_SourceUTRANCellID (ASN1CTXT* pctxt, SourceUTRANCellID* pvalue);

EXTERN int asn1PD_SourceUTRANCellID (ASN1CTXT* pctxt, SourceUTRANCellID* pvalue);

EXTERN void asn1Print_SourceUTRANCellID
   (const char* name, SourceUTRANCellID* pvalue);

EXTERN SourceUTRANCellID* asn1Test_SourceUTRANCellID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceCellID                                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_SourceCellID_sourceUTRANCellID 1
#define T_SourceCellID_sourceGERANCellID 2
#define T_SourceCellID_extElem1         3

typedef struct EXTERN SourceCellID {
   int t;
   union {
      /* t = 1 */
      SourceUTRANCellID *sourceUTRANCellID;
      /* t = 2 */
      CGI *sourceGERANCellID;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} SourceCellID;

EXTERN int asn1PE_SourceCellID (ASN1CTXT* pctxt, SourceCellID* pvalue);

EXTERN int asn1PD_SourceCellID (ASN1CTXT* pctxt, SourceCellID* pvalue);

EXTERN void asn1Print_SourceCellID
   (const char* name, SourceCellID* pvalue);

EXTERN SourceCellID* asn1Test_SourceCellID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Cell_Capacity_Class_Value                                 */
/*                                                            */
/**************************************************************/

typedef OSINT32 Cell_Capacity_Class_Value;

EXTERN int asn1PE_Cell_Capacity_Class_Value (ASN1CTXT* pctxt, Cell_Capacity_Class_Value value);

EXTERN int asn1PD_Cell_Capacity_Class_Value (ASN1CTXT* pctxt, Cell_Capacity_Class_Value* pvalue);

EXTERN void asn1Print_Cell_Capacity_Class_Value
   (const char* name, Cell_Capacity_Class_Value* pvalue);

EXTERN Cell_Capacity_Class_Value* asn1Test_Cell_Capacity_Class_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LoadValue                                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 LoadValue;

EXTERN int asn1PE_LoadValue (ASN1CTXT* pctxt, LoadValue value);

EXTERN int asn1PD_LoadValue (ASN1CTXT* pctxt, LoadValue* pvalue);

EXTERN void asn1Print_LoadValue
   (const char* name, LoadValue* pvalue);

EXTERN LoadValue* asn1Test_LoadValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RTLoadValue                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RTLoadValue;

EXTERN int asn1PE_RTLoadValue (ASN1CTXT* pctxt, RTLoadValue value);

EXTERN int asn1PD_RTLoadValue (ASN1CTXT* pctxt, RTLoadValue* pvalue);

EXTERN void asn1Print_RTLoadValue
   (const char* name, RTLoadValue* pvalue);

EXTERN RTLoadValue* asn1Test_RTLoadValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NRTLoadInformationValue                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 NRTLoadInformationValue;

EXTERN int asn1PE_NRTLoadInformationValue (ASN1CTXT* pctxt, NRTLoadInformationValue value);

EXTERN int asn1PD_NRTLoadInformationValue (ASN1CTXT* pctxt, NRTLoadInformationValue* pvalue);

EXTERN void asn1Print_NRTLoadInformationValue
   (const char* name, NRTLoadInformationValue* pvalue);

EXTERN NRTLoadInformationValue* asn1Test_NRTLoadInformationValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellLoadInformation_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CellLoadInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} CellLoadInformation_iE_Extensions_element;

EXTERN int asn1PE_CellLoadInformation_iE_Extensions_element (ASN1CTXT* pctxt, CellLoadInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellLoadInformation_iE_Extensions_element (ASN1CTXT* pctxt, CellLoadInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_CellLoadInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   CellLoadInformation_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_CellLoadInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   CellLoadInformation_iE_Extensions_element *pvalue);

EXTERN void asn1Print_CellLoadInformation_iE_Extensions_element
   (const char* name, CellLoadInformation_iE_Extensions_element* pvalue);

EXTERN CellLoadInformation_iE_Extensions_element* asn1Test_CellLoadInformation_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellLoadInformation_iE_Extensions                         */
/*                                                            */
/**************************************************************/

/* List of CellLoadInformation_iE_Extensions_element */
typedef Asn1RTDList CellLoadInformation_iE_Extensions;

EXTERN int asn1PE_CellLoadInformation_iE_Extensions (ASN1CTXT* pctxt, CellLoadInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_CellLoadInformation_iE_Extensions (ASN1CTXT* pctxt, CellLoadInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_CellLoadInformation_iE_Extensions
   (const char* name, CellLoadInformation_iE_Extensions* pvalue);

EXTERN CellLoadInformation_iE_Extensions* asn1Test_CellLoadInformation_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellLoadInformation                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CellLoadInformation {
   struct {
      unsigned rTLoadValuePresent : 1;
      unsigned nRTLoadInformationValuePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cell_Capacity_Class_Value cell_Capacity_Class_Value;
   LoadValue loadValue;
   RTLoadValue rTLoadValue;
   NRTLoadInformationValue nRTLoadInformationValue;
   CellLoadInformation_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} CellLoadInformation;

EXTERN int asn1PE_CellLoadInformation (ASN1CTXT* pctxt, CellLoadInformation* pvalue);

EXTERN int asn1PD_CellLoadInformation (ASN1CTXT* pctxt, CellLoadInformation* pvalue);

EXTERN void asn1Print_CellLoadInformation
   (const char* name, CellLoadInformation* pvalue);

EXTERN CellLoadInformation* asn1Test_CellLoadInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellLoadInformationGroup_iE_Extensions_element            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CellLoadInformationGroup_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} CellLoadInformationGroup_iE_Extensions_element;

EXTERN int asn1PE_CellLoadInformationGroup_iE_Extensions_element (ASN1CTXT* pctxt, CellLoadInformationGroup_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellLoadInformationGroup_iE_Extensions_element (ASN1CTXT* pctxt, CellLoadInformationGroup_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_CellLoadInformationGroup_iE_Extensions_element (ASN1CTXT* pctxt,
   CellLoadInformationGroup_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_CellLoadInformationGroup_iE_Extensions_element (ASN1CTXT* pctxt,
   CellLoadInformationGroup_iE_Extensions_element *pvalue);

EXTERN void asn1Print_CellLoadInformationGroup_iE_Extensions_element
   (const char* name, CellLoadInformationGroup_iE_Extensions_element* pvalue);

EXTERN CellLoadInformationGroup_iE_Extensions_element* asn1Test_CellLoadInformationGroup_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellLoadInformationGroup_iE_Extensions                    */
/*                                                            */
/**************************************************************/

/* List of CellLoadInformationGroup_iE_Extensions_element */
typedef Asn1RTDList CellLoadInformationGroup_iE_Extensions;

EXTERN int asn1PE_CellLoadInformationGroup_iE_Extensions (ASN1CTXT* pctxt, CellLoadInformationGroup_iE_Extensions* pvalue);

EXTERN int asn1PD_CellLoadInformationGroup_iE_Extensions (ASN1CTXT* pctxt, CellLoadInformationGroup_iE_Extensions* pvalue);

EXTERN void asn1Print_CellLoadInformationGroup_iE_Extensions
   (const char* name, CellLoadInformationGroup_iE_Extensions* pvalue);

EXTERN CellLoadInformationGroup_iE_Extensions* asn1Test_CellLoadInformationGroup_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellLoadInformationGroup                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CellLoadInformationGroup {
   struct {
      unsigned uplinkCellLoadInformationPresent : 1;
      unsigned downlinkCellLoadInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SourceCellID sourceCellID;
   CellLoadInformation uplinkCellLoadInformation;
   CellLoadInformation downlinkCellLoadInformation;
   CellLoadInformationGroup_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} CellLoadInformationGroup;

EXTERN int asn1PE_CellLoadInformationGroup (ASN1CTXT* pctxt, CellLoadInformationGroup* pvalue);

EXTERN int asn1PD_CellLoadInformationGroup (ASN1CTXT* pctxt, CellLoadInformationGroup* pvalue);

EXTERN void asn1Print_CellLoadInformationGroup
   (const char* name, CellLoadInformationGroup* pvalue);

EXTERN CellLoadInformationGroup* asn1Test_CellLoadInformationGroup
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Exten  */
/*                                                            */
/**************************************************************/

typedef CellLoadInformationGroup _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_1;

EXTERN int asn1PE__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_1 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_1 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_1
   (const char* name, void* pvalue_);

EXTERN _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_1* asn1Test__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceReference                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TraceReference {
   OSUINT32 numocts;
   OSOCTET data[3];
} TraceReference;

EXTERN int asn1PE_TraceReference (ASN1CTXT* pctxt, TraceReference* pvalue);

EXTERN int asn1PD_TraceReference (ASN1CTXT* pctxt, TraceReference* pvalue);

EXTERN void asn1Print_TraceReference
   (const char* name, TraceReference* pvalue);

EXTERN TraceReference* asn1Test_TraceReference
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceRecordingSessionReference                            */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TraceRecordingSessionReference;

EXTERN int asn1PE_TraceRecordingSessionReference (ASN1CTXT* pctxt, TraceRecordingSessionReference value);

EXTERN int asn1PD_TraceRecordingSessionReference (ASN1CTXT* pctxt, TraceRecordingSessionReference* pvalue);

EXTERN void asn1Print_TraceRecordingSessionReference
   (const char* name, TraceRecordingSessionReference* pvalue);

EXTERN TraceRecordingSessionReference* asn1Test_TraceRecordingSessionReference
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceRecordingSessionInformation_iE_Extensions_element    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TraceRecordingSessionInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} TraceRecordingSessionInformation_iE_Extensions_element;

EXTERN int asn1PE_TraceRecordingSessionInformation_iE_Extensions_element (ASN1CTXT* pctxt, TraceRecordingSessionInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TraceRecordingSessionInformation_iE_Extensions_element (ASN1CTXT* pctxt, TraceRecordingSessionInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_TraceRecordingSessionInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   TraceRecordingSessionInformation_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_TraceRecordingSessionInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   TraceRecordingSessionInformation_iE_Extensions_element *pvalue);

EXTERN void asn1Print_TraceRecordingSessionInformation_iE_Extensions_element
   (const char* name, TraceRecordingSessionInformation_iE_Extensions_element* pvalue);

EXTERN TraceRecordingSessionInformation_iE_Extensions_element* asn1Test_TraceRecordingSessionInformation_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceRecordingSessionInformation_iE_Extensions            */
/*                                                            */
/**************************************************************/

/* List of TraceRecordingSessionInformation_iE_Extensions_element */
typedef Asn1RTDList TraceRecordingSessionInformation_iE_Extensions;

EXTERN int asn1PE_TraceRecordingSessionInformation_iE_Extensions (ASN1CTXT* pctxt, TraceRecordingSessionInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_TraceRecordingSessionInformation_iE_Extensions (ASN1CTXT* pctxt, TraceRecordingSessionInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_TraceRecordingSessionInformation_iE_Extensions
   (const char* name, TraceRecordingSessionInformation_iE_Extensions* pvalue);

EXTERN TraceRecordingSessionInformation_iE_Extensions* asn1Test_TraceRecordingSessionInformation_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceRecordingSessionInformation                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TraceRecordingSessionInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TraceReference traceReference;
   TraceRecordingSessionReference traceRecordingSessionReference;
   TraceRecordingSessionInformation_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} TraceRecordingSessionInformation;

EXTERN int asn1PE_TraceRecordingSessionInformation (ASN1CTXT* pctxt, TraceRecordingSessionInformation* pvalue);

EXTERN int asn1PD_TraceRecordingSessionInformation (ASN1CTXT* pctxt, TraceRecordingSessionInformation* pvalue);

EXTERN void asn1Print_TraceRecordingSessionInformation
   (const char* name, TraceRecordingSessionInformation* pvalue);

EXTERN TraceRecordingSessionInformation* asn1Test_TraceRecordingSessionInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Exten  */
/*                                                            */
/**************************************************************/

typedef TraceRecordingSessionInformation _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_2;

EXTERN int asn1PE__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_2 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_2 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_2
   (const char* name, void* pvalue_);

EXTERN _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_2* asn1Test__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_2
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSLinkingInformation                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   uE_has_joined_multicast_services = 0
} MBMSLinkingInformation_Root;

typedef OSUINT32 MBMSLinkingInformation;

EXTERN int asn1PE_MBMSLinkingInformation (ASN1CTXT* pctxt, MBMSLinkingInformation value);

EXTERN int asn1PD_MBMSLinkingInformation (ASN1CTXT* pctxt, MBMSLinkingInformation* pvalue);

EXTERN void asn1Print_MBMSLinkingInformation
   (const char* name, MBMSLinkingInformation* pvalue);

EXTERN MBMSLinkingInformation* asn1Test_MBMSLinkingInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Exten  */
/*                                                            */
/**************************************************************/

typedef MBMSLinkingInformation _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_3;

EXTERN int asn1PE__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_3 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_3 (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_3
   (const char* name, void* pvalue_);

EXTERN _SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_3* asn1Test__SourceRNC_ToTargetRNC_TransparentContainer_ExtIEs_Extension_3
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt, SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt, SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt,
   SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt,
   SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element
   (const char* name, SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element* asn1Test_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/

/* List of SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions_element */
typedef Asn1RTDList SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions (ASN1CTXT* pctxt, SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions (ASN1CTXT* pctxt, SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions
   (const char* name, SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions* pvalue);

EXTERN SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions* asn1Test_SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ToTargetRNC_TransparentContainer                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SourceRNC_ToTargetRNC_TransparentContainer {
   struct {
      unsigned chosenIntegrityProtectionAlgorithmPresent : 1;
      unsigned integrityProtectionKeyPresent : 1;
      unsigned chosenEncryptionAlgorithForSignallingPresent : 1;
      unsigned cipheringKeyPresent : 1;
      unsigned chosenEncryptionAlgorithForCSPresent : 1;
      unsigned chosenEncryptionAlgorithForPSPresent : 1;
      unsigned d_RNTIPresent : 1;
      unsigned targetCellIdPresent : 1;
      unsigned rAB_TrCH_MappingPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RRC_Container rRC_Container;
   NumberOfIuInstances numberOfIuInstances;
   RelocationType relocationType;
   ChosenIntegrityProtectionAlgorithm chosenIntegrityProtectionAlgorithm;
   IntegrityProtectionKey integrityProtectionKey;
   ChosenEncryptionAlgorithm chosenEncryptionAlgorithForSignalling;
   EncryptionKey cipheringKey;
   ChosenEncryptionAlgorithm chosenEncryptionAlgorithForCS;
   ChosenEncryptionAlgorithm chosenEncryptionAlgorithForPS;
   D_RNTI d_RNTI;
   TargetCellId targetCellId;
   RAB_TrCH_Mapping rAB_TrCH_Mapping;
   SourceRNC_ToTargetRNC_TransparentContainer_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} SourceRNC_ToTargetRNC_TransparentContainer;

EXTERN int asn1PE_SourceRNC_ToTargetRNC_TransparentContainer (ASN1CTXT* pctxt, SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN int asn1PD_SourceRNC_ToTargetRNC_TransparentContainer (ASN1CTXT* pctxt, SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN void asn1Print_SourceRNC_ToTargetRNC_TransparentContainer
   (const char* name, SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN SourceRNC_ToTargetRNC_TransparentContainer* asn1Test_SourceRNC_ToTargetRNC_TransparentContainer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  OldBSS_ToNewBSS_Information                               */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr OldBSS_ToNewBSS_Information;

EXTERN int asn1PE_OldBSS_ToNewBSS_Information (ASN1CTXT* pctxt, OldBSS_ToNewBSS_Information value);

EXTERN int asn1PD_OldBSS_ToNewBSS_Information (ASN1CTXT* pctxt, OldBSS_ToNewBSS_Information* pvalue);

EXTERN void asn1Print_OldBSS_ToNewBSS_Information
   (const char* name, OldBSS_ToNewBSS_Information* pvalue);

EXTERN OldBSS_ToNewBSS_Information* asn1Test_OldBSS_ToNewBSS_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GERAN_Classmark                                           */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr GERAN_Classmark;

EXTERN int asn1PE_GERAN_Classmark (ASN1CTXT* pctxt, GERAN_Classmark value);

EXTERN int asn1PD_GERAN_Classmark (ASN1CTXT* pctxt, GERAN_Classmark* pvalue);

EXTERN void asn1Print_GERAN_Classmark
   (const char* name, GERAN_Classmark* pvalue);

EXTERN GERAN_Classmark* asn1Test_GERAN_Classmark
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceBSS_ToTargetBSS_TransparentContainer                */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr SourceBSS_ToTargetBSS_TransparentContainer;

EXTERN int asn1PE_SourceBSS_ToTargetBSS_TransparentContainer (ASN1CTXT* pctxt, SourceBSS_ToTargetBSS_TransparentContainer value);

EXTERN int asn1PD_SourceBSS_ToTargetBSS_TransparentContainer (ASN1CTXT* pctxt, SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

EXTERN void asn1Print_SourceBSS_ToTargetBSS_TransparentContainer
   (const char* name, SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

EXTERN SourceBSS_ToTargetBSS_TransparentContainer* asn1Test_SourceBSS_ToTargetBSS_TransparentContainer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt, TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt, TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt,
   TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt,
   TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element *pvalue);

EXTERN void asn1Print_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element
   (const char* name, TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element* asn1Test_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/

/* List of TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions_element */
typedef Asn1RTDList TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions (ASN1CTXT* pctxt, TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions (ASN1CTXT* pctxt, TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions
   (const char* name, TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions* pvalue);

EXTERN TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions* asn1Test_TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ToSourceRNC_TransparentContainer                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TargetRNC_ToSourceRNC_TransparentContainer {
   struct {
      unsigned d_RNTIPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RRC_Container rRC_Container;
   D_RNTI d_RNTI;
   TargetRNC_ToSourceRNC_TransparentContainer_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} TargetRNC_ToSourceRNC_TransparentContainer;

EXTERN int asn1PE_TargetRNC_ToSourceRNC_TransparentContainer (ASN1CTXT* pctxt, TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN int asn1PD_TargetRNC_ToSourceRNC_TransparentContainer (ASN1CTXT* pctxt, TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN void asn1Print_TargetRNC_ToSourceRNC_TransparentContainer
   (const char* name, TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN TargetRNC_ToSourceRNC_TransparentContainer* asn1Test_TargetRNC_ToSourceRNC_TransparentContainer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  L3_Information                                            */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr L3_Information;

EXTERN int asn1PE_L3_Information (ASN1CTXT* pctxt, L3_Information value);

EXTERN int asn1PD_L3_Information (ASN1CTXT* pctxt, L3_Information* pvalue);

EXTERN void asn1Print_L3_Information
   (const char* name, L3_Information* pvalue);

EXTERN L3_Information* asn1Test_L3_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportLayerAddress                                     */
/*                                                            */
/**************************************************************/

typedef ASN1DynBitStr TransportLayerAddress;

EXTERN int asn1PE_TransportLayerAddress (ASN1CTXT* pctxt, TransportLayerAddress value);

EXTERN int asn1PD_TransportLayerAddress (ASN1CTXT* pctxt, TransportLayerAddress* pvalue);

EXTERN void asn1Print_TransportLayerAddress
   (const char* name, TransportLayerAddress* pvalue);

EXTERN TransportLayerAddress* asn1Test_TransportLayerAddress
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GTP_TEI                                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GTP_TEI {
   OSUINT32 numocts;
   OSOCTET data[4];
} GTP_TEI;

EXTERN int asn1PE_GTP_TEI (ASN1CTXT* pctxt, GTP_TEI* pvalue);

EXTERN int asn1PD_GTP_TEI (ASN1CTXT* pctxt, GTP_TEI* pvalue);

EXTERN void asn1Print_GTP_TEI
   (const char* name, GTP_TEI* pvalue);

EXTERN GTP_TEI* asn1Test_GTP_TEI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BindingID                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN BindingID {
   OSUINT32 numocts;
   OSOCTET data[4];
} BindingID;

EXTERN int asn1PE_BindingID (ASN1CTXT* pctxt, BindingID* pvalue);

EXTERN int asn1PD_BindingID (ASN1CTXT* pctxt, BindingID* pvalue);

EXTERN void asn1Print_BindingID
   (const char* name, BindingID* pvalue);

EXTERN BindingID* asn1Test_BindingID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IuTransportAssociation                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_IuTransportAssociation_gTP_TEI 1
#define T_IuTransportAssociation_bindingID 2
#define T_IuTransportAssociation_extElem1 3

typedef struct EXTERN IuTransportAssociation {
   int t;
   union {
      /* t = 1 */
      GTP_TEI *gTP_TEI;
      /* t = 2 */
      BindingID *bindingID;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} IuTransportAssociation;

EXTERN int asn1PE_IuTransportAssociation (ASN1CTXT* pctxt, IuTransportAssociation* pvalue);

EXTERN int asn1PD_IuTransportAssociation (ASN1CTXT* pctxt, IuTransportAssociation* pvalue);

EXTERN void asn1Print_IuTransportAssociation
   (const char* name, IuTransportAssociation* pvalue);

EXTERN IuTransportAssociation* asn1Test_IuTransportAssociation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterSystemInformation_TransparentContainer_iE_Extension  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InterSystemInformation_TransparentContainer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} InterSystemInformation_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_InterSystemInformation_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt, InterSystemInformation_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_InterSystemInformation_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt, InterSystemInformation_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_InterSystemInformation_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt,
   InterSystemInformation_TransparentContainer_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_InterSystemInformation_TransparentContainer_iE_Extensions_element (ASN1CTXT* pctxt,
   InterSystemInformation_TransparentContainer_iE_Extensions_element *pvalue);

EXTERN void asn1Print_InterSystemInformation_TransparentContainer_iE_Extensions_element
   (const char* name, InterSystemInformation_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN InterSystemInformation_TransparentContainer_iE_Extensions_element* asn1Test_InterSystemInformation_TransparentContainer_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterSystemInformation_TransparentContainer_iE_Extension  */
/*                                                            */
/**************************************************************/

/* List of InterSystemInformation_TransparentContainer_iE_Extensions_element */
typedef Asn1RTDList InterSystemInformation_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_InterSystemInformation_TransparentContainer_iE_Extensions (ASN1CTXT* pctxt, InterSystemInformation_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_InterSystemInformation_TransparentContainer_iE_Extensions (ASN1CTXT* pctxt, InterSystemInformation_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_InterSystemInformation_TransparentContainer_iE_Extensions
   (const char* name, InterSystemInformation_TransparentContainer_iE_Extensions* pvalue);

EXTERN InterSystemInformation_TransparentContainer_iE_Extensions* asn1Test_InterSystemInformation_TransparentContainer_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterSystemInformation_TransparentContainer               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InterSystemInformation_TransparentContainer {
   struct {
      unsigned downlinkCellLoadInformationPresent : 1;
      unsigned uplinkCellLoadInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellLoadInformation downlinkCellLoadInformation;
   CellLoadInformation uplinkCellLoadInformation;
   InterSystemInformation_TransparentContainer_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} InterSystemInformation_TransparentContainer;

EXTERN int asn1PE_InterSystemInformation_TransparentContainer (ASN1CTXT* pctxt, InterSystemInformation_TransparentContainer* pvalue);

EXTERN int asn1PD_InterSystemInformation_TransparentContainer (ASN1CTXT* pctxt, InterSystemInformation_TransparentContainer* pvalue);

EXTERN void asn1Print_InterSystemInformation_TransparentContainer
   (const char* name, InterSystemInformation_TransparentContainer* pvalue);

EXTERN InterSystemInformation_TransparentContainer* asn1Test_InterSystemInformation_TransparentContainer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TargetBSS_ToSourceBSS_TransparentContainer                */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr TargetBSS_ToSourceBSS_TransparentContainer;

EXTERN int asn1PE_TargetBSS_ToSourceBSS_TransparentContainer (ASN1CTXT* pctxt, TargetBSS_ToSourceBSS_TransparentContainer value);

EXTERN int asn1PD_TargetBSS_ToSourceBSS_TransparentContainer (ASN1CTXT* pctxt, TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

EXTERN void asn1Print_TargetBSS_ToSourceBSS_TransparentContainer
   (const char* name, TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

EXTERN TargetBSS_ToSourceBSS_TransparentContainer* asn1Test_TargetBSS_ToSourceBSS_TransparentContainer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMSI                                                      */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr IMSI;

EXTERN int asn1PE_IMSI (ASN1CTXT* pctxt, IMSI value);

EXTERN int asn1PD_IMSI (ASN1CTXT* pctxt, IMSI* pvalue);

EXTERN void asn1Print_IMSI
   (const char* name, IMSI* pvalue);

EXTERN IMSI* asn1Test_IMSI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PermanentNAS_UE_ID                                        */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_PermanentNAS_UE_ID_iMSI       1
#define T_PermanentNAS_UE_ID_extElem1   2

typedef struct EXTERN PermanentNAS_UE_ID {
   int t;
   union {
      /* t = 1 */
      IMSI *iMSI;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} PermanentNAS_UE_ID;

EXTERN int asn1PE_PermanentNAS_UE_ID (ASN1CTXT* pctxt, PermanentNAS_UE_ID* pvalue);

EXTERN int asn1PD_PermanentNAS_UE_ID (ASN1CTXT* pctxt, PermanentNAS_UE_ID* pvalue);

EXTERN void asn1Print_PermanentNAS_UE_ID
   (const char* name, PermanentNAS_UE_ID* pvalue);

EXTERN PermanentNAS_UE_ID* asn1Test_PermanentNAS_UE_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NAS_SynchronisationIndicator                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NAS_SynchronisationIndicator {
   OSUINT32  numbits;
   OSOCTET data[1];
} NAS_SynchronisationIndicator;

EXTERN int asn1PE_NAS_SynchronisationIndicator (ASN1CTXT* pctxt, NAS_SynchronisationIndicator* pvalue);

EXTERN int asn1PD_NAS_SynchronisationIndicator (ASN1CTXT* pctxt, NAS_SynchronisationIndicator* pvalue);

EXTERN void asn1Print_NAS_SynchronisationIndicator
   (const char* name, NAS_SynchronisationIndicator* pvalue);

EXTERN NAS_SynchronisationIndicator* asn1Test_NAS_SynchronisationIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrafficClass                                              */
/*                                                            */
/**************************************************************/

typedef enum {
   conversational = 0,
   streaming = 1,
   interactive = 2,
   background = 3
} TrafficClass_Root;

typedef OSUINT32 TrafficClass;

EXTERN int asn1PE_TrafficClass (ASN1CTXT* pctxt, TrafficClass value);

EXTERN int asn1PD_TrafficClass (ASN1CTXT* pctxt, TrafficClass* pvalue);

EXTERN void asn1Print_TrafficClass
   (const char* name, TrafficClass* pvalue);

EXTERN TrafficClass* asn1Test_TrafficClass
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_AsymmetryIndicator                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   symmetric_bidirectional = 0,
   asymmetric_unidirectional_downlink = 1,
   asymmetric_unidirectional_uplink = 2,
   asymmetric_bidirectional = 3
} RAB_AsymmetryIndicator_Root;

typedef OSUINT32 RAB_AsymmetryIndicator;

EXTERN int asn1PE_RAB_AsymmetryIndicator (ASN1CTXT* pctxt, RAB_AsymmetryIndicator value);

EXTERN int asn1PD_RAB_AsymmetryIndicator (ASN1CTXT* pctxt, RAB_AsymmetryIndicator* pvalue);

EXTERN void asn1Print_RAB_AsymmetryIndicator
   (const char* name, RAB_AsymmetryIndicator* pvalue);

EXTERN RAB_AsymmetryIndicator* asn1Test_RAB_AsymmetryIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaxBitrate                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT32 MaxBitrate;

EXTERN int asn1PE_MaxBitrate (ASN1CTXT* pctxt, MaxBitrate value);

EXTERN int asn1PD_MaxBitrate (ASN1CTXT* pctxt, MaxBitrate* pvalue);

EXTERN void asn1Print_MaxBitrate
   (const char* name, MaxBitrate* pvalue);

EXTERN MaxBitrate* asn1Test_MaxBitrate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_Parameter_MaxBitrateList                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_Parameter_MaxBitrateList {
   OSUINT32 n;
   MaxBitrate elem[2];
} RAB_Parameter_MaxBitrateList;

EXTERN int asn1PE_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, RAB_Parameter_MaxBitrateList* pvalue);

EXTERN int asn1PD_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, RAB_Parameter_MaxBitrateList* pvalue);

EXTERN void asn1Print_RAB_Parameter_MaxBitrateList
   (const char* name, RAB_Parameter_MaxBitrateList* pvalue);

EXTERN RAB_Parameter_MaxBitrateList* asn1Test_RAB_Parameter_MaxBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GuaranteedBitrate                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT32 GuaranteedBitrate;

EXTERN int asn1PE_GuaranteedBitrate (ASN1CTXT* pctxt, GuaranteedBitrate value);

EXTERN int asn1PD_GuaranteedBitrate (ASN1CTXT* pctxt, GuaranteedBitrate* pvalue);

EXTERN void asn1Print_GuaranteedBitrate
   (const char* name, GuaranteedBitrate* pvalue);

EXTERN GuaranteedBitrate* asn1Test_GuaranteedBitrate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_Parameter_GuaranteedBitrateList                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_Parameter_GuaranteedBitrateList {
   OSUINT32 n;
   GuaranteedBitrate elem[2];
} RAB_Parameter_GuaranteedBitrateList;

EXTERN int asn1PE_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN int asn1PD_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN void asn1Print_RAB_Parameter_GuaranteedBitrateList
   (const char* name, RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN RAB_Parameter_GuaranteedBitrateList* asn1Test_RAB_Parameter_GuaranteedBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DeliveryOrder                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   delivery_order_requested = 0,
   delivery_order_not_requested = 1
} DeliveryOrder_Root;

typedef OSUINT32 DeliveryOrder;

EXTERN int asn1PE_DeliveryOrder (ASN1CTXT* pctxt, DeliveryOrder value);

EXTERN int asn1PD_DeliveryOrder (ASN1CTXT* pctxt, DeliveryOrder* pvalue);

EXTERN void asn1Print_DeliveryOrder
   (const char* name, DeliveryOrder* pvalue);

EXTERN DeliveryOrder* asn1Test_DeliveryOrder
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaxSDU_Size                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT16 MaxSDU_Size;

EXTERN int asn1PE_MaxSDU_Size (ASN1CTXT* pctxt, MaxSDU_Size value);

EXTERN int asn1PD_MaxSDU_Size (ASN1CTXT* pctxt, MaxSDU_Size* pvalue);

EXTERN void asn1Print_MaxSDU_Size
   (const char* name, MaxSDU_Size* pvalue);

EXTERN MaxSDU_Size* asn1Test_MaxSDU_Size
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_ErrorRatio_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SDU_ErrorRatio_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SDU_ErrorRatio_iE_Extensions_element;

EXTERN int asn1PE_SDU_ErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt, SDU_ErrorRatio_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SDU_ErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt, SDU_ErrorRatio_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SDU_ErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt,
   SDU_ErrorRatio_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SDU_ErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt,
   SDU_ErrorRatio_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SDU_ErrorRatio_iE_Extensions_element
   (const char* name, SDU_ErrorRatio_iE_Extensions_element* pvalue);

EXTERN SDU_ErrorRatio_iE_Extensions_element* asn1Test_SDU_ErrorRatio_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_ErrorRatio_iE_Extensions                              */
/*                                                            */
/**************************************************************/

/* List of SDU_ErrorRatio_iE_Extensions_element */
typedef Asn1RTDList SDU_ErrorRatio_iE_Extensions;

EXTERN int asn1PE_SDU_ErrorRatio_iE_Extensions (ASN1CTXT* pctxt, SDU_ErrorRatio_iE_Extensions* pvalue);

EXTERN int asn1PD_SDU_ErrorRatio_iE_Extensions (ASN1CTXT* pctxt, SDU_ErrorRatio_iE_Extensions* pvalue);

EXTERN void asn1Print_SDU_ErrorRatio_iE_Extensions
   (const char* name, SDU_ErrorRatio_iE_Extensions* pvalue);

EXTERN SDU_ErrorRatio_iE_Extensions* asn1Test_SDU_ErrorRatio_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_ErrorRatio                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SDU_ErrorRatio {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT8 mantissa;
   OSUINT8 exponent;
   SDU_ErrorRatio_iE_Extensions iE_Extensions;
} SDU_ErrorRatio;

EXTERN int asn1PE_SDU_ErrorRatio (ASN1CTXT* pctxt, SDU_ErrorRatio* pvalue);

EXTERN int asn1PD_SDU_ErrorRatio (ASN1CTXT* pctxt, SDU_ErrorRatio* pvalue);

EXTERN void asn1Print_SDU_ErrorRatio
   (const char* name, SDU_ErrorRatio* pvalue);

EXTERN SDU_ErrorRatio* asn1Test_SDU_ErrorRatio
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ResidualBitErrorRatio_iE_Extensions_element               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ResidualBitErrorRatio_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} ResidualBitErrorRatio_iE_Extensions_element;

EXTERN int asn1PE_ResidualBitErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt, ResidualBitErrorRatio_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ResidualBitErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt, ResidualBitErrorRatio_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_ResidualBitErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt,
   ResidualBitErrorRatio_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_ResidualBitErrorRatio_iE_Extensions_element (ASN1CTXT* pctxt,
   ResidualBitErrorRatio_iE_Extensions_element *pvalue);

EXTERN void asn1Print_ResidualBitErrorRatio_iE_Extensions_element
   (const char* name, ResidualBitErrorRatio_iE_Extensions_element* pvalue);

EXTERN ResidualBitErrorRatio_iE_Extensions_element* asn1Test_ResidualBitErrorRatio_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ResidualBitErrorRatio_iE_Extensions                       */
/*                                                            */
/**************************************************************/

/* List of ResidualBitErrorRatio_iE_Extensions_element */
typedef Asn1RTDList ResidualBitErrorRatio_iE_Extensions;

EXTERN int asn1PE_ResidualBitErrorRatio_iE_Extensions (ASN1CTXT* pctxt, ResidualBitErrorRatio_iE_Extensions* pvalue);

EXTERN int asn1PD_ResidualBitErrorRatio_iE_Extensions (ASN1CTXT* pctxt, ResidualBitErrorRatio_iE_Extensions* pvalue);

EXTERN void asn1Print_ResidualBitErrorRatio_iE_Extensions
   (const char* name, ResidualBitErrorRatio_iE_Extensions* pvalue);

EXTERN ResidualBitErrorRatio_iE_Extensions* asn1Test_ResidualBitErrorRatio_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ResidualBitErrorRatio                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ResidualBitErrorRatio {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT8 mantissa;
   OSUINT8 exponent;
   ResidualBitErrorRatio_iE_Extensions iE_Extensions;
} ResidualBitErrorRatio;

EXTERN int asn1PE_ResidualBitErrorRatio (ASN1CTXT* pctxt, ResidualBitErrorRatio* pvalue);

EXTERN int asn1PD_ResidualBitErrorRatio (ASN1CTXT* pctxt, ResidualBitErrorRatio* pvalue);

EXTERN void asn1Print_ResidualBitErrorRatio
   (const char* name, ResidualBitErrorRatio* pvalue);

EXTERN ResidualBitErrorRatio* asn1Test_ResidualBitErrorRatio
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DeliveryOfErroneousSDU                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   yes = 0,
   no = 1,
   no_error_detection_consideration = 2
} DeliveryOfErroneousSDU_Root;

typedef OSUINT32 DeliveryOfErroneousSDU;

EXTERN int asn1PE_DeliveryOfErroneousSDU (ASN1CTXT* pctxt, DeliveryOfErroneousSDU value);

EXTERN int asn1PD_DeliveryOfErroneousSDU (ASN1CTXT* pctxt, DeliveryOfErroneousSDU* pvalue);

EXTERN void asn1Print_DeliveryOfErroneousSDU
   (const char* name, DeliveryOfErroneousSDU* pvalue);

EXTERN DeliveryOfErroneousSDU* asn1Test_DeliveryOfErroneousSDU
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SubflowSDU_Size                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT16 SubflowSDU_Size;

EXTERN int asn1PE_SubflowSDU_Size (ASN1CTXT* pctxt, SubflowSDU_Size value);

EXTERN int asn1PD_SubflowSDU_Size (ASN1CTXT* pctxt, SubflowSDU_Size* pvalue);

EXTERN void asn1Print_SubflowSDU_Size
   (const char* name, SubflowSDU_Size* pvalue);

EXTERN SubflowSDU_Size* asn1Test_SubflowSDU_Size
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_SubflowCombinationBitRate                             */
/*                                                            */
/**************************************************************/

typedef OSUINT32 RAB_SubflowCombinationBitRate;

EXTERN int asn1PE_RAB_SubflowCombinationBitRate (ASN1CTXT* pctxt, RAB_SubflowCombinationBitRate value);

EXTERN int asn1PD_RAB_SubflowCombinationBitRate (ASN1CTXT* pctxt, RAB_SubflowCombinationBitRate* pvalue);

EXTERN void asn1Print_RAB_SubflowCombinationBitRate
   (const char* name, RAB_SubflowCombinationBitRate* pvalue);

EXTERN RAB_SubflowCombinationBitRate* asn1Test_RAB_SubflowCombinationBitRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_FormatInformationParameters_element_iE_Extensions_el  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SDU_FormatInformationParameters_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SDU_FormatInformationParameters_element_iE_Extensions_element;

EXTERN int asn1PE_SDU_FormatInformationParameters_element_iE_Extensions_element (ASN1CTXT* pctxt, SDU_FormatInformationParameters_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SDU_FormatInformationParameters_element_iE_Extensions_element (ASN1CTXT* pctxt, SDU_FormatInformationParameters_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SDU_FormatInformationParameters_element_iE_Extensions_element (ASN1CTXT* pctxt,
   SDU_FormatInformationParameters_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SDU_FormatInformationParameters_element_iE_Extensions_element (ASN1CTXT* pctxt,
   SDU_FormatInformationParameters_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SDU_FormatInformationParameters_element_iE_Extensions_element
   (const char* name, SDU_FormatInformationParameters_element_iE_Extensions_element* pvalue);

EXTERN SDU_FormatInformationParameters_element_iE_Extensions_element* asn1Test_SDU_FormatInformationParameters_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_FormatInformationParameters_element_iE_Extensions     */
/*                                                            */
/**************************************************************/

/* List of SDU_FormatInformationParameters_element_iE_Extensions_element */
typedef Asn1RTDList SDU_FormatInformationParameters_element_iE_Extensions;

EXTERN int asn1PE_SDU_FormatInformationParameters_element_iE_Extensions (ASN1CTXT* pctxt, SDU_FormatInformationParameters_element_iE_Extensions* pvalue);

EXTERN int asn1PD_SDU_FormatInformationParameters_element_iE_Extensions (ASN1CTXT* pctxt, SDU_FormatInformationParameters_element_iE_Extensions* pvalue);

EXTERN void asn1Print_SDU_FormatInformationParameters_element_iE_Extensions
   (const char* name, SDU_FormatInformationParameters_element_iE_Extensions* pvalue);

EXTERN SDU_FormatInformationParameters_element_iE_Extensions* asn1Test_SDU_FormatInformationParameters_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_FormatInformationParameters_element                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SDU_FormatInformationParameters_element {
   struct {
      unsigned subflowSDU_SizePresent : 1;
      unsigned rAB_SubflowCombinationBitRatePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SubflowSDU_Size subflowSDU_Size;
   RAB_SubflowCombinationBitRate rAB_SubflowCombinationBitRate;
   SDU_FormatInformationParameters_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} SDU_FormatInformationParameters_element;

EXTERN int asn1PE_SDU_FormatInformationParameters_element (ASN1CTXT* pctxt, SDU_FormatInformationParameters_element* pvalue);

EXTERN int asn1PD_SDU_FormatInformationParameters_element (ASN1CTXT* pctxt, SDU_FormatInformationParameters_element* pvalue);

EXTERN void asn1Print_SDU_FormatInformationParameters_element
   (const char* name, SDU_FormatInformationParameters_element* pvalue);

EXTERN SDU_FormatInformationParameters_element* asn1Test_SDU_FormatInformationParameters_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_FormatInformationParameters                           */
/*                                                            */
/**************************************************************/

/* List of SDU_FormatInformationParameters_element */
typedef Asn1RTDList SDU_FormatInformationParameters;

EXTERN int asn1PE_SDU_FormatInformationParameters (ASN1CTXT* pctxt, SDU_FormatInformationParameters* pvalue);

EXTERN int asn1PD_SDU_FormatInformationParameters (ASN1CTXT* pctxt, SDU_FormatInformationParameters* pvalue);

EXTERN void asn1Print_SDU_FormatInformationParameters
   (const char* name, SDU_FormatInformationParameters* pvalue);

EXTERN SDU_FormatInformationParameters* asn1Test_SDU_FormatInformationParameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_Parameters_element_iE_Extensions_element              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SDU_Parameters_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SDU_Parameters_element_iE_Extensions_element;

EXTERN int asn1PE_SDU_Parameters_element_iE_Extensions_element (ASN1CTXT* pctxt, SDU_Parameters_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SDU_Parameters_element_iE_Extensions_element (ASN1CTXT* pctxt, SDU_Parameters_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SDU_Parameters_element_iE_Extensions_element (ASN1CTXT* pctxt,
   SDU_Parameters_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SDU_Parameters_element_iE_Extensions_element (ASN1CTXT* pctxt,
   SDU_Parameters_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SDU_Parameters_element_iE_Extensions_element
   (const char* name, SDU_Parameters_element_iE_Extensions_element* pvalue);

EXTERN SDU_Parameters_element_iE_Extensions_element* asn1Test_SDU_Parameters_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_Parameters_element_iE_Extensions                      */
/*                                                            */
/**************************************************************/

/* List of SDU_Parameters_element_iE_Extensions_element */
typedef Asn1RTDList SDU_Parameters_element_iE_Extensions;

EXTERN int asn1PE_SDU_Parameters_element_iE_Extensions (ASN1CTXT* pctxt, SDU_Parameters_element_iE_Extensions* pvalue);

EXTERN int asn1PD_SDU_Parameters_element_iE_Extensions (ASN1CTXT* pctxt, SDU_Parameters_element_iE_Extensions* pvalue);

EXTERN void asn1Print_SDU_Parameters_element_iE_Extensions
   (const char* name, SDU_Parameters_element_iE_Extensions* pvalue);

EXTERN SDU_Parameters_element_iE_Extensions* asn1Test_SDU_Parameters_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_Parameters_element                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SDU_Parameters_element {
   struct {
      unsigned sDU_ErrorRatioPresent : 1;
      unsigned sDU_FormatInformationParametersPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SDU_ErrorRatio sDU_ErrorRatio;
   ResidualBitErrorRatio residualBitErrorRatio;
   DeliveryOfErroneousSDU deliveryOfErroneousSDU;
   SDU_FormatInformationParameters sDU_FormatInformationParameters;
   SDU_Parameters_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} SDU_Parameters_element;

EXTERN int asn1PE_SDU_Parameters_element (ASN1CTXT* pctxt, SDU_Parameters_element* pvalue);

EXTERN int asn1PD_SDU_Parameters_element (ASN1CTXT* pctxt, SDU_Parameters_element* pvalue);

EXTERN void asn1Print_SDU_Parameters_element
   (const char* name, SDU_Parameters_element* pvalue);

EXTERN SDU_Parameters_element* asn1Test_SDU_Parameters_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SDU_Parameters                                            */
/*                                                            */
/**************************************************************/

/* List of SDU_Parameters_element */
typedef Asn1RTDList SDU_Parameters;

EXTERN int asn1PE_SDU_Parameters (ASN1CTXT* pctxt, SDU_Parameters* pvalue);

EXTERN int asn1PD_SDU_Parameters (ASN1CTXT* pctxt, SDU_Parameters* pvalue);

EXTERN void asn1Print_SDU_Parameters
   (const char* name, SDU_Parameters* pvalue);

EXTERN SDU_Parameters* asn1Test_SDU_Parameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransferDelay                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TransferDelay;

EXTERN int asn1PE_TransferDelay (ASN1CTXT* pctxt, TransferDelay value);

EXTERN int asn1PD_TransferDelay (ASN1CTXT* pctxt, TransferDelay* pvalue);

EXTERN void asn1Print_TransferDelay
   (const char* name, TransferDelay* pvalue);

EXTERN TransferDelay* asn1Test_TransferDelay
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrafficHandlingPriority                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   spare_1 = 0,
   highest_1 = 1,
   lowest_1 = 14,
   no_priority_used = 15
} TrafficHandlingPriority_Root;

typedef OSUINT8 TrafficHandlingPriority;

EXTERN int asn1PE_TrafficHandlingPriority (ASN1CTXT* pctxt, TrafficHandlingPriority value);

EXTERN int asn1PD_TrafficHandlingPriority (ASN1CTXT* pctxt, TrafficHandlingPriority* pvalue);

EXTERN void asn1Print_TrafficHandlingPriority
   (const char* name, TrafficHandlingPriority* pvalue);

EXTERN TrafficHandlingPriority* asn1Test_TrafficHandlingPriority
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityLevel                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   spare = 0,
   highest = 1,
   lowest = 14,
   no_priority = 15
} PriorityLevel_Root;

typedef OSUINT8 PriorityLevel;

EXTERN int asn1PE_PriorityLevel (ASN1CTXT* pctxt, PriorityLevel value);

EXTERN int asn1PD_PriorityLevel (ASN1CTXT* pctxt, PriorityLevel* pvalue);

EXTERN void asn1Print_PriorityLevel
   (const char* name, PriorityLevel* pvalue);

EXTERN PriorityLevel* asn1Test_PriorityLevel
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Pre_emptionCapability                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   shall_not_trigger_pre_emption = 0,
   may_trigger_pre_emption = 1
} Pre_emptionCapability_Root;

typedef OSUINT32 Pre_emptionCapability;

EXTERN int asn1PE_Pre_emptionCapability (ASN1CTXT* pctxt, Pre_emptionCapability value);

EXTERN int asn1PD_Pre_emptionCapability (ASN1CTXT* pctxt, Pre_emptionCapability* pvalue);

EXTERN void asn1Print_Pre_emptionCapability
   (const char* name, Pre_emptionCapability* pvalue);

EXTERN Pre_emptionCapability* asn1Test_Pre_emptionCapability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Pre_emptionVulnerability                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   not_pre_emptable = 0,
   pre_emptable = 1
} Pre_emptionVulnerability_Root;

typedef OSUINT32 Pre_emptionVulnerability;

EXTERN int asn1PE_Pre_emptionVulnerability (ASN1CTXT* pctxt, Pre_emptionVulnerability value);

EXTERN int asn1PD_Pre_emptionVulnerability (ASN1CTXT* pctxt, Pre_emptionVulnerability* pvalue);

EXTERN void asn1Print_Pre_emptionVulnerability
   (const char* name, Pre_emptionVulnerability* pvalue);

EXTERN Pre_emptionVulnerability* asn1Test_Pre_emptionVulnerability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  QueuingAllowed                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   queueing_not_allowed = 0,
   queueing_allowed = 1
} QueuingAllowed_Root;

typedef OSUINT32 QueuingAllowed;

EXTERN int asn1PE_QueuingAllowed (ASN1CTXT* pctxt, QueuingAllowed value);

EXTERN int asn1PD_QueuingAllowed (ASN1CTXT* pctxt, QueuingAllowed* pvalue);

EXTERN void asn1Print_QueuingAllowed
   (const char* name, QueuingAllowed* pvalue);

EXTERN QueuingAllowed* asn1Test_QueuingAllowed
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AllocationOrRetentionPriority_iE_Extensions_element       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN AllocationOrRetentionPriority_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} AllocationOrRetentionPriority_iE_Extensions_element;

EXTERN int asn1PE_AllocationOrRetentionPriority_iE_Extensions_element (ASN1CTXT* pctxt, AllocationOrRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AllocationOrRetentionPriority_iE_Extensions_element (ASN1CTXT* pctxt, AllocationOrRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_AllocationOrRetentionPriority_iE_Extensions_element (ASN1CTXT* pctxt,
   AllocationOrRetentionPriority_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_AllocationOrRetentionPriority_iE_Extensions_element (ASN1CTXT* pctxt,
   AllocationOrRetentionPriority_iE_Extensions_element *pvalue);

EXTERN void asn1Print_AllocationOrRetentionPriority_iE_Extensions_element
   (const char* name, AllocationOrRetentionPriority_iE_Extensions_element* pvalue);

EXTERN AllocationOrRetentionPriority_iE_Extensions_element* asn1Test_AllocationOrRetentionPriority_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AllocationOrRetentionPriority_iE_Extensions               */
/*                                                            */
/**************************************************************/

/* List of AllocationOrRetentionPriority_iE_Extensions_element */
typedef Asn1RTDList AllocationOrRetentionPriority_iE_Extensions;

EXTERN int asn1PE_AllocationOrRetentionPriority_iE_Extensions (ASN1CTXT* pctxt, AllocationOrRetentionPriority_iE_Extensions* pvalue);

EXTERN int asn1PD_AllocationOrRetentionPriority_iE_Extensions (ASN1CTXT* pctxt, AllocationOrRetentionPriority_iE_Extensions* pvalue);

EXTERN void asn1Print_AllocationOrRetentionPriority_iE_Extensions
   (const char* name, AllocationOrRetentionPriority_iE_Extensions* pvalue);

EXTERN AllocationOrRetentionPriority_iE_Extensions* asn1Test_AllocationOrRetentionPriority_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AllocationOrRetentionPriority                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN AllocationOrRetentionPriority {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityLevel priorityLevel;
   Pre_emptionCapability pre_emptionCapability;
   Pre_emptionVulnerability pre_emptionVulnerability;
   QueuingAllowed queuingAllowed;
   AllocationOrRetentionPriority_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} AllocationOrRetentionPriority;

EXTERN int asn1PE_AllocationOrRetentionPriority (ASN1CTXT* pctxt, AllocationOrRetentionPriority* pvalue);

EXTERN int asn1PD_AllocationOrRetentionPriority (ASN1CTXT* pctxt, AllocationOrRetentionPriority* pvalue);

EXTERN void asn1Print_AllocationOrRetentionPriority
   (const char* name, AllocationOrRetentionPriority* pvalue);

EXTERN AllocationOrRetentionPriority* asn1Test_AllocationOrRetentionPriority
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SourceStatisticsDescriptor                                */
/*                                                            */
/**************************************************************/

typedef enum {
   speech = 0,
   unknown = 1
} SourceStatisticsDescriptor_Root;

typedef OSUINT32 SourceStatisticsDescriptor;

EXTERN int asn1PE_SourceStatisticsDescriptor (ASN1CTXT* pctxt, SourceStatisticsDescriptor value);

EXTERN int asn1PD_SourceStatisticsDescriptor (ASN1CTXT* pctxt, SourceStatisticsDescriptor* pvalue);

EXTERN void asn1Print_SourceStatisticsDescriptor
   (const char* name, SourceStatisticsDescriptor* pvalue);

EXTERN SourceStatisticsDescriptor* asn1Test_SourceStatisticsDescriptor
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RelocationRequirement                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   lossless = 0,
   none = 1
} RelocationRequirement_Root;

typedef enum {
   realtime = 2
} RelocationRequirement_Ext;

typedef OSUINT32 RelocationRequirement;

EXTERN int asn1PE_RelocationRequirement (ASN1CTXT* pctxt, RelocationRequirement value);

EXTERN int asn1PD_RelocationRequirement (ASN1CTXT* pctxt, RelocationRequirement* pvalue);

EXTERN void asn1Print_RelocationRequirement
   (const char* name, RelocationRequirement* pvalue);

EXTERN RelocationRequirement* asn1Test_RelocationRequirement
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SignallingIndication                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   signalling = 0
} SignallingIndication_Root;

typedef OSUINT32 SignallingIndication;

EXTERN int asn1PE_SignallingIndication (ASN1CTXT* pctxt, SignallingIndication value);

EXTERN int asn1PD_SignallingIndication (ASN1CTXT* pctxt, SignallingIndication* pvalue);

EXTERN void asn1Print_SignallingIndication
   (const char* name, SignallingIndication* pvalue);

EXTERN SignallingIndication* asn1Test_SignallingIndication
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _RAB_Parameters_ExtIEs_Extension                          */
/*                                                            */
/**************************************************************/

typedef SignallingIndication _RAB_Parameters_ExtIEs_Extension;

EXTERN int asn1PE__RAB_Parameters_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__RAB_Parameters_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__RAB_Parameters_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _RAB_Parameters_ExtIEs_Extension* asn1Test__RAB_Parameters_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_Parameters_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_Parameters_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} RAB_Parameters_iE_Extensions_element;

EXTERN int asn1PE_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt, RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt, RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt,
   RAB_Parameters_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt,
   RAB_Parameters_iE_Extensions_element *pvalue);

EXTERN void asn1Print_RAB_Parameters_iE_Extensions_element
   (const char* name, RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN RAB_Parameters_iE_Extensions_element* asn1Test_RAB_Parameters_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_Parameters_iE_Extensions                              */
/*                                                            */
/**************************************************************/

/* List of RAB_Parameters_iE_Extensions_element */
typedef Asn1RTDList RAB_Parameters_iE_Extensions;

EXTERN int asn1PE_RAB_Parameters_iE_Extensions (ASN1CTXT* pctxt, RAB_Parameters_iE_Extensions* pvalue);

EXTERN int asn1PD_RAB_Parameters_iE_Extensions (ASN1CTXT* pctxt, RAB_Parameters_iE_Extensions* pvalue);

EXTERN void asn1Print_RAB_Parameters_iE_Extensions
   (const char* name, RAB_Parameters_iE_Extensions* pvalue);

EXTERN RAB_Parameters_iE_Extensions* asn1Test_RAB_Parameters_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAB_Parameters                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAB_Parameters {
   struct {
      unsigned guaranteedBitRatePresent : 1;
      unsigned transferDelayPresent : 1;
      unsigned trafficHandlingPriorityPresent : 1;
      unsigned allocationOrRetentionPriorityPresent : 1;
      unsigned sourceStatisticsDescriptorPresent : 1;
      unsigned relocationRequirementPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TrafficClass trafficClass;
   RAB_AsymmetryIndicator rAB_AsymmetryIndicator;
   RAB_Parameter_MaxBitrateList maxBitrate;
   RAB_Parameter_GuaranteedBitrateList guaranteedBitRate;
   DeliveryOrder deliveryOrder;
   MaxSDU_Size maxSDU_Size;
   SDU_Parameters sDU_Parameters;
   TransferDelay transferDelay;
   TrafficHandlingPriority trafficHandlingPriority;
   AllocationOrRetentionPriority allocationOrRetentionPriority;
   SourceStatisticsDescriptor sourceStatisticsDescriptor;
   RelocationRequirement relocationRequirement;
   RAB_Parameters_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} RAB_Parameters;

EXTERN int asn1PE_RAB_Parameters (ASN1CTXT* pctxt, RAB_Parameters* pvalue);

EXTERN int asn1PD_RAB_Parameters (ASN1CTXT* pctxt, RAB_Parameters* pvalue);

EXTERN void asn1Print_RAB_Parameters
   (const char* name, RAB_Parameters* pvalue);

EXTERN RAB_Parameters* asn1Test_RAB_Parameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DataVolumeReportingIndication                             */
/*                                                            */
/**************************************************************/

typedef enum {
   do_report = 0,
   do_not_report = 1
} DataVolumeReportingIndication_Root;

typedef OSUINT32 DataVolumeReportingIndication;

EXTERN int asn1PE_DataVolumeReportingIndication (ASN1CTXT* pctxt, DataVolumeReportingIndication value);

EXTERN int asn1PD_DataVolumeReportingIndication (ASN1CTXT* pctxt, DataVolumeReportingIndication* pvalue);

EXTERN void asn1Print_DataVolumeReportingIndication
   (const char* name, DataVolumeReportingIndication* pvalue);

EXTERN DataVolumeReportingIndication* asn1Test_DataVolumeReportingIndication
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDP_Type                                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   empty = 0,
   ppp = 1,
   osp_ihoss = 2,
   ipv4 = 3,
   ipv6 = 4
} PDP_Type_Root;

typedef OSUINT32 PDP_Type;

EXTERN int asn1PE_PDP_Type (ASN1CTXT* pctxt, PDP_Type value);

EXTERN int asn1PD_PDP_Type (ASN1CTXT* pctxt, PDP_Type* pvalue);

EXTERN void asn1Print_PDP_Type
   (const char* name, PDP_Type* pvalue);

EXTERN PDP_Type* asn1Test_PDP_Type
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDP_TypeInformation                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PDP_TypeInformation {
   OSUINT32 n;
   PDP_Type elem[2];
} PDP_TypeInformation;

EXTERN int asn1PE_PDP_TypeInformation (ASN1CTXT* pctxt, PDP_TypeInformation* pvalue);

EXTERN int asn1PD_PDP_TypeInformation (ASN1CTXT* pctxt, PDP_TypeInformation* pvalue);

EXTERN void asn1Print_PDP_TypeInformation
   (const char* name, PDP_TypeInformation* pvalue);

EXTERN PDP_TypeInformation* asn1Test_PDP_TypeInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UserPlaneMode                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   transparent_mode = 0,
   support_mode_for_predefined_SDU_sizes = 1
} UserPlaneMode_Root;

typedef OSUINT32 UserPlaneMode;

EXTERN int asn1PE_UserPlaneMode (ASN1CTXT* pctxt, UserPlaneMode value);

EXTERN int asn1PD_UserPlaneMode (ASN1CTXT* pctxt, UserPlaneMode* pvalue);

EXTERN void asn1Print_UserPlaneMode
   (const char* name, UserPlaneMode* pvalue);

EXTERN UserPlaneMode* asn1Test_UserPlaneMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UP_ModeVersions                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UP_ModeVersions {
   OSUINT32  numbits;
   OSOCTET data[2];
} UP_ModeVersions;

EXTERN int asn1PE_UP_ModeVersions (ASN1CTXT* pctxt, UP_ModeVersions* pvalue);

EXTERN int asn1PD_UP_ModeVersions (ASN1CTXT* pctxt, UP_ModeVersions* pvalue);

EXTERN void asn1Print_UP_ModeVersions
   (const char* name, UP_ModeVersions* pvalue);

EXTERN UP_ModeVersions* asn1Test_UP_ModeVersions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Service_Handover                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   handover_to_GSM_should_be_performed = 0,
   handover_to_GSM_should_not_be_performed = 1,
   handover_to_GSM_shall_not_be_performed = 2
} Service_Handover_Root;

typedef OSUINT32 Service_Handover;

EXTERN int asn1PE_Service_Handover (ASN1CTXT* pctxt, Service_Handover value);

EXTERN int asn1PD_Service_Handover (ASN1CTXT* pctxt, Service_Handover* pvalue);

EXTERN void asn1Print_Service_Handover
   (const char* name, Service_Handover* pvalue);

EXTERN Service_Handover* asn1Test_Service_Handover
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_MaxBitrateType                          */
/*                                                            */
/**************************************************************/

typedef enum {
   unspecified_1 = 0,
   value_range_1 = 1,
   discrete_values_1 = 2
} Alt_RAB_Parameter_MaxBitrateType_Root;

typedef OSUINT32 Alt_RAB_Parameter_MaxBitrateType;

EXTERN int asn1PE_Alt_RAB_Parameter_MaxBitrateType (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrateType value);

EXTERN int asn1PD_Alt_RAB_Parameter_MaxBitrateType (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrateType* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_MaxBitrateType
   (const char* name, Alt_RAB_Parameter_MaxBitrateType* pvalue);

EXTERN Alt_RAB_Parameter_MaxBitrateType* asn1Test_Alt_RAB_Parameter_MaxBitrateType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_MaxBitrateList                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Alt_RAB_Parameter_MaxBitrateList {
   OSUINT32 n;
   MaxBitrate elem[2];
} Alt_RAB_Parameter_MaxBitrateList;

EXTERN int asn1PE_Alt_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_MaxBitrateList
   (const char* name, Alt_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN Alt_RAB_Parameter_MaxBitrateList* asn1Test_Alt_RAB_Parameter_MaxBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_MaxBitrates                             */
/*                                                            */
/**************************************************************/

/* List of Alt_RAB_Parameter_MaxBitrateList */
typedef Asn1RTDList Alt_RAB_Parameter_MaxBitrates;

EXTERN int asn1PE_Alt_RAB_Parameter_MaxBitrates (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrates* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameter_MaxBitrates (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrates* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_MaxBitrates
   (const char* name, Alt_RAB_Parameter_MaxBitrates* pvalue);

EXTERN Alt_RAB_Parameter_MaxBitrates* asn1Test_Alt_RAB_Parameter_MaxBitrates
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_MaxBitrateInf                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Alt_RAB_Parameter_MaxBitrateInf {
   struct {
      unsigned altMaxBitratesPresent : 1;
   } m;
   Alt_RAB_Parameter_MaxBitrateType altMaxBitrateType;
   Alt_RAB_Parameter_MaxBitrates altMaxBitrates;
   Asn1RTDList extElem1;
} Alt_RAB_Parameter_MaxBitrateInf;

EXTERN int asn1PE_Alt_RAB_Parameter_MaxBitrateInf (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrateInf* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameter_MaxBitrateInf (ASN1CTXT* pctxt, Alt_RAB_Parameter_MaxBitrateInf* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_MaxBitrateInf
   (const char* name, Alt_RAB_Parameter_MaxBitrateInf* pvalue);

EXTERN Alt_RAB_Parameter_MaxBitrateInf* asn1Test_Alt_RAB_Parameter_MaxBitrateInf
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_GuaranteedBitrateType                   */
/*                                                            */
/**************************************************************/

typedef enum {
   unspecified = 0,
   value_range = 1,
   discrete_values = 2
} Alt_RAB_Parameter_GuaranteedBitrateType_Root;

typedef OSUINT32 Alt_RAB_Parameter_GuaranteedBitrateType;

EXTERN int asn1PE_Alt_RAB_Parameter_GuaranteedBitrateType (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrateType value);

EXTERN int asn1PD_Alt_RAB_Parameter_GuaranteedBitrateType (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrateType* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_GuaranteedBitrateType
   (const char* name, Alt_RAB_Parameter_GuaranteedBitrateType* pvalue);

EXTERN Alt_RAB_Parameter_GuaranteedBitrateType* asn1Test_Alt_RAB_Parameter_GuaranteedBitrateType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_GuaranteedBitrateList                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Alt_RAB_Parameter_GuaranteedBitrateList {
   OSUINT32 n;
   GuaranteedBitrate elem[2];
} Alt_RAB_Parameter_GuaranteedBitrateList;

EXTERN int asn1PE_Alt_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_GuaranteedBitrateList
   (const char* name, Alt_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN Alt_RAB_Parameter_GuaranteedBitrateList* asn1Test_Alt_RAB_Parameter_GuaranteedBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_GuaranteedBitrates                      */
/*                                                            */
/**************************************************************/

/* List of Alt_RAB_Parameter_GuaranteedBitrateList */
typedef Asn1RTDList Alt_RAB_Parameter_GuaranteedBitrates;

EXTERN int asn1PE_Alt_RAB_Parameter_GuaranteedBitrates (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrates* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameter_GuaranteedBitrates (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrates* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_GuaranteedBitrates
   (const char* name, Alt_RAB_Parameter_GuaranteedBitrates* pvalue);

EXTERN Alt_RAB_Parameter_GuaranteedBitrates* asn1Test_Alt_RAB_Parameter_GuaranteedBitrates
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameter_GuaranteedBitrateInf                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Alt_RAB_Parameter_GuaranteedBitrateInf {
   struct {
      unsigned altGuaranteedBitratesPresent : 1;
   } m;
   Alt_RAB_Parameter_GuaranteedBitrateType altGuaranteedBitrateType;
   Alt_RAB_Parameter_GuaranteedBitrates altGuaranteedBitrates;
   Asn1RTDList extElem1;
} Alt_RAB_Parameter_GuaranteedBitrateInf;

EXTERN int asn1PE_Alt_RAB_Parameter_GuaranteedBitrateInf (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrateInf* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameter_GuaranteedBitrateInf (ASN1CTXT* pctxt, Alt_RAB_Parameter_GuaranteedBitrateInf* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameter_GuaranteedBitrateInf
   (const char* name, Alt_RAB_Parameter_GuaranteedBitrateInf* pvalue);

EXTERN Alt_RAB_Parameter_GuaranteedBitrateInf* asn1Test_Alt_RAB_Parameter_GuaranteedBitrateInf
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _Alt_RAB_Parameters_ExtIEs_Extension                      */
/*                                                            */
/**************************************************************/

typedef RAB_Parameters _Alt_RAB_Parameters_ExtIEs_Extension;

EXTERN int asn1PE__Alt_RAB_Parameters_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__Alt_RAB_Parameters_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__Alt_RAB_Parameters_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _Alt_RAB_Parameters_ExtIEs_Extension* asn1Test__Alt_RAB_Parameters_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameters_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Alt_RAB_Parameters_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} Alt_RAB_Parameters_iE_Extensions_element;

EXTERN int asn1PE_Alt_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt, Alt_RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt, Alt_RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_Alt_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt,
   Alt_RAB_Parameters_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_Alt_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt,
   Alt_RAB_Parameters_iE_Extensions_element *pvalue);

EXTERN void asn1Print_Alt_RAB_Parameters_iE_Extensions_element
   (const char* name, Alt_RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN Alt_RAB_Parameters_iE_Extensions_element* asn1Test_Alt_RAB_Parameters_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameters_iE_Extensions                          */
/*                                                            */
/**************************************************************/

/* List of Alt_RAB_Parameters_iE_Extensions_element */
typedef Asn1RTDList Alt_RAB_Parameters_iE_Extensions;

EXTERN int asn1PE_Alt_RAB_Parameters_iE_Extensions (ASN1CTXT* pctxt, Alt_RAB_Parameters_iE_Extensions* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameters_iE_Extensions (ASN1CTXT* pctxt, Alt_RAB_Parameters_iE_Extensions* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameters_iE_Extensions
   (const char* name, Alt_RAB_Parameters_iE_Extensions* pvalue);

EXTERN Alt_RAB_Parameters_iE_Extensions* asn1Test_Alt_RAB_Parameters_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Alt_RAB_Parameters                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Alt_RAB_Parameters {
   struct {
      unsigned altMaxBitrateInfPresent : 1;
      unsigned altGuaranteedBitRateInfPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Alt_RAB_Parameter_MaxBitrateInf altMaxBitrateInf;
   Alt_RAB_Parameter_GuaranteedBitrateInf altGuaranteedBitRateInf;
   Alt_RAB_Parameters_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} Alt_RAB_Parameters;

EXTERN int asn1PE_Alt_RAB_Parameters (ASN1CTXT* pctxt, Alt_RAB_Parameters* pvalue);

EXTERN int asn1PD_Alt_RAB_Parameters (ASN1CTXT* pctxt, Alt_RAB_Parameters* pvalue);

EXTERN void asn1Print_Alt_RAB_Parameters
   (const char* name, Alt_RAB_Parameters* pvalue);

EXTERN Alt_RAB_Parameters* asn1Test_Alt_RAB_Parameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GERAN_BSC_Container                                       */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr GERAN_BSC_Container;

EXTERN int asn1PE_GERAN_BSC_Container (ASN1CTXT* pctxt, GERAN_BSC_Container value);

EXTERN int asn1PD_GERAN_BSC_Container (ASN1CTXT* pctxt, GERAN_BSC_Container* pvalue);

EXTERN void asn1Print_GERAN_BSC_Container
   (const char* name, GERAN_BSC_Container* pvalue);

EXTERN GERAN_BSC_Container* asn1Test_GERAN_BSC_Container
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PermittedIntegrityProtectionAlgorithms                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PermittedIntegrityProtectionAlgorithms {
   OSUINT32 n;
   IntegrityProtectionAlgorithm elem[16];
} PermittedIntegrityProtectionAlgorithms;

EXTERN int asn1PE_PermittedIntegrityProtectionAlgorithms (ASN1CTXT* pctxt, PermittedIntegrityProtectionAlgorithms* pvalue);

EXTERN int asn1PD_PermittedIntegrityProtectionAlgorithms (ASN1CTXT* pctxt, PermittedIntegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Print_PermittedIntegrityProtectionAlgorithms
   (const char* name, PermittedIntegrityProtectionAlgorithms* pvalue);

EXTERN PermittedIntegrityProtectionAlgorithms* asn1Test_PermittedIntegrityProtectionAlgorithms
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionInformation_iE_Extensions_element      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IntegrityProtectionInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} IntegrityProtectionInformation_iE_Extensions_element;

EXTERN int asn1PE_IntegrityProtectionInformation_iE_Extensions_element (ASN1CTXT* pctxt, IntegrityProtectionInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_IntegrityProtectionInformation_iE_Extensions_element (ASN1CTXT* pctxt, IntegrityProtectionInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_IntegrityProtectionInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   IntegrityProtectionInformation_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_IntegrityProtectionInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   IntegrityProtectionInformation_iE_Extensions_element *pvalue);

EXTERN void asn1Print_IntegrityProtectionInformation_iE_Extensions_element
   (const char* name, IntegrityProtectionInformation_iE_Extensions_element* pvalue);

EXTERN IntegrityProtectionInformation_iE_Extensions_element* asn1Test_IntegrityProtectionInformation_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionInformation_iE_Extensions              */
/*                                                            */
/**************************************************************/

/* List of IntegrityProtectionInformation_iE_Extensions_element */
typedef Asn1RTDList IntegrityProtectionInformation_iE_Extensions;

EXTERN int asn1PE_IntegrityProtectionInformation_iE_Extensions (ASN1CTXT* pctxt, IntegrityProtectionInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_IntegrityProtectionInformation_iE_Extensions (ASN1CTXT* pctxt, IntegrityProtectionInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_IntegrityProtectionInformation_iE_Extensions
   (const char* name, IntegrityProtectionInformation_iE_Extensions* pvalue);

EXTERN IntegrityProtectionInformation_iE_Extensions* asn1Test_IntegrityProtectionInformation_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionInformation                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IntegrityProtectionInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PermittedIntegrityProtectionAlgorithms permittedAlgorithms;
   IntegrityProtectionKey key;
   IntegrityProtectionInformation_iE_Extensions iE_Extensions;
} IntegrityProtectionInformation;

EXTERN int asn1PE_IntegrityProtectionInformation (ASN1CTXT* pctxt, IntegrityProtectionInformation* pvalue);

EXTERN int asn1PD_IntegrityProtectionInformation (ASN1CTXT* pctxt, IntegrityProtectionInformation* pvalue);

EXTERN void asn1Print_IntegrityProtectionInformation
   (const char* name, IntegrityProtectionInformation* pvalue);

EXTERN IntegrityProtectionInformation* asn1Test_IntegrityProtectionInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PermittedEncryptionAlgorithms                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PermittedEncryptionAlgorithms {
   OSUINT32 n;
   EncryptionAlgorithm elem[16];
} PermittedEncryptionAlgorithms;

EXTERN int asn1PE_PermittedEncryptionAlgorithms (ASN1CTXT* pctxt, PermittedEncryptionAlgorithms* pvalue);

EXTERN int asn1PD_PermittedEncryptionAlgorithms (ASN1CTXT* pctxt, PermittedEncryptionAlgorithms* pvalue);

EXTERN void asn1Print_PermittedEncryptionAlgorithms
   (const char* name, PermittedEncryptionAlgorithms* pvalue);

EXTERN PermittedEncryptionAlgorithms* asn1Test_PermittedEncryptionAlgorithms
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EncryptionInformation_iE_Extensions_element               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN EncryptionInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} EncryptionInformation_iE_Extensions_element;

EXTERN int asn1PE_EncryptionInformation_iE_Extensions_element (ASN1CTXT* pctxt, EncryptionInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EncryptionInformation_iE_Extensions_element (ASN1CTXT* pctxt, EncryptionInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_EncryptionInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   EncryptionInformation_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_EncryptionInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   EncryptionInformation_iE_Extensions_element *pvalue);

EXTERN void asn1Print_EncryptionInformation_iE_Extensions_element
   (const char* name, EncryptionInformation_iE_Extensions_element* pvalue);

EXTERN EncryptionInformation_iE_Extensions_element* asn1Test_EncryptionInformation_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EncryptionInformation_iE_Extensions                       */
/*                                                            */
/**************************************************************/

/* List of EncryptionInformation_iE_Extensions_element */
typedef Asn1RTDList EncryptionInformation_iE_Extensions;

EXTERN int asn1PE_EncryptionInformation_iE_Extensions (ASN1CTXT* pctxt, EncryptionInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_EncryptionInformation_iE_Extensions (ASN1CTXT* pctxt, EncryptionInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_EncryptionInformation_iE_Extensions
   (const char* name, EncryptionInformation_iE_Extensions* pvalue);

EXTERN EncryptionInformation_iE_Extensions* asn1Test_EncryptionInformation_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EncryptionInformation                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN EncryptionInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PermittedEncryptionAlgorithms permittedAlgorithms;
   EncryptionKey key;
   EncryptionInformation_iE_Extensions iE_Extensions;
} EncryptionInformation;

EXTERN int asn1PE_EncryptionInformation (ASN1CTXT* pctxt, EncryptionInformation* pvalue);

EXTERN int asn1PD_EncryptionInformation (ASN1CTXT* pctxt, EncryptionInformation* pvalue);

EXTERN void asn1Print_EncryptionInformation
   (const char* name, EncryptionInformation* pvalue);

EXTERN EncryptionInformation* asn1Test_EncryptionInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IuSignallingConnectionIdentifier                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IuSignallingConnectionIdentifier {
   OSUINT32  numbits;
   OSOCTET data[3];
} IuSignallingConnectionIdentifier;

EXTERN int asn1PE_IuSignallingConnectionIdentifier (ASN1CTXT* pctxt, IuSignallingConnectionIdentifier* pvalue);

EXTERN int asn1PD_IuSignallingConnectionIdentifier (ASN1CTXT* pctxt, IuSignallingConnectionIdentifier* pvalue);

EXTERN void asn1Print_IuSignallingConnectionIdentifier
   (const char* name, IuSignallingConnectionIdentifier* pvalue);

EXTERN IuSignallingConnectionIdentifier* asn1Test_IuSignallingConnectionIdentifier
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CN_ID                                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 CN_ID;

EXTERN int asn1PE_CN_ID (ASN1CTXT* pctxt, CN_ID value);

EXTERN int asn1PD_CN_ID (ASN1CTXT* pctxt, CN_ID* pvalue);

EXTERN void asn1Print_CN_ID
   (const char* name, CN_ID* pvalue);

EXTERN CN_ID* asn1Test_CN_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GlobalCN_ID                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GlobalCN_ID {
   PLMNidentity pLMNidentity;
   CN_ID cN_ID;
} GlobalCN_ID;

EXTERN int asn1PE_GlobalCN_ID (ASN1CTXT* pctxt, GlobalCN_ID* pvalue);

EXTERN int asn1PD_GlobalCN_ID (ASN1CTXT* pctxt, GlobalCN_ID* pvalue);

EXTERN void asn1Print_GlobalCN_ID
   (const char* name, GlobalCN_ID* pvalue);

EXTERN GlobalCN_ID* asn1Test_GlobalCN_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SNAC                                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT16 SNAC;

EXTERN int asn1PE_SNAC (ASN1CTXT* pctxt, SNAC value);

EXTERN int asn1PD_SNAC (ASN1CTXT* pctxt, SNAC* pvalue);

EXTERN void asn1Print_SNAC
   (const char* name, SNAC* pvalue);

EXTERN SNAC* asn1Test_SNAC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthorisedSNAs                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN AuthorisedSNAs {
   OSUINT32 n;
   SNAC *elem;
} AuthorisedSNAs;

EXTERN int asn1PE_AuthorisedSNAs (ASN1CTXT* pctxt, AuthorisedSNAs* pvalue);

EXTERN int asn1PD_AuthorisedSNAs (ASN1CTXT* pctxt, AuthorisedSNAs* pvalue);

EXTERN void asn1Print_AuthorisedSNAs
   (const char* name, AuthorisedSNAs* pvalue);

EXTERN AuthorisedSNAs* asn1Test_AuthorisedSNAs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthorisedPLMNs_element_iE_Extensions_element             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN AuthorisedPLMNs_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} AuthorisedPLMNs_element_iE_Extensions_element;

EXTERN int asn1PE_AuthorisedPLMNs_element_iE_Extensions_element (ASN1CTXT* pctxt, AuthorisedPLMNs_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AuthorisedPLMNs_element_iE_Extensions_element (ASN1CTXT* pctxt, AuthorisedPLMNs_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_AuthorisedPLMNs_element_iE_Extensions_element (ASN1CTXT* pctxt,
   AuthorisedPLMNs_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_AuthorisedPLMNs_element_iE_Extensions_element (ASN1CTXT* pctxt,
   AuthorisedPLMNs_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_AuthorisedPLMNs_element_iE_Extensions_element
   (const char* name, AuthorisedPLMNs_element_iE_Extensions_element* pvalue);

EXTERN AuthorisedPLMNs_element_iE_Extensions_element* asn1Test_AuthorisedPLMNs_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthorisedPLMNs_element_iE_Extensions                     */
/*                                                            */
/**************************************************************/

/* List of AuthorisedPLMNs_element_iE_Extensions_element */
typedef Asn1RTDList AuthorisedPLMNs_element_iE_Extensions;

EXTERN int asn1PE_AuthorisedPLMNs_element_iE_Extensions (ASN1CTXT* pctxt, AuthorisedPLMNs_element_iE_Extensions* pvalue);

EXTERN int asn1PD_AuthorisedPLMNs_element_iE_Extensions (ASN1CTXT* pctxt, AuthorisedPLMNs_element_iE_Extensions* pvalue);

EXTERN void asn1Print_AuthorisedPLMNs_element_iE_Extensions
   (const char* name, AuthorisedPLMNs_element_iE_Extensions* pvalue);

EXTERN AuthorisedPLMNs_element_iE_Extensions* asn1Test_AuthorisedPLMNs_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthorisedPLMNs_element                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN AuthorisedPLMNs_element {
   struct {
      unsigned authorisedSNAsListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   AuthorisedSNAs authorisedSNAsList;
   AuthorisedPLMNs_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} AuthorisedPLMNs_element;

EXTERN int asn1PE_AuthorisedPLMNs_element (ASN1CTXT* pctxt, AuthorisedPLMNs_element* pvalue);

EXTERN int asn1PD_AuthorisedPLMNs_element (ASN1CTXT* pctxt, AuthorisedPLMNs_element* pvalue);

EXTERN void asn1Print_AuthorisedPLMNs_element
   (const char* name, AuthorisedPLMNs_element* pvalue);

EXTERN AuthorisedPLMNs_element* asn1Test_AuthorisedPLMNs_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthorisedPLMNs                                           */
/*                                                            */
/**************************************************************/

/* List of AuthorisedPLMNs_element */
typedef Asn1RTDList AuthorisedPLMNs;

EXTERN int asn1PE_AuthorisedPLMNs (ASN1CTXT* pctxt, AuthorisedPLMNs* pvalue);

EXTERN int asn1PD_AuthorisedPLMNs (ASN1CTXT* pctxt, AuthorisedPLMNs* pvalue);

EXTERN void asn1Print_AuthorisedPLMNs
   (const char* name, AuthorisedPLMNs* pvalue);

EXTERN AuthorisedPLMNs* asn1Test_AuthorisedPLMNs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SNA_Access_Information_iE_Extensions_element              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SNA_Access_Information_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} SNA_Access_Information_iE_Extensions_element;

EXTERN int asn1PE_SNA_Access_Information_iE_Extensions_element (ASN1CTXT* pctxt, SNA_Access_Information_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SNA_Access_Information_iE_Extensions_element (ASN1CTXT* pctxt, SNA_Access_Information_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_SNA_Access_Information_iE_Extensions_element (ASN1CTXT* pctxt,
   SNA_Access_Information_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_SNA_Access_Information_iE_Extensions_element (ASN1CTXT* pctxt,
   SNA_Access_Information_iE_Extensions_element *pvalue);

EXTERN void asn1Print_SNA_Access_Information_iE_Extensions_element
   (const char* name, SNA_Access_Information_iE_Extensions_element* pvalue);

EXTERN SNA_Access_Information_iE_Extensions_element* asn1Test_SNA_Access_Information_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SNA_Access_Information_iE_Extensions                      */
/*                                                            */
/**************************************************************/

/* List of SNA_Access_Information_iE_Extensions_element */
typedef Asn1RTDList SNA_Access_Information_iE_Extensions;

EXTERN int asn1PE_SNA_Access_Information_iE_Extensions (ASN1CTXT* pctxt, SNA_Access_Information_iE_Extensions* pvalue);

EXTERN int asn1PD_SNA_Access_Information_iE_Extensions (ASN1CTXT* pctxt, SNA_Access_Information_iE_Extensions* pvalue);

EXTERN void asn1Print_SNA_Access_Information_iE_Extensions
   (const char* name, SNA_Access_Information_iE_Extensions* pvalue);

EXTERN SNA_Access_Information_iE_Extensions* asn1Test_SNA_Access_Information_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SNA_Access_Information                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SNA_Access_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AuthorisedPLMNs authorisedPLMNs;
   SNA_Access_Information_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} SNA_Access_Information;

EXTERN int asn1PE_SNA_Access_Information (ASN1CTXT* pctxt, SNA_Access_Information* pvalue);

EXTERN int asn1PD_SNA_Access_Information (ASN1CTXT* pctxt, SNA_Access_Information* pvalue);

EXTERN void asn1Print_SNA_Access_Information
   (const char* name, SNA_Access_Information* pvalue);

EXTERN SNA_Access_Information* asn1Test_SNA_Access_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESBI_IuA                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UESBI_IuA {
   OSUINT32  numbits;
   OSOCTET data[16];
} UESBI_IuA;

EXTERN int asn1PE_UESBI_IuA (ASN1CTXT* pctxt, UESBI_IuA* pvalue);

EXTERN int asn1PD_UESBI_IuA (ASN1CTXT* pctxt, UESBI_IuA* pvalue);

EXTERN void asn1Print_UESBI_IuA
   (const char* name, UESBI_IuA* pvalue);

EXTERN UESBI_IuA* asn1Test_UESBI_IuA
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESBI_IuB                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UESBI_IuB {
   OSUINT32  numbits;
   OSOCTET data[16];
} UESBI_IuB;

EXTERN int asn1PE_UESBI_IuB (ASN1CTXT* pctxt, UESBI_IuB* pvalue);

EXTERN int asn1PD_UESBI_IuB (ASN1CTXT* pctxt, UESBI_IuB* pvalue);

EXTERN void asn1Print_UESBI_IuB
   (const char* name, UESBI_IuB* pvalue);

EXTERN UESBI_IuB* asn1Test_UESBI_IuB
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESBI_Iu_iE_Extensions_element                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UESBI_Iu_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} UESBI_Iu_iE_Extensions_element;

EXTERN int asn1PE_UESBI_Iu_iE_Extensions_element (ASN1CTXT* pctxt, UESBI_Iu_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UESBI_Iu_iE_Extensions_element (ASN1CTXT* pctxt, UESBI_Iu_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_UESBI_Iu_iE_Extensions_element (ASN1CTXT* pctxt,
   UESBI_Iu_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_UESBI_Iu_iE_Extensions_element (ASN1CTXT* pctxt,
   UESBI_Iu_iE_Extensions_element *pvalue);

EXTERN void asn1Print_UESBI_Iu_iE_Extensions_element
   (const char* name, UESBI_Iu_iE_Extensions_element* pvalue);

EXTERN UESBI_Iu_iE_Extensions_element* asn1Test_UESBI_Iu_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESBI_Iu_iE_Extensions                                    */
/*                                                            */
/**************************************************************/

/* List of UESBI_Iu_iE_Extensions_element */
typedef Asn1RTDList UESBI_Iu_iE_Extensions;

EXTERN int asn1PE_UESBI_Iu_iE_Extensions (ASN1CTXT* pctxt, UESBI_Iu_iE_Extensions* pvalue);

EXTERN int asn1PD_UESBI_Iu_iE_Extensions (ASN1CTXT* pctxt, UESBI_Iu_iE_Extensions* pvalue);

EXTERN void asn1Print_UESBI_Iu_iE_Extensions
   (const char* name, UESBI_Iu_iE_Extensions* pvalue);

EXTERN UESBI_Iu_iE_Extensions* asn1Test_UESBI_Iu_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESBI_Iu                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UESBI_Iu {
   struct {
      unsigned uESBI_IuAPresent : 1;
      unsigned uESBI_IuBPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UESBI_IuA uESBI_IuA;
   UESBI_IuB uESBI_IuB;
   UESBI_Iu_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} UESBI_Iu;

EXTERN int asn1PE_UESBI_Iu (ASN1CTXT* pctxt, UESBI_Iu* pvalue);

EXTERN int asn1PD_UESBI_Iu (ASN1CTXT* pctxt, UESBI_Iu* pvalue);

EXTERN void asn1Print_UESBI_Iu
   (const char* name, UESBI_Iu* pvalue);

EXTERN UESBI_Iu* asn1Test_UESBI_Iu
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TMGI_serviceID                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TMGI_serviceID {
   OSUINT32 numocts;
   OSOCTET data[3];
} TMGI_serviceID;

EXTERN int asn1PE_TMGI_serviceID (ASN1CTXT* pctxt, TMGI_serviceID* pvalue);

EXTERN int asn1PD_TMGI_serviceID (ASN1CTXT* pctxt, TMGI_serviceID* pvalue);

EXTERN void asn1Print_TMGI_serviceID
   (const char* name, TMGI_serviceID* pvalue);

EXTERN TMGI_serviceID* asn1Test_TMGI_serviceID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TMGI_iE_Extensions_element                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TMGI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} TMGI_iE_Extensions_element;

EXTERN int asn1PE_TMGI_iE_Extensions_element (ASN1CTXT* pctxt, TMGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TMGI_iE_Extensions_element (ASN1CTXT* pctxt, TMGI_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_TMGI_iE_Extensions_element (ASN1CTXT* pctxt,
   TMGI_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_TMGI_iE_Extensions_element (ASN1CTXT* pctxt,
   TMGI_iE_Extensions_element *pvalue);

EXTERN void asn1Print_TMGI_iE_Extensions_element
   (const char* name, TMGI_iE_Extensions_element* pvalue);

EXTERN TMGI_iE_Extensions_element* asn1Test_TMGI_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TMGI_iE_Extensions                                        */
/*                                                            */
/**************************************************************/

/* List of TMGI_iE_Extensions_element */
typedef Asn1RTDList TMGI_iE_Extensions;

EXTERN int asn1PE_TMGI_iE_Extensions (ASN1CTXT* pctxt, TMGI_iE_Extensions* pvalue);

EXTERN int asn1PD_TMGI_iE_Extensions (ASN1CTXT* pctxt, TMGI_iE_Extensions* pvalue);

EXTERN void asn1Print_TMGI_iE_Extensions
   (const char* name, TMGI_iE_Extensions* pvalue);

EXTERN TMGI_iE_Extensions* asn1Test_TMGI_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TMGI                                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TMGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   TMGI_serviceID serviceID;
   TMGI_iE_Extensions iE_Extensions;
} TMGI;

EXTERN int asn1PE_TMGI (ASN1CTXT* pctxt, TMGI* pvalue);

EXTERN int asn1PD_TMGI (ASN1CTXT* pctxt, TMGI* pvalue);

EXTERN void asn1Print_TMGI
   (const char* name, TMGI* pvalue);

EXTERN TMGI* asn1Test_TMGI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMS_PTP_RAB_ID                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MBMS_PTP_RAB_ID {
   OSUINT32  numbits;
   OSOCTET data[1];
} MBMS_PTP_RAB_ID;

EXTERN int asn1PE_MBMS_PTP_RAB_ID (ASN1CTXT* pctxt, MBMS_PTP_RAB_ID* pvalue);

EXTERN int asn1PD_MBMS_PTP_RAB_ID (ASN1CTXT* pctxt, MBMS_PTP_RAB_ID* pvalue);

EXTERN void asn1Print_MBMS_PTP_RAB_ID
   (const char* name, MBMS_PTP_RAB_ID* pvalue);

EXTERN MBMS_PTP_RAB_ID* asn1Test_MBMS_PTP_RAB_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Ass_RAB_Parameter_MaxBitrateList                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Ass_RAB_Parameter_MaxBitrateList {
   OSUINT32 n;
   MaxBitrate elem[2];
} Ass_RAB_Parameter_MaxBitrateList;

EXTERN int asn1PE_Ass_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, Ass_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN int asn1PD_Ass_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, Ass_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN void asn1Print_Ass_RAB_Parameter_MaxBitrateList
   (const char* name, Ass_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN Ass_RAB_Parameter_MaxBitrateList* asn1Test_Ass_RAB_Parameter_MaxBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Ass_RAB_Parameter_GuaranteedBitrateList                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Ass_RAB_Parameter_GuaranteedBitrateList {
   OSUINT32 n;
   GuaranteedBitrate elem[2];
} Ass_RAB_Parameter_GuaranteedBitrateList;

EXTERN int asn1PE_Ass_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, Ass_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN int asn1PD_Ass_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, Ass_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN void asn1Print_Ass_RAB_Parameter_GuaranteedBitrateList
   (const char* name, Ass_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN Ass_RAB_Parameter_GuaranteedBitrateList* asn1Test_Ass_RAB_Parameter_GuaranteedBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Ass_RAB_Parameters_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Ass_RAB_Parameters_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} Ass_RAB_Parameters_iE_Extensions_element;

EXTERN int asn1PE_Ass_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt, Ass_RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN int asn1PD_Ass_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt, Ass_RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_Ass_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt,
   Ass_RAB_Parameters_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_Ass_RAB_Parameters_iE_Extensions_element (ASN1CTXT* pctxt,
   Ass_RAB_Parameters_iE_Extensions_element *pvalue);

EXTERN void asn1Print_Ass_RAB_Parameters_iE_Extensions_element
   (const char* name, Ass_RAB_Parameters_iE_Extensions_element* pvalue);

EXTERN Ass_RAB_Parameters_iE_Extensions_element* asn1Test_Ass_RAB_Parameters_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Ass_RAB_Parameters_iE_Extensions                          */
/*                                                            */
/**************************************************************/

/* List of Ass_RAB_Parameters_iE_Extensions_element */
typedef Asn1RTDList Ass_RAB_Parameters_iE_Extensions;

EXTERN int asn1PE_Ass_RAB_Parameters_iE_Extensions (ASN1CTXT* pctxt, Ass_RAB_Parameters_iE_Extensions* pvalue);

EXTERN int asn1PD_Ass_RAB_Parameters_iE_Extensions (ASN1CTXT* pctxt, Ass_RAB_Parameters_iE_Extensions* pvalue);

EXTERN void asn1Print_Ass_RAB_Parameters_iE_Extensions
   (const char* name, Ass_RAB_Parameters_iE_Extensions* pvalue);

EXTERN Ass_RAB_Parameters_iE_Extensions* asn1Test_Ass_RAB_Parameters_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Ass_RAB_Parameters                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Ass_RAB_Parameters {
   struct {
      unsigned assMaxBitrateInfPresent : 1;
      unsigned assGuaranteedBitRateInfPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Ass_RAB_Parameter_MaxBitrateList assMaxBitrateInf;
   Ass_RAB_Parameter_GuaranteedBitrateList assGuaranteedBitRateInf;
   Ass_RAB_Parameters_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} Ass_RAB_Parameters;

EXTERN int asn1PE_Ass_RAB_Parameters (ASN1CTXT* pctxt, Ass_RAB_Parameters* pvalue);

EXTERN int asn1PD_Ass_RAB_Parameters (ASN1CTXT* pctxt, Ass_RAB_Parameters* pvalue);

EXTERN void asn1Print_Ass_RAB_Parameters
   (const char* name, Ass_RAB_Parameters* pvalue);

EXTERN Ass_RAB_Parameters* asn1Test_Ass_RAB_Parameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NewBSS_To_OldBSS_Information                              */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr NewBSS_To_OldBSS_Information;

EXTERN int asn1PE_NewBSS_To_OldBSS_Information (ASN1CTXT* pctxt, NewBSS_To_OldBSS_Information value);

EXTERN int asn1PD_NewBSS_To_OldBSS_Information (ASN1CTXT* pctxt, NewBSS_To_OldBSS_Information* pvalue);

EXTERN void asn1Print_NewBSS_To_OldBSS_Information
   (const char* name, NewBSS_To_OldBSS_Information* pvalue);

EXTERN NewBSS_To_OldBSS_Information* asn1Test_NewBSS_To_OldBSS_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_N_PDU_SequenceNumber                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT16 DL_N_PDU_SequenceNumber;

EXTERN int asn1PE_DL_N_PDU_SequenceNumber (ASN1CTXT* pctxt, DL_N_PDU_SequenceNumber value);

EXTERN int asn1PD_DL_N_PDU_SequenceNumber (ASN1CTXT* pctxt, DL_N_PDU_SequenceNumber* pvalue);

EXTERN void asn1Print_DL_N_PDU_SequenceNumber
   (const char* name, DL_N_PDU_SequenceNumber* pvalue);

EXTERN DL_N_PDU_SequenceNumber* asn1Test_DL_N_PDU_SequenceNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_N_PDU_SequenceNumber                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT16 UL_N_PDU_SequenceNumber;

EXTERN int asn1PE_UL_N_PDU_SequenceNumber (ASN1CTXT* pctxt, UL_N_PDU_SequenceNumber value);

EXTERN int asn1PD_UL_N_PDU_SequenceNumber (ASN1CTXT* pctxt, UL_N_PDU_SequenceNumber* pvalue);

EXTERN void asn1Print_UL_N_PDU_SequenceNumber
   (const char* name, UL_N_PDU_SequenceNumber* pvalue);

EXTERN UL_N_PDU_SequenceNumber* asn1Test_UL_N_PDU_SequenceNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  KeyStatus                                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   old = 0,
   new_ = 1
} KeyStatus_Root;

typedef OSUINT32 KeyStatus;

EXTERN int asn1PE_KeyStatus (ASN1CTXT* pctxt, KeyStatus value);

EXTERN int asn1PD_KeyStatus (ASN1CTXT* pctxt, KeyStatus* pvalue);

EXTERN void asn1Print_KeyStatus
   (const char* name, KeyStatus* pvalue);

EXTERN KeyStatus* asn1Test_KeyStatus
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GlobalRNC_ID                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GlobalRNC_ID {
   PLMNidentity pLMNidentity;
   RNC_ID rNC_ID;
} GlobalRNC_ID;

EXTERN int asn1PE_GlobalRNC_ID (ASN1CTXT* pctxt, GlobalRNC_ID* pvalue);

EXTERN int asn1PD_GlobalRNC_ID (ASN1CTXT* pctxt, GlobalRNC_ID* pvalue);

EXTERN void asn1Print_GlobalRNC_ID
   (const char* name, GlobalRNC_ID* pvalue);

EXTERN GlobalRNC_ID* asn1Test_GlobalRNC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TMSI                                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TMSI {
   OSUINT32 numocts;
   OSOCTET data[4];
} TMSI;

EXTERN int asn1PE_TMSI (ASN1CTXT* pctxt, TMSI* pvalue);

EXTERN int asn1PD_TMSI (ASN1CTXT* pctxt, TMSI* pvalue);

EXTERN void asn1Print_TMSI
   (const char* name, TMSI* pvalue);

EXTERN TMSI* asn1Test_TMSI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  P_TMSI                                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN P_TMSI {
   OSUINT32 numocts;
   OSOCTET data[4];
} P_TMSI;

EXTERN int asn1PE_P_TMSI (ASN1CTXT* pctxt, P_TMSI* pvalue);

EXTERN int asn1PD_P_TMSI (ASN1CTXT* pctxt, P_TMSI* pvalue);

EXTERN void asn1Print_P_TMSI
   (const char* name, P_TMSI* pvalue);

EXTERN P_TMSI* asn1Test_P_TMSI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TemporaryUE_ID                                            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TemporaryUE_ID_tMSI           1
#define T_TemporaryUE_ID_p_TMSI         2
#define T_TemporaryUE_ID_extElem1       3

typedef struct EXTERN TemporaryUE_ID {
   int t;
   union {
      /* t = 1 */
      TMSI *tMSI;
      /* t = 2 */
      P_TMSI *p_TMSI;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TemporaryUE_ID;

EXTERN int asn1PE_TemporaryUE_ID (ASN1CTXT* pctxt, TemporaryUE_ID* pvalue);

EXTERN int asn1PD_TemporaryUE_ID (ASN1CTXT* pctxt, TemporaryUE_ID* pvalue);

EXTERN void asn1Print_TemporaryUE_ID
   (const char* name, TemporaryUE_ID* pvalue);

EXTERN TemporaryUE_ID* asn1Test_TemporaryUE_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} RAI_iE_Extensions_element;

EXTERN int asn1PE_RAI_iE_Extensions_element (ASN1CTXT* pctxt, RAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RAI_iE_Extensions_element (ASN1CTXT* pctxt, RAI_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_RAI_iE_Extensions_element (ASN1CTXT* pctxt,
   RAI_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_RAI_iE_Extensions_element (ASN1CTXT* pctxt,
   RAI_iE_Extensions_element *pvalue);

EXTERN void asn1Print_RAI_iE_Extensions_element
   (const char* name, RAI_iE_Extensions_element* pvalue);

EXTERN RAI_iE_Extensions_element* asn1Test_RAI_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/

/* List of RAI_iE_Extensions_element */
typedef Asn1RTDList RAI_iE_Extensions;

EXTERN int asn1PE_RAI_iE_Extensions (ASN1CTXT* pctxt, RAI_iE_Extensions* pvalue);

EXTERN int asn1PD_RAI_iE_Extensions (ASN1CTXT* pctxt, RAI_iE_Extensions* pvalue);

EXTERN void asn1Print_RAI_iE_Extensions
   (const char* name, RAI_iE_Extensions* pvalue);

EXTERN RAI_iE_Extensions* asn1Test_RAI_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAI                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   LAI lAI;
   RAC rAC;
   RAI_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} RAI;

EXTERN int asn1PE_RAI (ASN1CTXT* pctxt, RAI* pvalue);

EXTERN int asn1PD_RAI (ASN1CTXT* pctxt, RAI* pvalue);

EXTERN void asn1Print_RAI
   (const char* name, RAI* pvalue);

EXTERN RAI* asn1Test_RAI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PagingAreaID                                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_PagingAreaID_lAI              1
#define T_PagingAreaID_rAI              2
#define T_PagingAreaID_extElem1         3

typedef struct EXTERN PagingAreaID {
   int t;
   union {
      /* t = 1 */
      LAI *lAI;
      /* t = 2 */
      RAI *rAI;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} PagingAreaID;

EXTERN int asn1PE_PagingAreaID (ASN1CTXT* pctxt, PagingAreaID* pvalue);

EXTERN int asn1PD_PagingAreaID (ASN1CTXT* pctxt, PagingAreaID* pvalue);

EXTERN void asn1Print_PagingAreaID
   (const char* name, PagingAreaID* pvalue);

EXTERN PagingAreaID* asn1Test_PagingAreaID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PagingCause                                               */
/*                                                            */
/**************************************************************/

typedef enum {
   terminating_conversational_call = 0,
   terminating_streaming_call = 1,
   terminating_interactive_call = 2,
   terminating_background_call = 3,
   terminating_low_priority_signalling = 4
} PagingCause_Root;

typedef enum {
   terminating_high_priority_signalling = 5
} PagingCause_Ext;

typedef OSUINT32 PagingCause;

EXTERN int asn1PE_PagingCause (ASN1CTXT* pctxt, PagingCause value);

EXTERN int asn1PD_PagingCause (ASN1CTXT* pctxt, PagingCause* pvalue);

EXTERN void asn1Print_PagingCause
   (const char* name, PagingCause* pvalue);

EXTERN PagingCause* asn1Test_PagingCause
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NonSearchingIndication                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   non_searching = 0,
   searching = 1
} NonSearchingIndication_Root;

typedef OSUINT32 NonSearchingIndication;

EXTERN int asn1PE_NonSearchingIndication (ASN1CTXT* pctxt, NonSearchingIndication value);

EXTERN int asn1PD_NonSearchingIndication (ASN1CTXT* pctxt, NonSearchingIndication* pvalue);

EXTERN void asn1Print_NonSearchingIndication
   (const char* name, NonSearchingIndication* pvalue);

EXTERN NonSearchingIndication* asn1Test_NonSearchingIndication
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DRX_CycleLengthCoefficient                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DRX_CycleLengthCoefficient;

EXTERN int asn1PE_DRX_CycleLengthCoefficient (ASN1CTXT* pctxt, DRX_CycleLengthCoefficient value);

EXTERN int asn1PD_DRX_CycleLengthCoefficient (ASN1CTXT* pctxt, DRX_CycleLengthCoefficient* pvalue);

EXTERN void asn1Print_DRX_CycleLengthCoefficient
   (const char* name, DRX_CycleLengthCoefficient* pvalue);

EXTERN DRX_CycleLengthCoefficient* asn1Test_DRX_CycleLengthCoefficient
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceType                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TraceType {
   OSUINT32 numocts;
   OSOCTET data[1];
} TraceType;

EXTERN int asn1PE_TraceType (ASN1CTXT* pctxt, TraceType* pvalue);

EXTERN int asn1PD_TraceType (ASN1CTXT* pctxt, TraceType* pvalue);

EXTERN void asn1Print_TraceType
   (const char* name, TraceType* pvalue);

EXTERN TraceType* asn1Test_TraceType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TriggerID                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TriggerID {
   OSUINT32 numocts;
   OSOCTET data[22];
} TriggerID;

EXTERN int asn1PE_TriggerID (ASN1CTXT* pctxt, TriggerID* pvalue);

EXTERN int asn1PD_TriggerID (ASN1CTXT* pctxt, TriggerID* pvalue);

EXTERN void asn1Print_TriggerID
   (const char* name, TriggerID* pvalue);

EXTERN TriggerID* asn1Test_TriggerID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEI                                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEI {
   OSUINT32 numocts;
   OSOCTET data[8];
} IMEI;

EXTERN int asn1PE_IMEI (ASN1CTXT* pctxt, IMEI* pvalue);

EXTERN int asn1PD_IMEI (ASN1CTXT* pctxt, IMEI* pvalue);

EXTERN void asn1Print_IMEI
   (const char* name, IMEI* pvalue);

EXTERN IMEI* asn1Test_IMEI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEISV                                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEISV {
   OSUINT32 numocts;
   OSOCTET data[8];
} IMEISV;

EXTERN int asn1PE_IMEISV (ASN1CTXT* pctxt, IMEISV* pvalue);

EXTERN int asn1PD_IMEISV (ASN1CTXT* pctxt, IMEISV* pvalue);

EXTERN void asn1Print_IMEISV
   (const char* name, IMEISV* pvalue);

EXTERN IMEISV* asn1Test_IMEISV
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UE_ID                                                     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_UE_ID_imsi                    1
#define T_UE_ID_imei                    2
#define T_UE_ID_imeisv                  3
#define T_UE_ID_extElem1                4

typedef struct EXTERN UE_ID {
   int t;
   union {
      /* t = 1 */
      IMSI *imsi;
      /* t = 2 */
      IMEI *imei;
      /* t = 3 */
      IMEISV *imeisv;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} UE_ID;

EXTERN int asn1PE_UE_ID (ASN1CTXT* pctxt, UE_ID* pvalue);

EXTERN int asn1PD_UE_ID (ASN1CTXT* pctxt, UE_ID* pvalue);

EXTERN void asn1Print_UE_ID
   (const char* name, UE_ID* pvalue);

EXTERN UE_ID* asn1Test_UE_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  OMC_ID                                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN OMC_ID {
   OSUINT32 numocts;
   OSOCTET data[22];
} OMC_ID;

EXTERN int asn1PE_OMC_ID (ASN1CTXT* pctxt, OMC_ID* pvalue);

EXTERN int asn1PD_OMC_ID (ASN1CTXT* pctxt, OMC_ID* pvalue);

EXTERN void asn1Print_OMC_ID
   (const char* name, OMC_ID* pvalue);

EXTERN OMC_ID* asn1Test_OMC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TraceDepth                                                */
/*                                                            */
/**************************************************************/

typedef enum {
   minimum = 0,
   medium = 1,
   maximum = 2
} TraceDepth_Root;

typedef OSUINT32 TraceDepth;

EXTERN int asn1PE_TraceDepth (ASN1CTXT* pctxt, TraceDepth value);

EXTERN int asn1PD_TraceDepth (ASN1CTXT* pctxt, TraceDepth* pvalue);

EXTERN void asn1Print_TraceDepth
   (const char* name, TraceDepth* pvalue);

EXTERN TraceDepth* asn1Test_TraceDepth
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterfacesToTraceItem_interface_                          */
/*                                                            */
/**************************************************************/

typedef enum {
   iu_cs = 0,
   iu_ps = 1,
   iur = 2,
   iub = 3,
   uu = 4
} InterfacesToTraceItem_interface__Root;

typedef OSUINT32 InterfacesToTraceItem_interface_;

EXTERN int asn1PE_InterfacesToTraceItem_interface_ (ASN1CTXT* pctxt, InterfacesToTraceItem_interface_ value);

EXTERN int asn1PD_InterfacesToTraceItem_interface_ (ASN1CTXT* pctxt, InterfacesToTraceItem_interface_* pvalue);

EXTERN void asn1Print_InterfacesToTraceItem_interface_
   (const char* name, InterfacesToTraceItem_interface_* pvalue);

EXTERN InterfacesToTraceItem_interface_* asn1Test_InterfacesToTraceItem_interface_
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterfacesToTraceItem_iE_Extensions_element               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InterfacesToTraceItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} InterfacesToTraceItem_iE_Extensions_element;

EXTERN int asn1PE_InterfacesToTraceItem_iE_Extensions_element (ASN1CTXT* pctxt, InterfacesToTraceItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_InterfacesToTraceItem_iE_Extensions_element (ASN1CTXT* pctxt, InterfacesToTraceItem_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_InterfacesToTraceItem_iE_Extensions_element (ASN1CTXT* pctxt,
   InterfacesToTraceItem_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_InterfacesToTraceItem_iE_Extensions_element (ASN1CTXT* pctxt,
   InterfacesToTraceItem_iE_Extensions_element *pvalue);

EXTERN void asn1Print_InterfacesToTraceItem_iE_Extensions_element
   (const char* name, InterfacesToTraceItem_iE_Extensions_element* pvalue);

EXTERN InterfacesToTraceItem_iE_Extensions_element* asn1Test_InterfacesToTraceItem_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterfacesToTraceItem_iE_Extensions                       */
/*                                                            */
/**************************************************************/

/* List of InterfacesToTraceItem_iE_Extensions_element */
typedef Asn1RTDList InterfacesToTraceItem_iE_Extensions;

EXTERN int asn1PE_InterfacesToTraceItem_iE_Extensions (ASN1CTXT* pctxt, InterfacesToTraceItem_iE_Extensions* pvalue);

EXTERN int asn1PD_InterfacesToTraceItem_iE_Extensions (ASN1CTXT* pctxt, InterfacesToTraceItem_iE_Extensions* pvalue);

EXTERN void asn1Print_InterfacesToTraceItem_iE_Extensions
   (const char* name, InterfacesToTraceItem_iE_Extensions* pvalue);

EXTERN InterfacesToTraceItem_iE_Extensions* asn1Test_InterfacesToTraceItem_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterfacesToTraceItem                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InterfacesToTraceItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   InterfacesToTraceItem_interface_ interface_;
   InterfacesToTraceItem_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} InterfacesToTraceItem;

EXTERN int asn1PE_InterfacesToTraceItem (ASN1CTXT* pctxt, InterfacesToTraceItem* pvalue);

EXTERN int asn1PD_InterfacesToTraceItem (ASN1CTXT* pctxt, InterfacesToTraceItem* pvalue);

EXTERN void asn1Print_InterfacesToTraceItem
   (const char* name, InterfacesToTraceItem* pvalue);

EXTERN InterfacesToTraceItem* asn1Test_InterfacesToTraceItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ListOfInterfacesToTrace                                   */
/*                                                            */
/**************************************************************/

/* List of InterfacesToTraceItem */
typedef Asn1RTDList ListOfInterfacesToTrace;

EXTERN int asn1PE_ListOfInterfacesToTrace (ASN1CTXT* pctxt, ListOfInterfacesToTrace* pvalue);

EXTERN int asn1PD_ListOfInterfacesToTrace (ASN1CTXT* pctxt, ListOfInterfacesToTrace* pvalue);

EXTERN void asn1Print_ListOfInterfacesToTrace
   (const char* name, ListOfInterfacesToTrace* pvalue);

EXTERN ListOfInterfacesToTrace* asn1Test_ListOfInterfacesToTrace
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TracePropagationParameters_iE_Extensions_element          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TracePropagationParameters_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} TracePropagationParameters_iE_Extensions_element;

EXTERN int asn1PE_TracePropagationParameters_iE_Extensions_element (ASN1CTXT* pctxt, TracePropagationParameters_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TracePropagationParameters_iE_Extensions_element (ASN1CTXT* pctxt, TracePropagationParameters_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_TracePropagationParameters_iE_Extensions_element (ASN1CTXT* pctxt,
   TracePropagationParameters_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_TracePropagationParameters_iE_Extensions_element (ASN1CTXT* pctxt,
   TracePropagationParameters_iE_Extensions_element *pvalue);

EXTERN void asn1Print_TracePropagationParameters_iE_Extensions_element
   (const char* name, TracePropagationParameters_iE_Extensions_element* pvalue);

EXTERN TracePropagationParameters_iE_Extensions_element* asn1Test_TracePropagationParameters_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TracePropagationParameters_iE_Extensions                  */
/*                                                            */
/**************************************************************/

/* List of TracePropagationParameters_iE_Extensions_element */
typedef Asn1RTDList TracePropagationParameters_iE_Extensions;

EXTERN int asn1PE_TracePropagationParameters_iE_Extensions (ASN1CTXT* pctxt, TracePropagationParameters_iE_Extensions* pvalue);

EXTERN int asn1PD_TracePropagationParameters_iE_Extensions (ASN1CTXT* pctxt, TracePropagationParameters_iE_Extensions* pvalue);

EXTERN void asn1Print_TracePropagationParameters_iE_Extensions
   (const char* name, TracePropagationParameters_iE_Extensions* pvalue);

EXTERN TracePropagationParameters_iE_Extensions* asn1Test_TracePropagationParameters_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TracePropagationParameters                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TracePropagationParameters {
   struct {
      unsigned listOfInterfacesToTracePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TraceRecordingSessionReference traceRecordingSessionReference;
   TraceDepth traceDepth;
   ListOfInterfacesToTrace listOfInterfacesToTrace;
   TracePropagationParameters_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} TracePropagationParameters;

EXTERN int asn1PE_TracePropagationParameters (ASN1CTXT* pctxt, TracePropagationParameters* pvalue);

EXTERN int asn1PD_TracePropagationParameters (ASN1CTXT* pctxt, TracePropagationParameters* pvalue);

EXTERN void asn1Print_TracePropagationParameters
   (const char* name, TracePropagationParameters* pvalue);

EXTERN TracePropagationParameters* asn1Test_TracePropagationParameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Event                                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   stop_change_of_service_area = 0,
   direct = 1,
   change_of_servicearea = 2
} Event_Root;

typedef enum {
   stop_direct = 3
} Event_Ext;

typedef OSUINT32 Event;

EXTERN int asn1PE_Event (ASN1CTXT* pctxt, Event value);

EXTERN int asn1PD_Event (ASN1CTXT* pctxt, Event* pvalue);

EXTERN void asn1Print_Event
   (const char* name, Event* pvalue);

EXTERN Event* asn1Test_Event
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportArea                                                */
/*                                                            */
/**************************************************************/

typedef enum {
   service_area = 0,
   geographical_area = 1
} ReportArea_Root;

typedef OSUINT32 ReportArea;

EXTERN int asn1PE_ReportArea (ASN1CTXT* pctxt, ReportArea value);

EXTERN int asn1PD_ReportArea (ASN1CTXT* pctxt, ReportArea* pvalue);

EXTERN void asn1Print_ReportArea
   (const char* name, ReportArea* pvalue);

EXTERN ReportArea* asn1Test_ReportArea
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestType                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RequestType {
   struct {
      unsigned accuracyCodePresent : 1;
   } m;
   Event event;
   ReportArea reportArea;
   OSUINT8 accuracyCode;
   Asn1RTDList extElem1;
} RequestType;

EXTERN int asn1PE_RequestType (ASN1CTXT* pctxt, RequestType* pvalue);

EXTERN int asn1PD_RequestType (ASN1CTXT* pctxt, RequestType* pvalue);

EXTERN void asn1Print_RequestType
   (const char* name, RequestType* pvalue);

EXTERN RequestType* asn1Test_RequestType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  VerticalAccuracyCode                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT8 VerticalAccuracyCode;

EXTERN int asn1PE_VerticalAccuracyCode (ASN1CTXT* pctxt, VerticalAccuracyCode value);

EXTERN int asn1PD_VerticalAccuracyCode (ASN1CTXT* pctxt, VerticalAccuracyCode* pvalue);

EXTERN void asn1Print_VerticalAccuracyCode
   (const char* name, VerticalAccuracyCode* pvalue);

EXTERN VerticalAccuracyCode* asn1Test_VerticalAccuracyCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ResponseTime                                              */
/*                                                            */
/**************************************************************/

typedef enum {
   lowdelay = 0,
   delaytolerant = 1
} ResponseTime_Root;

typedef OSUINT32 ResponseTime;

EXTERN int asn1PE_ResponseTime (ASN1CTXT* pctxt, ResponseTime value);

EXTERN int asn1PD_ResponseTime (ASN1CTXT* pctxt, ResponseTime* pvalue);

EXTERN void asn1Print_ResponseTime
   (const char* name, ResponseTime* pvalue);

EXTERN ResponseTime* asn1Test_ResponseTime
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositioningPriority                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   high_Priority = 0,
   normal_Priority = 1
} PositioningPriority_Root;

typedef OSUINT32 PositioningPriority;

EXTERN int asn1PE_PositioningPriority (ASN1CTXT* pctxt, PositioningPriority value);

EXTERN int asn1PD_PositioningPriority (ASN1CTXT* pctxt, PositioningPriority* pvalue);

EXTERN void asn1Print_PositioningPriority
   (const char* name, PositioningPriority* pvalue);

EXTERN PositioningPriority* asn1Test_PositioningPriority
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ClientType                                                */
/*                                                            */
/**************************************************************/

typedef enum {
   emergency_Services = 0,
   value_Added_Services = 1,
   pLMN_Operator_Services = 2,
   lawful_Intercept_Services = 3,
   pLMN_Operator_Broadcast_Services = 4,
   pLMN_Operator_O_et_M = 5,
   pLMN_Operator_Anonymous_Statistics = 6,
   pLMN_Operator_Target_MS_Service_Support = 7
} ClientType_Root;

typedef OSUINT32 ClientType;

EXTERN int asn1PE_ClientType (ASN1CTXT* pctxt, ClientType value);

EXTERN int asn1PD_ClientType (ASN1CTXT* pctxt, ClientType* pvalue);

EXTERN void asn1Print_ClientType
   (const char* name, ClientType* pvalue);

EXTERN ClientType* asn1Test_ClientType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GeographicalCoordinates_latitudeSign                      */
/*                                                            */
/**************************************************************/

typedef enum {
   north = 0,
   south = 1
} GeographicalCoordinates_latitudeSign_Root;

typedef OSUINT32 GeographicalCoordinates_latitudeSign;

EXTERN int asn1PE_GeographicalCoordinates_latitudeSign (ASN1CTXT* pctxt, GeographicalCoordinates_latitudeSign value);

EXTERN int asn1PD_GeographicalCoordinates_latitudeSign (ASN1CTXT* pctxt, GeographicalCoordinates_latitudeSign* pvalue);

EXTERN void asn1Print_GeographicalCoordinates_latitudeSign
   (const char* name, GeographicalCoordinates_latitudeSign* pvalue);

EXTERN GeographicalCoordinates_latitudeSign* asn1Test_GeographicalCoordinates_latitudeSign
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GeographicalCoordinates_iE_Extensions_element             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GeographicalCoordinates_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GeographicalCoordinates_iE_Extensions_element;

EXTERN int asn1PE_GeographicalCoordinates_iE_Extensions_element (ASN1CTXT* pctxt, GeographicalCoordinates_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GeographicalCoordinates_iE_Extensions_element (ASN1CTXT* pctxt, GeographicalCoordinates_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GeographicalCoordinates_iE_Extensions_element (ASN1CTXT* pctxt,
   GeographicalCoordinates_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GeographicalCoordinates_iE_Extensions_element (ASN1CTXT* pctxt,
   GeographicalCoordinates_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GeographicalCoordinates_iE_Extensions_element
   (const char* name, GeographicalCoordinates_iE_Extensions_element* pvalue);

EXTERN GeographicalCoordinates_iE_Extensions_element* asn1Test_GeographicalCoordinates_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GeographicalCoordinates_iE_Extensions                     */
/*                                                            */
/**************************************************************/

/* List of GeographicalCoordinates_iE_Extensions_element */
typedef Asn1RTDList GeographicalCoordinates_iE_Extensions;

EXTERN int asn1PE_GeographicalCoordinates_iE_Extensions (ASN1CTXT* pctxt, GeographicalCoordinates_iE_Extensions* pvalue);

EXTERN int asn1PD_GeographicalCoordinates_iE_Extensions (ASN1CTXT* pctxt, GeographicalCoordinates_iE_Extensions* pvalue);

EXTERN void asn1Print_GeographicalCoordinates_iE_Extensions
   (const char* name, GeographicalCoordinates_iE_Extensions* pvalue);

EXTERN GeographicalCoordinates_iE_Extensions* asn1Test_GeographicalCoordinates_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GeographicalCoordinates                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GeographicalCoordinates {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates_latitudeSign latitudeSign;
   OSUINT32 latitude;
   OSINT32 longitude;
   GeographicalCoordinates_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GeographicalCoordinates;

EXTERN int asn1PE_GeographicalCoordinates (ASN1CTXT* pctxt, GeographicalCoordinates* pvalue);

EXTERN int asn1PD_GeographicalCoordinates (ASN1CTXT* pctxt, GeographicalCoordinates* pvalue);

EXTERN void asn1Print_GeographicalCoordinates
   (const char* name, GeographicalCoordinates* pvalue);

EXTERN GeographicalCoordinates* asn1Test_GeographicalCoordinates
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Point_iE_Extensions_element                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_Point_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_Point_iE_Extensions_element;

EXTERN int asn1PE_GA_Point_iE_Extensions_element (ASN1CTXT* pctxt, GA_Point_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_Point_iE_Extensions_element (ASN1CTXT* pctxt, GA_Point_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_Point_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_Point_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_Point_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_Point_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_Point_iE_Extensions_element
   (const char* name, GA_Point_iE_Extensions_element* pvalue);

EXTERN GA_Point_iE_Extensions_element* asn1Test_GA_Point_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Point_iE_Extensions                                    */
/*                                                            */
/**************************************************************/

/* List of GA_Point_iE_Extensions_element */
typedef Asn1RTDList GA_Point_iE_Extensions;

EXTERN int asn1PE_GA_Point_iE_Extensions (ASN1CTXT* pctxt, GA_Point_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_Point_iE_Extensions (ASN1CTXT* pctxt, GA_Point_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_Point_iE_Extensions
   (const char* name, GA_Point_iE_Extensions* pvalue);

EXTERN GA_Point_iE_Extensions* asn1Test_GA_Point_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Point                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_Point {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   GA_Point_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GA_Point;

EXTERN int asn1PE_GA_Point (ASN1CTXT* pctxt, GA_Point* pvalue);

EXTERN int asn1PD_GA_Point (ASN1CTXT* pctxt, GA_Point* pvalue);

EXTERN void asn1Print_GA_Point
   (const char* name, GA_Point* pvalue);

EXTERN GA_Point* asn1Test_GA_Point
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithUnCertainty_iE_Extensions_element             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithUnCertainty_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_PointWithUnCertainty_iE_Extensions_element;

EXTERN int asn1PE_GA_PointWithUnCertainty_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithUnCertainty_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_PointWithUnCertainty_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithUnCertainty_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_PointWithUnCertainty_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithUnCertainty_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_PointWithUnCertainty_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithUnCertainty_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_PointWithUnCertainty_iE_Extensions_element
   (const char* name, GA_PointWithUnCertainty_iE_Extensions_element* pvalue);

EXTERN GA_PointWithUnCertainty_iE_Extensions_element* asn1Test_GA_PointWithUnCertainty_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithUnCertainty_iE_Extensions                     */
/*                                                            */
/**************************************************************/

/* List of GA_PointWithUnCertainty_iE_Extensions_element */
typedef Asn1RTDList GA_PointWithUnCertainty_iE_Extensions;

EXTERN int asn1PE_GA_PointWithUnCertainty_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithUnCertainty_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_PointWithUnCertainty_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithUnCertainty_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_PointWithUnCertainty_iE_Extensions
   (const char* name, GA_PointWithUnCertainty_iE_Extensions* pvalue);

EXTERN GA_PointWithUnCertainty_iE_Extensions* asn1Test_GA_PointWithUnCertainty_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithUnCertainty                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithUnCertainty {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   GA_PointWithUnCertainty_iE_Extensions iE_Extensions;
   OSUINT8 uncertaintyCode;
} GA_PointWithUnCertainty;

EXTERN int asn1PE_GA_PointWithUnCertainty (ASN1CTXT* pctxt, GA_PointWithUnCertainty* pvalue);

EXTERN int asn1PD_GA_PointWithUnCertainty (ASN1CTXT* pctxt, GA_PointWithUnCertainty* pvalue);

EXTERN void asn1Print_GA_PointWithUnCertainty
   (const char* name, GA_PointWithUnCertainty* pvalue);

EXTERN GA_PointWithUnCertainty* asn1Test_GA_PointWithUnCertainty
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Polygon_element_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_Polygon_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_Polygon_element_iE_Extensions_element;

EXTERN int asn1PE_GA_Polygon_element_iE_Extensions_element (ASN1CTXT* pctxt, GA_Polygon_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_Polygon_element_iE_Extensions_element (ASN1CTXT* pctxt, GA_Polygon_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_Polygon_element_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_Polygon_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_Polygon_element_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_Polygon_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_Polygon_element_iE_Extensions_element
   (const char* name, GA_Polygon_element_iE_Extensions_element* pvalue);

EXTERN GA_Polygon_element_iE_Extensions_element* asn1Test_GA_Polygon_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Polygon_element_iE_Extensions                          */
/*                                                            */
/**************************************************************/

/* List of GA_Polygon_element_iE_Extensions_element */
typedef Asn1RTDList GA_Polygon_element_iE_Extensions;

EXTERN int asn1PE_GA_Polygon_element_iE_Extensions (ASN1CTXT* pctxt, GA_Polygon_element_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_Polygon_element_iE_Extensions (ASN1CTXT* pctxt, GA_Polygon_element_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_Polygon_element_iE_Extensions
   (const char* name, GA_Polygon_element_iE_Extensions* pvalue);

EXTERN GA_Polygon_element_iE_Extensions* asn1Test_GA_Polygon_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Polygon_element                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_Polygon_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   GA_Polygon_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GA_Polygon_element;

EXTERN int asn1PE_GA_Polygon_element (ASN1CTXT* pctxt, GA_Polygon_element* pvalue);

EXTERN int asn1PD_GA_Polygon_element (ASN1CTXT* pctxt, GA_Polygon_element* pvalue);

EXTERN void asn1Print_GA_Polygon_element
   (const char* name, GA_Polygon_element* pvalue);

EXTERN GA_Polygon_element* asn1Test_GA_Polygon_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_Polygon                                                */
/*                                                            */
/**************************************************************/

/* List of GA_Polygon_element */
typedef Asn1RTDList GA_Polygon;

EXTERN int asn1PE_GA_Polygon (ASN1CTXT* pctxt, GA_Polygon* pvalue);

EXTERN int asn1PD_GA_Polygon (ASN1CTXT* pctxt, GA_Polygon* pvalue);

EXTERN void asn1Print_GA_Polygon
   (const char* name, GA_Polygon* pvalue);

EXTERN GA_Polygon* asn1Test_GA_Polygon
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_UncertaintyEllipse                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_UncertaintyEllipse {
   OSUINT8 uncertaintySemi_major;
   OSUINT8 uncertaintySemi_minor;
   OSUINT8 orientationOfMajorAxis;
   Asn1RTDList extElem1;
} GA_UncertaintyEllipse;

EXTERN int asn1PE_GA_UncertaintyEllipse (ASN1CTXT* pctxt, GA_UncertaintyEllipse* pvalue);

EXTERN int asn1PD_GA_UncertaintyEllipse (ASN1CTXT* pctxt, GA_UncertaintyEllipse* pvalue);

EXTERN void asn1Print_GA_UncertaintyEllipse
   (const char* name, GA_UncertaintyEllipse* pvalue);

EXTERN GA_UncertaintyEllipse* asn1Test_GA_UncertaintyEllipse
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithUnCertaintyEllipse_iE_Extensions_element      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithUnCertaintyEllipse_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_PointWithUnCertaintyEllipse_iE_Extensions_element;

EXTERN int asn1PE_GA_PointWithUnCertaintyEllipse_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithUnCertaintyEllipse_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_PointWithUnCertaintyEllipse_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithUnCertaintyEllipse_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_PointWithUnCertaintyEllipse_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithUnCertaintyEllipse_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_PointWithUnCertaintyEllipse_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithUnCertaintyEllipse_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_PointWithUnCertaintyEllipse_iE_Extensions_element
   (const char* name, GA_PointWithUnCertaintyEllipse_iE_Extensions_element* pvalue);

EXTERN GA_PointWithUnCertaintyEllipse_iE_Extensions_element* asn1Test_GA_PointWithUnCertaintyEllipse_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithUnCertaintyEllipse_iE_Extensions              */
/*                                                            */
/**************************************************************/

/* List of GA_PointWithUnCertaintyEllipse_iE_Extensions_element */
typedef Asn1RTDList GA_PointWithUnCertaintyEllipse_iE_Extensions;

EXTERN int asn1PE_GA_PointWithUnCertaintyEllipse_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithUnCertaintyEllipse_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_PointWithUnCertaintyEllipse_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithUnCertaintyEllipse_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_PointWithUnCertaintyEllipse_iE_Extensions
   (const char* name, GA_PointWithUnCertaintyEllipse_iE_Extensions* pvalue);

EXTERN GA_PointWithUnCertaintyEllipse_iE_Extensions* asn1Test_GA_PointWithUnCertaintyEllipse_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithUnCertaintyEllipse                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithUnCertaintyEllipse {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   GA_UncertaintyEllipse uncertaintyEllipse;
   OSUINT8 confidence;
   GA_PointWithUnCertaintyEllipse_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GA_PointWithUnCertaintyEllipse;

EXTERN int asn1PE_GA_PointWithUnCertaintyEllipse (ASN1CTXT* pctxt, GA_PointWithUnCertaintyEllipse* pvalue);

EXTERN int asn1PD_GA_PointWithUnCertaintyEllipse (ASN1CTXT* pctxt, GA_PointWithUnCertaintyEllipse* pvalue);

EXTERN void asn1Print_GA_PointWithUnCertaintyEllipse
   (const char* name, GA_PointWithUnCertaintyEllipse* pvalue);

EXTERN GA_PointWithUnCertaintyEllipse* asn1Test_GA_PointWithUnCertaintyEllipse
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_AltitudeAndDirection_directionOfAltitude               */
/*                                                            */
/**************************************************************/

typedef enum {
   height = 0,
   depth = 1
} GA_AltitudeAndDirection_directionOfAltitude_Root;

typedef OSUINT32 GA_AltitudeAndDirection_directionOfAltitude;

EXTERN int asn1PE_GA_AltitudeAndDirection_directionOfAltitude (ASN1CTXT* pctxt, GA_AltitudeAndDirection_directionOfAltitude value);

EXTERN int asn1PD_GA_AltitudeAndDirection_directionOfAltitude (ASN1CTXT* pctxt, GA_AltitudeAndDirection_directionOfAltitude* pvalue);

EXTERN void asn1Print_GA_AltitudeAndDirection_directionOfAltitude
   (const char* name, GA_AltitudeAndDirection_directionOfAltitude* pvalue);

EXTERN GA_AltitudeAndDirection_directionOfAltitude* asn1Test_GA_AltitudeAndDirection_directionOfAltitude
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_AltitudeAndDirection                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_AltitudeAndDirection {
   GA_AltitudeAndDirection_directionOfAltitude directionOfAltitude;
   OSUINT16 altitude;
   Asn1RTDList extElem1;
} GA_AltitudeAndDirection;

EXTERN int asn1PE_GA_AltitudeAndDirection (ASN1CTXT* pctxt, GA_AltitudeAndDirection* pvalue);

EXTERN int asn1PD_GA_AltitudeAndDirection (ASN1CTXT* pctxt, GA_AltitudeAndDirection* pvalue);

EXTERN void asn1Print_GA_AltitudeAndDirection
   (const char* name, GA_AltitudeAndDirection* pvalue);

EXTERN GA_AltitudeAndDirection* asn1Test_GA_AltitudeAndDirection
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithAltitude_iE_Extensions_element                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithAltitude_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_PointWithAltitude_iE_Extensions_element;

EXTERN int asn1PE_GA_PointWithAltitude_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithAltitude_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_PointWithAltitude_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithAltitude_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_PointWithAltitude_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithAltitude_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_PointWithAltitude_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithAltitude_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_PointWithAltitude_iE_Extensions_element
   (const char* name, GA_PointWithAltitude_iE_Extensions_element* pvalue);

EXTERN GA_PointWithAltitude_iE_Extensions_element* asn1Test_GA_PointWithAltitude_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithAltitude_iE_Extensions                        */
/*                                                            */
/**************************************************************/

/* List of GA_PointWithAltitude_iE_Extensions_element */
typedef Asn1RTDList GA_PointWithAltitude_iE_Extensions;

EXTERN int asn1PE_GA_PointWithAltitude_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithAltitude_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_PointWithAltitude_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithAltitude_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_PointWithAltitude_iE_Extensions
   (const char* name, GA_PointWithAltitude_iE_Extensions* pvalue);

EXTERN GA_PointWithAltitude_iE_Extensions* asn1Test_GA_PointWithAltitude_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithAltitude                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithAltitude {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   GA_AltitudeAndDirection altitudeAndDirection;
   GA_PointWithAltitude_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GA_PointWithAltitude;

EXTERN int asn1PE_GA_PointWithAltitude (ASN1CTXT* pctxt, GA_PointWithAltitude* pvalue);

EXTERN int asn1PD_GA_PointWithAltitude (ASN1CTXT* pctxt, GA_PointWithAltitude* pvalue);

EXTERN void asn1Print_GA_PointWithAltitude
   (const char* name, GA_PointWithAltitude* pvalue);

EXTERN GA_PointWithAltitude* asn1Test_GA_PointWithAltitude
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extension  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element;

EXTERN int asn1PE_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element (ASN1CTXT* pctxt, GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element
   (const char* name, GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element* pvalue);

EXTERN GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element* asn1Test_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extension  */
/*                                                            */
/**************************************************************/

/* List of GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions_element */
typedef Asn1RTDList GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions;

EXTERN int asn1PE_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions (ASN1CTXT* pctxt, GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions
   (const char* name, GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions* pvalue);

EXTERN GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions* asn1Test_GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_PointWithAltitudeAndUncertaintyEllipsoid               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_PointWithAltitudeAndUncertaintyEllipsoid {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   GA_AltitudeAndDirection altitudeAndDirection;
   GA_UncertaintyEllipse uncertaintyEllipse;
   OSUINT8 uncertaintyAltitude;
   OSUINT8 confidence;
   GA_PointWithAltitudeAndUncertaintyEllipsoid_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GA_PointWithAltitudeAndUncertaintyEllipsoid;

EXTERN int asn1PE_GA_PointWithAltitudeAndUncertaintyEllipsoid (ASN1CTXT* pctxt, GA_PointWithAltitudeAndUncertaintyEllipsoid* pvalue);

EXTERN int asn1PD_GA_PointWithAltitudeAndUncertaintyEllipsoid (ASN1CTXT* pctxt, GA_PointWithAltitudeAndUncertaintyEllipsoid* pvalue);

EXTERN void asn1Print_GA_PointWithAltitudeAndUncertaintyEllipsoid
   (const char* name, GA_PointWithAltitudeAndUncertaintyEllipsoid* pvalue);

EXTERN GA_PointWithAltitudeAndUncertaintyEllipsoid* asn1Test_GA_PointWithAltitudeAndUncertaintyEllipsoid
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_EllipsoidArc_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_EllipsoidArc_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GA_EllipsoidArc_iE_Extensions_element;

EXTERN int asn1PE_GA_EllipsoidArc_iE_Extensions_element (ASN1CTXT* pctxt, GA_EllipsoidArc_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GA_EllipsoidArc_iE_Extensions_element (ASN1CTXT* pctxt, GA_EllipsoidArc_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GA_EllipsoidArc_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_EllipsoidArc_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GA_EllipsoidArc_iE_Extensions_element (ASN1CTXT* pctxt,
   GA_EllipsoidArc_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GA_EllipsoidArc_iE_Extensions_element
   (const char* name, GA_EllipsoidArc_iE_Extensions_element* pvalue);

EXTERN GA_EllipsoidArc_iE_Extensions_element* asn1Test_GA_EllipsoidArc_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_EllipsoidArc_iE_Extensions                             */
/*                                                            */
/**************************************************************/

/* List of GA_EllipsoidArc_iE_Extensions_element */
typedef Asn1RTDList GA_EllipsoidArc_iE_Extensions;

EXTERN int asn1PE_GA_EllipsoidArc_iE_Extensions (ASN1CTXT* pctxt, GA_EllipsoidArc_iE_Extensions* pvalue);

EXTERN int asn1PD_GA_EllipsoidArc_iE_Extensions (ASN1CTXT* pctxt, GA_EllipsoidArc_iE_Extensions* pvalue);

EXTERN void asn1Print_GA_EllipsoidArc_iE_Extensions
   (const char* name, GA_EllipsoidArc_iE_Extensions* pvalue);

EXTERN GA_EllipsoidArc_iE_Extensions* asn1Test_GA_EllipsoidArc_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GA_EllipsoidArc                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GA_EllipsoidArc {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GeographicalCoordinates geographicalCoordinates;
   OSUINT16 innerRadius;
   OSUINT8 uncertaintyRadius;
   OSUINT8 offsetAngle;
   OSUINT8 includedAngle;
   OSUINT8 confidence;
   GA_EllipsoidArc_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} GA_EllipsoidArc;

EXTERN int asn1PE_GA_EllipsoidArc (ASN1CTXT* pctxt, GA_EllipsoidArc* pvalue);

EXTERN int asn1PD_GA_EllipsoidArc (ASN1CTXT* pctxt, GA_EllipsoidArc* pvalue);

EXTERN void asn1Print_GA_EllipsoidArc
   (const char* name, GA_EllipsoidArc* pvalue);

EXTERN GA_EllipsoidArc* asn1Test_GA_EllipsoidArc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GeographicalArea                                          */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_GeographicalArea_point        1
#define T_GeographicalArea_pointWithUnCertainty 2
#define T_GeographicalArea_polygon      3
#define T_GeographicalArea_pointWithUncertaintyEllipse 4
#define T_GeographicalArea_pointWithAltitude 5
#define T_GeographicalArea_pointWithAltitudeAndUncertaintyEllipsoid 6
#define T_GeographicalArea_ellipsoidArc 7
#define T_GeographicalArea_extElem1     8

typedef struct EXTERN GeographicalArea {
   int t;
   union {
      /* t = 1 */
      GA_Point *point;
      /* t = 2 */
      GA_PointWithUnCertainty *pointWithUnCertainty;
      /* t = 3 */
      GA_Polygon *polygon;
      /* t = 4 */
      GA_PointWithUnCertaintyEllipse *pointWithUncertaintyEllipse;
      /* t = 5 */
      GA_PointWithAltitude *pointWithAltitude;
      /* t = 6 */
      GA_PointWithAltitudeAndUncertaintyEllipsoid *pointWithAltitudeAndUncertaintyEllipsoid;
      /* t = 7 */
      GA_EllipsoidArc *ellipsoidArc;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} GeographicalArea;

EXTERN int asn1PE_GeographicalArea (ASN1CTXT* pctxt, GeographicalArea* pvalue);

EXTERN int asn1PD_GeographicalArea (ASN1CTXT* pctxt, GeographicalArea* pvalue);

EXTERN void asn1Print_GeographicalArea
   (const char* name, GeographicalArea* pvalue);

EXTERN GeographicalArea* asn1Test_GeographicalArea
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AreaIdentity                                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_AreaIdentity_sAI              1
#define T_AreaIdentity_geographicalArea 2
#define T_AreaIdentity_extElem1         3

typedef struct EXTERN AreaIdentity {
   int t;
   union {
      /* t = 1 */
      SAI *sAI;
      /* t = 2 */
      GeographicalArea *geographicalArea;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} AreaIdentity;

EXTERN int asn1PE_AreaIdentity (ASN1CTXT* pctxt, AreaIdentity* pvalue);

EXTERN int asn1PD_AreaIdentity (ASN1CTXT* pctxt, AreaIdentity* pvalue);

EXTERN void asn1Print_AreaIdentity
   (const char* name, AreaIdentity* pvalue);

EXTERN AreaIdentity* asn1Test_AreaIdentity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LastKnownServiceArea_iE_Extensions_element                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LastKnownServiceArea_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} LastKnownServiceArea_iE_Extensions_element;

EXTERN int asn1PE_LastKnownServiceArea_iE_Extensions_element (ASN1CTXT* pctxt, LastKnownServiceArea_iE_Extensions_element* pvalue);

EXTERN int asn1PD_LastKnownServiceArea_iE_Extensions_element (ASN1CTXT* pctxt, LastKnownServiceArea_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_LastKnownServiceArea_iE_Extensions_element (ASN1CTXT* pctxt,
   LastKnownServiceArea_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_LastKnownServiceArea_iE_Extensions_element (ASN1CTXT* pctxt,
   LastKnownServiceArea_iE_Extensions_element *pvalue);

EXTERN void asn1Print_LastKnownServiceArea_iE_Extensions_element
   (const char* name, LastKnownServiceArea_iE_Extensions_element* pvalue);

EXTERN LastKnownServiceArea_iE_Extensions_element* asn1Test_LastKnownServiceArea_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LastKnownServiceArea_iE_Extensions                        */
/*                                                            */
/**************************************************************/

/* List of LastKnownServiceArea_iE_Extensions_element */
typedef Asn1RTDList LastKnownServiceArea_iE_Extensions;

EXTERN int asn1PE_LastKnownServiceArea_iE_Extensions (ASN1CTXT* pctxt, LastKnownServiceArea_iE_Extensions* pvalue);

EXTERN int asn1PD_LastKnownServiceArea_iE_Extensions (ASN1CTXT* pctxt, LastKnownServiceArea_iE_Extensions* pvalue);

EXTERN void asn1Print_LastKnownServiceArea_iE_Extensions
   (const char* name, LastKnownServiceArea_iE_Extensions* pvalue);

EXTERN LastKnownServiceArea_iE_Extensions* asn1Test_LastKnownServiceArea_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LastKnownServiceArea                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LastKnownServiceArea {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SAI sAI;
   OSUINT16 ageOfSAI;
   LastKnownServiceArea_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} LastKnownServiceArea;

EXTERN int asn1PE_LastKnownServiceArea (ASN1CTXT* pctxt, LastKnownServiceArea* pvalue);

EXTERN int asn1PD_LastKnownServiceArea (ASN1CTXT* pctxt, LastKnownServiceArea* pvalue);

EXTERN void asn1Print_LastKnownServiceArea
   (const char* name, LastKnownServiceArea* pvalue);

EXTERN LastKnownServiceArea* asn1Test_LastKnownServiceArea
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositioningDataDiscriminator                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PositioningDataDiscriminator {
   OSUINT32  numbits;
   OSOCTET data[1];
} PositioningDataDiscriminator;

EXTERN int asn1PE_PositioningDataDiscriminator (ASN1CTXT* pctxt, PositioningDataDiscriminator* pvalue);

EXTERN int asn1PD_PositioningDataDiscriminator (ASN1CTXT* pctxt, PositioningDataDiscriminator* pvalue);

EXTERN void asn1Print_PositioningDataDiscriminator
   (const char* name, PositioningDataDiscriminator* pvalue);

EXTERN PositioningDataDiscriminator* asn1Test_PositioningDataDiscriminator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositioningMethodAndUsage                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PositioningMethodAndUsage {
   OSUINT32 numocts;
   OSOCTET data[1];
} PositioningMethodAndUsage;

EXTERN int asn1PE_PositioningMethodAndUsage (ASN1CTXT* pctxt, PositioningMethodAndUsage* pvalue);

EXTERN int asn1PD_PositioningMethodAndUsage (ASN1CTXT* pctxt, PositioningMethodAndUsage* pvalue);

EXTERN void asn1Print_PositioningMethodAndUsage
   (const char* name, PositioningMethodAndUsage* pvalue);

EXTERN PositioningMethodAndUsage* asn1Test_PositioningMethodAndUsage
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositioningDataSet                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PositioningDataSet {
   OSUINT32 n;
   PositioningMethodAndUsage elem[9];
} PositioningDataSet;

EXTERN int asn1PE_PositioningDataSet (ASN1CTXT* pctxt, PositioningDataSet* pvalue);

EXTERN int asn1PD_PositioningDataSet (ASN1CTXT* pctxt, PositioningDataSet* pvalue);

EXTERN void asn1Print_PositioningDataSet
   (const char* name, PositioningDataSet* pvalue);

EXTERN PositioningDataSet* asn1Test_PositioningDataSet
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositionData_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PositionData_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} PositionData_iE_Extensions_element;

EXTERN int asn1PE_PositionData_iE_Extensions_element (ASN1CTXT* pctxt, PositionData_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PositionData_iE_Extensions_element (ASN1CTXT* pctxt, PositionData_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_PositionData_iE_Extensions_element (ASN1CTXT* pctxt,
   PositionData_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_PositionData_iE_Extensions_element (ASN1CTXT* pctxt,
   PositionData_iE_Extensions_element *pvalue);

EXTERN void asn1Print_PositionData_iE_Extensions_element
   (const char* name, PositionData_iE_Extensions_element* pvalue);

EXTERN PositionData_iE_Extensions_element* asn1Test_PositionData_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositionData_iE_Extensions                                */
/*                                                            */
/**************************************************************/

/* List of PositionData_iE_Extensions_element */
typedef Asn1RTDList PositionData_iE_Extensions;

EXTERN int asn1PE_PositionData_iE_Extensions (ASN1CTXT* pctxt, PositionData_iE_Extensions* pvalue);

EXTERN int asn1PD_PositionData_iE_Extensions (ASN1CTXT* pctxt, PositionData_iE_Extensions* pvalue);

EXTERN void asn1Print_PositionData_iE_Extensions
   (const char* name, PositionData_iE_Extensions* pvalue);

EXTERN PositionData_iE_Extensions* asn1Test_PositionData_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositionData                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PositionData {
   struct {
      unsigned positioningDataSetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PositioningDataDiscriminator positioningDataDiscriminator;
   PositioningDataSet positioningDataSet;
   PositionData_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} PositionData;

EXTERN int asn1PE_PositionData (ASN1CTXT* pctxt, PositionData* pvalue);

EXTERN int asn1PD_PositionData (ASN1CTXT* pctxt, PositionData* pvalue);

EXTERN void asn1Print_PositionData
   (const char* name, PositionData* pvalue);

EXTERN PositionData* asn1Test_PositionData
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PositionDataSpecificToGERANIuMode                         */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr PositionDataSpecificToGERANIuMode;

EXTERN int asn1PE_PositionDataSpecificToGERANIuMode (ASN1CTXT* pctxt, PositionDataSpecificToGERANIuMode value);

EXTERN int asn1PD_PositionDataSpecificToGERANIuMode (ASN1CTXT* pctxt, PositionDataSpecificToGERANIuMode* pvalue);

EXTERN void asn1Print_PositionDataSpecificToGERANIuMode
   (const char* name, PositionDataSpecificToGERANIuMode* pvalue);

EXTERN PositionDataSpecificToGERANIuMode* asn1Test_PositionDataSpecificToGERANIuMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AccuracyFulfilmentIndicator                               */
/*                                                            */
/**************************************************************/

typedef enum {
   requested_Accuracy_Fulfilled = 0,
   requested_Accuracy_Not_Fulfilled = 1
} AccuracyFulfilmentIndicator_Root;

typedef OSUINT32 AccuracyFulfilmentIndicator;

EXTERN int asn1PE_AccuracyFulfilmentIndicator (ASN1CTXT* pctxt, AccuracyFulfilmentIndicator value);

EXTERN int asn1PD_AccuracyFulfilmentIndicator (ASN1CTXT* pctxt, AccuracyFulfilmentIndicator* pvalue);

EXTERN void asn1Print_AccuracyFulfilmentIndicator
   (const char* name, AccuracyFulfilmentIndicator* pvalue);

EXTERN AccuracyFulfilmentIndicator* asn1Test_AccuracyFulfilmentIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NAS_PDU                                                   */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr NAS_PDU;

EXTERN int asn1PE_NAS_PDU (ASN1CTXT* pctxt, NAS_PDU value);

EXTERN int asn1PD_NAS_PDU (ASN1CTXT* pctxt, NAS_PDU* pvalue);

EXTERN void asn1Print_NAS_PDU
   (const char* name, NAS_PDU* pvalue);

EXTERN NAS_PDU* asn1Test_NAS_PDU
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NAS_SequenceNumber                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NAS_SequenceNumber {
   OSUINT32  numbits;
   OSOCTET data[1];
} NAS_SequenceNumber;

EXTERN int asn1PE_NAS_SequenceNumber (ASN1CTXT* pctxt, NAS_SequenceNumber* pvalue);

EXTERN int asn1PD_NAS_SequenceNumber (ASN1CTXT* pctxt, NAS_SequenceNumber* pvalue);

EXTERN void asn1Print_NAS_SequenceNumber
   (const char* name, NAS_SequenceNumber* pvalue);

EXTERN NAS_SequenceNumber* asn1Test_NAS_SequenceNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAPI                                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   sapi_0 = 0,
   sapi_3 = 1
} SAPI_Root;

typedef OSUINT32 SAPI;

EXTERN int asn1PE_SAPI (ASN1CTXT* pctxt, SAPI value);

EXTERN int asn1PD_SAPI (ASN1CTXT* pctxt, SAPI* pvalue);

EXTERN void asn1Print_SAPI
   (const char* name, SAPI* pvalue);

EXTERN SAPI* asn1Test_SAPI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RejectCauseValue                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   pLMN_Not_Allowed = 0,
   location_Area_Not_Allowed = 1,
   roaming_Not_Allowed_In_This_Location_Area = 2,
   no_Suitable_Cell_In_Location_Area = 3,
   gPRS_Services_Not_Allowed_In_This_PLMN = 4
} RejectCauseValue_Root;

typedef OSUINT32 RejectCauseValue;

EXTERN int asn1PE_RejectCauseValue (ASN1CTXT* pctxt, RejectCauseValue value);

EXTERN int asn1PD_RejectCauseValue (ASN1CTXT* pctxt, RejectCauseValue* pvalue);

EXTERN void asn1Print_RejectCauseValue
   (const char* name, RejectCauseValue* pvalue);

EXTERN RejectCauseValue* asn1Test_RejectCauseValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RedirectionCompleted                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   redirection_completed = 0
} RedirectionCompleted_Root;

typedef OSUINT32 RedirectionCompleted;

EXTERN int asn1PE_RedirectionCompleted (ASN1CTXT* pctxt, RedirectionCompleted value);

EXTERN int asn1PD_RedirectionCompleted (ASN1CTXT* pctxt, RedirectionCompleted* pvalue);

EXTERN void asn1Print_RedirectionCompleted
   (const char* name, RedirectionCompleted* pvalue);

EXTERN RedirectionCompleted* asn1Test_RedirectionCompleted
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NumberOfSteps                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 NumberOfSteps;

EXTERN int asn1PE_NumberOfSteps (ASN1CTXT* pctxt, NumberOfSteps value);

EXTERN int asn1PD_NumberOfSteps (ASN1CTXT* pctxt, NumberOfSteps* pvalue);

EXTERN void asn1Print_NumberOfSteps
   (const char* name, NumberOfSteps* pvalue);

EXTERN NumberOfSteps* asn1Test_NumberOfSteps
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Requested_RAB_Parameter_MaxBitrateList                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Requested_RAB_Parameter_MaxBitrateList {
   OSUINT32 n;
   MaxBitrate elem[2];
} Requested_RAB_Parameter_MaxBitrateList;

EXTERN int asn1PE_Requested_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, Requested_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN int asn1PD_Requested_RAB_Parameter_MaxBitrateList (ASN1CTXT* pctxt, Requested_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN void asn1Print_Requested_RAB_Parameter_MaxBitrateList
   (const char* name, Requested_RAB_Parameter_MaxBitrateList* pvalue);

EXTERN Requested_RAB_Parameter_MaxBitrateList* asn1Test_Requested_RAB_Parameter_MaxBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Requested_RAB_Parameter_GuaranteedBitrateList             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Requested_RAB_Parameter_GuaranteedBitrateList {
   OSUINT32 n;
   GuaranteedBitrate elem[2];
} Requested_RAB_Parameter_GuaranteedBitrateList;

EXTERN int asn1PE_Requested_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, Requested_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN int asn1PD_Requested_RAB_Parameter_GuaranteedBitrateList (ASN1CTXT* pctxt, Requested_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN void asn1Print_Requested_RAB_Parameter_GuaranteedBitrateList
   (const char* name, Requested_RAB_Parameter_GuaranteedBitrateList* pvalue);

EXTERN Requested_RAB_Parameter_GuaranteedBitrateList* asn1Test_Requested_RAB_Parameter_GuaranteedBitrateList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AlternativeRABConfigurationRequest                        */
/*                                                            */
/**************************************************************/

typedef enum {
   alternative_RAB_configuration_Requested = 0
} AlternativeRABConfigurationRequest_Root;

typedef OSUINT32 AlternativeRABConfigurationRequest;

EXTERN int asn1PE_AlternativeRABConfigurationRequest (ASN1CTXT* pctxt, AlternativeRABConfigurationRequest value);

EXTERN int asn1PD_AlternativeRABConfigurationRequest (ASN1CTXT* pctxt, AlternativeRABConfigurationRequest* pvalue);

EXTERN void asn1Print_AlternativeRABConfigurationRequest
   (const char* name, AlternativeRABConfigurationRequest* pvalue);

EXTERN AlternativeRABConfigurationRequest* asn1Test_AlternativeRABConfigurationRequest
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  _Requested_RAB_Parameter_Values_ExtIEs_Extension          */
/*                                                            */
/**************************************************************/

typedef AlternativeRABConfigurationRequest _Requested_RAB_Parameter_Values_ExtIEs_Extension;

EXTERN int asn1PE__Requested_RAB_Parameter_Values_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__Requested_RAB_Parameter_Values_ExtIEs_Extension (ASN1CTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__Requested_RAB_Parameter_Values_ExtIEs_Extension
   (const char* name, void* pvalue_);

EXTERN _Requested_RAB_Parameter_Values_ExtIEs_Extension* asn1Test__Requested_RAB_Parameter_Values_ExtIEs_Extension
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Requested_RAB_Parameter_Values_iE_Extensions_element      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Requested_RAB_Parameter_Values_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} Requested_RAB_Parameter_Values_iE_Extensions_element;

EXTERN int asn1PE_Requested_RAB_Parameter_Values_iE_Extensions_element (ASN1CTXT* pctxt, Requested_RAB_Parameter_Values_iE_Extensions_element* pvalue);

EXTERN int asn1PD_Requested_RAB_Parameter_Values_iE_Extensions_element (ASN1CTXT* pctxt, Requested_RAB_Parameter_Values_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_Requested_RAB_Parameter_Values_iE_Extensions_element (ASN1CTXT* pctxt,
   Requested_RAB_Parameter_Values_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_Requested_RAB_Parameter_Values_iE_Extensions_element (ASN1CTXT* pctxt,
   Requested_RAB_Parameter_Values_iE_Extensions_element *pvalue);

EXTERN void asn1Print_Requested_RAB_Parameter_Values_iE_Extensions_element
   (const char* name, Requested_RAB_Parameter_Values_iE_Extensions_element* pvalue);

EXTERN Requested_RAB_Parameter_Values_iE_Extensions_element* asn1Test_Requested_RAB_Parameter_Values_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Requested_RAB_Parameter_Values_iE_Extensions              */
/*                                                            */
/**************************************************************/

/* List of Requested_RAB_Parameter_Values_iE_Extensions_element */
typedef Asn1RTDList Requested_RAB_Parameter_Values_iE_Extensions;

EXTERN int asn1PE_Requested_RAB_Parameter_Values_iE_Extensions (ASN1CTXT* pctxt, Requested_RAB_Parameter_Values_iE_Extensions* pvalue);

EXTERN int asn1PD_Requested_RAB_Parameter_Values_iE_Extensions (ASN1CTXT* pctxt, Requested_RAB_Parameter_Values_iE_Extensions* pvalue);

EXTERN void asn1Print_Requested_RAB_Parameter_Values_iE_Extensions
   (const char* name, Requested_RAB_Parameter_Values_iE_Extensions* pvalue);

EXTERN Requested_RAB_Parameter_Values_iE_Extensions* asn1Test_Requested_RAB_Parameter_Values_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Requested_RAB_Parameter_Values                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Requested_RAB_Parameter_Values {
   struct {
      unsigned requestedMaxBitratesPresent : 1;
      unsigned requestedGuaranteedBitratesPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Requested_RAB_Parameter_MaxBitrateList requestedMaxBitrates;
   Requested_RAB_Parameter_GuaranteedBitrateList requestedGuaranteedBitrates;
   Requested_RAB_Parameter_Values_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} Requested_RAB_Parameter_Values;

EXTERN int asn1PE_Requested_RAB_Parameter_Values (ASN1CTXT* pctxt, Requested_RAB_Parameter_Values* pvalue);

EXTERN int asn1PD_Requested_RAB_Parameter_Values (ASN1CTXT* pctxt, Requested_RAB_Parameter_Values* pvalue);

EXTERN void asn1Print_Requested_RAB_Parameter_Values
   (const char* name, Requested_RAB_Parameter_Values* pvalue);

EXTERN Requested_RAB_Parameter_Values* asn1Test_Requested_RAB_Parameter_Values
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestedLocationRelatedDataType                          */
/*                                                            */
/**************************************************************/

typedef enum {
   decipheringKeysUEBasedOTDOA = 0,
   decipheringKeysAssistedGPS = 1,
   dedicatedAssistanceDataUEBasedOTDOA = 2,
   dedicatedAssistanceDataAssistedGPS = 3
} RequestedLocationRelatedDataType_Root;

typedef OSUINT32 RequestedLocationRelatedDataType;

EXTERN int asn1PE_RequestedLocationRelatedDataType (ASN1CTXT* pctxt, RequestedLocationRelatedDataType value);

EXTERN int asn1PD_RequestedLocationRelatedDataType (ASN1CTXT* pctxt, RequestedLocationRelatedDataType* pvalue);

EXTERN void asn1Print_RequestedLocationRelatedDataType
   (const char* name, RequestedLocationRelatedDataType* pvalue);

EXTERN RequestedLocationRelatedDataType* asn1Test_RequestedLocationRelatedDataType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestedGPSAssistanceData                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RequestedGPSAssistanceData {
   OSUINT32 numocts;
   OSOCTET data[38];
} RequestedGPSAssistanceData;

EXTERN int asn1PE_RequestedGPSAssistanceData (ASN1CTXT* pctxt, RequestedGPSAssistanceData* pvalue);

EXTERN int asn1PD_RequestedGPSAssistanceData (ASN1CTXT* pctxt, RequestedGPSAssistanceData* pvalue);

EXTERN void asn1Print_RequestedGPSAssistanceData
   (const char* name, RequestedGPSAssistanceData* pvalue);

EXTERN RequestedGPSAssistanceData* asn1Test_RequestedGPSAssistanceData
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LocationRelatedDataRequestType                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LocationRelatedDataRequestType {
   struct {
      unsigned requestedGPSAssistanceDataPresent : 1;
   } m;
   RequestedLocationRelatedDataType requestedLocationRelatedDataType;
   RequestedGPSAssistanceData requestedGPSAssistanceData;
   Asn1RTDList extElem1;
} LocationRelatedDataRequestType;

EXTERN int asn1PE_LocationRelatedDataRequestType (ASN1CTXT* pctxt, LocationRelatedDataRequestType* pvalue);

EXTERN int asn1PD_LocationRelatedDataRequestType (ASN1CTXT* pctxt, LocationRelatedDataRequestType* pvalue);

EXTERN void asn1Print_LocationRelatedDataRequestType
   (const char* name, LocationRelatedDataRequestType* pvalue);

EXTERN LocationRelatedDataRequestType* asn1Test_LocationRelatedDataRequestType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LocationRelatedDataRequestTypeSpecificToGERANIuMode       */
/*                                                            */
/**************************************************************/

typedef enum {
   decipheringKeysEOTD = 0,
   dedicatedMobileAssistedEOTDAssistanceData = 1,
   dedicatedMobileBasedEOTDAssistanceData = 2
} LocationRelatedDataRequestTypeSpecificToGERANIuMode_Root;

typedef OSUINT32 LocationRelatedDataRequestTypeSpecificToGERANIuMode;

EXTERN int asn1PE_LocationRelatedDataRequestTypeSpecificToGERANIuMode (ASN1CTXT* pctxt, LocationRelatedDataRequestTypeSpecificToGERANIuMode value);

EXTERN int asn1PD_LocationRelatedDataRequestTypeSpecificToGERANIuMode (ASN1CTXT* pctxt, LocationRelatedDataRequestTypeSpecificToGERANIuMode* pvalue);

EXTERN void asn1Print_LocationRelatedDataRequestTypeSpecificToGERANIuMode
   (const char* name, LocationRelatedDataRequestTypeSpecificToGERANIuMode* pvalue);

EXTERN LocationRelatedDataRequestTypeSpecificToGERANIuMode* asn1Test_LocationRelatedDataRequestTypeSpecificToGERANIuMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag {
   OSUINT32  numbits;
   OSOCTET data[1];
} BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag;

EXTERN int asn1PE_BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag* pvalue);

EXTERN int asn1PD_BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag* pvalue);

EXTERN void asn1Print_BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag
   (const char* name, BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag* pvalue);

EXTERN BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag* asn1Test_BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BroadcastAssistanceDataDecipheringKeys_currentDecipherin  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey {
   OSUINT32  numbits;
   OSOCTET data[7];
} BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey;

EXTERN int asn1PE_BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey* pvalue);

EXTERN int asn1PD_BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey* pvalue);

EXTERN void asn1Print_BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey
   (const char* name, BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey* pvalue);

EXTERN BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey* asn1Test_BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BroadcastAssistanceDataDecipheringKeys_nextDecipheringKe  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey {
   OSUINT32  numbits;
   OSOCTET data[7];
} BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey;

EXTERN int asn1PE_BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey* pvalue);

EXTERN int asn1PD_BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey* pvalue);

EXTERN void asn1Print_BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey
   (const char* name, BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey* pvalue);

EXTERN BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey* asn1Test_BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BroadcastAssistanceDataDecipheringKeys                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN BroadcastAssistanceDataDecipheringKeys {
   BroadcastAssistanceDataDecipheringKeys_cipheringKeyFlag cipheringKeyFlag;
   BroadcastAssistanceDataDecipheringKeys_currentDecipheringKey currentDecipheringKey;
   BroadcastAssistanceDataDecipheringKeys_nextDecipheringKey nextDecipheringKey;
   Asn1RTDList extElem1;
} BroadcastAssistanceDataDecipheringKeys;

EXTERN int asn1PE_BroadcastAssistanceDataDecipheringKeys (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys* pvalue);

EXTERN int asn1PD_BroadcastAssistanceDataDecipheringKeys (ASN1CTXT* pctxt, BroadcastAssistanceDataDecipheringKeys* pvalue);

EXTERN void asn1Print_BroadcastAssistanceDataDecipheringKeys
   (const char* name, BroadcastAssistanceDataDecipheringKeys* pvalue);

EXTERN BroadcastAssistanceDataDecipheringKeys* asn1Test_BroadcastAssistanceDataDecipheringKeys
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationTransferID                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT32 InformationTransferID;

EXTERN int asn1PE_InformationTransferID (ASN1CTXT* pctxt, InformationTransferID value);

EXTERN int asn1PD_InformationTransferID (ASN1CTXT* pctxt, InformationTransferID* pvalue);

EXTERN void asn1Print_InformationTransferID
   (const char* name, InformationTransferID* pvalue);

EXTERN InformationTransferID* asn1Test_InformationTransferID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ListOF_SNAs                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ListOF_SNAs {
   OSUINT32 n;
   SNAC *elem;
} ListOF_SNAs;

EXTERN int asn1PE_ListOF_SNAs (ASN1CTXT* pctxt, ListOF_SNAs* pvalue);

EXTERN int asn1PD_ListOF_SNAs (ASN1CTXT* pctxt, ListOF_SNAs* pvalue);

EXTERN void asn1Print_ListOF_SNAs
   (const char* name, ListOF_SNAs* pvalue);

EXTERN ListOF_SNAs* asn1Test_ListOF_SNAs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LA_LIST_element_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LA_LIST_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} LA_LIST_element_iE_Extensions_element;

EXTERN int asn1PE_LA_LIST_element_iE_Extensions_element (ASN1CTXT* pctxt, LA_LIST_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_LA_LIST_element_iE_Extensions_element (ASN1CTXT* pctxt, LA_LIST_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_LA_LIST_element_iE_Extensions_element (ASN1CTXT* pctxt,
   LA_LIST_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_LA_LIST_element_iE_Extensions_element (ASN1CTXT* pctxt,
   LA_LIST_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_LA_LIST_element_iE_Extensions_element
   (const char* name, LA_LIST_element_iE_Extensions_element* pvalue);

EXTERN LA_LIST_element_iE_Extensions_element* asn1Test_LA_LIST_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LA_LIST_element_iE_Extensions                             */
/*                                                            */
/**************************************************************/

/* List of LA_LIST_element_iE_Extensions_element */
typedef Asn1RTDList LA_LIST_element_iE_Extensions;

EXTERN int asn1PE_LA_LIST_element_iE_Extensions (ASN1CTXT* pctxt, LA_LIST_element_iE_Extensions* pvalue);

EXTERN int asn1PD_LA_LIST_element_iE_Extensions (ASN1CTXT* pctxt, LA_LIST_element_iE_Extensions* pvalue);

EXTERN void asn1Print_LA_LIST_element_iE_Extensions
   (const char* name, LA_LIST_element_iE_Extensions* pvalue);

EXTERN LA_LIST_element_iE_Extensions* asn1Test_LA_LIST_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LA_LIST_element                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN LA_LIST_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   LAC lAC;
   ListOF_SNAs listOF_SNAs;
   LA_LIST_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} LA_LIST_element;

EXTERN int asn1PE_LA_LIST_element (ASN1CTXT* pctxt, LA_LIST_element* pvalue);

EXTERN int asn1PD_LA_LIST_element (ASN1CTXT* pctxt, LA_LIST_element* pvalue);

EXTERN void asn1Print_LA_LIST_element
   (const char* name, LA_LIST_element* pvalue);

EXTERN LA_LIST_element* asn1Test_LA_LIST_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LA_LIST                                                   */
/*                                                            */
/**************************************************************/

/* List of LA_LIST_element */
typedef Asn1RTDList LA_LIST;

EXTERN int asn1PE_LA_LIST (ASN1CTXT* pctxt, LA_LIST* pvalue);

EXTERN int asn1PD_LA_LIST (ASN1CTXT* pctxt, LA_LIST* pvalue);

EXTERN void asn1Print_LA_LIST
   (const char* name, LA_LIST* pvalue);

EXTERN LA_LIST* asn1Test_LA_LIST
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PLMNs_in_shared_network_element_iE_Extensions_element     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PLMNs_in_shared_network_element_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} PLMNs_in_shared_network_element_iE_Extensions_element;

EXTERN int asn1PE_PLMNs_in_shared_network_element_iE_Extensions_element (ASN1CTXT* pctxt, PLMNs_in_shared_network_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PLMNs_in_shared_network_element_iE_Extensions_element (ASN1CTXT* pctxt, PLMNs_in_shared_network_element_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_PLMNs_in_shared_network_element_iE_Extensions_element (ASN1CTXT* pctxt,
   PLMNs_in_shared_network_element_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_PLMNs_in_shared_network_element_iE_Extensions_element (ASN1CTXT* pctxt,
   PLMNs_in_shared_network_element_iE_Extensions_element *pvalue);

EXTERN void asn1Print_PLMNs_in_shared_network_element_iE_Extensions_element
   (const char* name, PLMNs_in_shared_network_element_iE_Extensions_element* pvalue);

EXTERN PLMNs_in_shared_network_element_iE_Extensions_element* asn1Test_PLMNs_in_shared_network_element_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PLMNs_in_shared_network_element_iE_Extensions             */
/*                                                            */
/**************************************************************/

/* List of PLMNs_in_shared_network_element_iE_Extensions_element */
typedef Asn1RTDList PLMNs_in_shared_network_element_iE_Extensions;

EXTERN int asn1PE_PLMNs_in_shared_network_element_iE_Extensions (ASN1CTXT* pctxt, PLMNs_in_shared_network_element_iE_Extensions* pvalue);

EXTERN int asn1PD_PLMNs_in_shared_network_element_iE_Extensions (ASN1CTXT* pctxt, PLMNs_in_shared_network_element_iE_Extensions* pvalue);

EXTERN void asn1Print_PLMNs_in_shared_network_element_iE_Extensions
   (const char* name, PLMNs_in_shared_network_element_iE_Extensions* pvalue);

EXTERN PLMNs_in_shared_network_element_iE_Extensions* asn1Test_PLMNs_in_shared_network_element_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PLMNs_in_shared_network_element                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PLMNs_in_shared_network_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNidentity pLMNidentity;
   LA_LIST lA_LIST;
   PLMNs_in_shared_network_element_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} PLMNs_in_shared_network_element;

EXTERN int asn1PE_PLMNs_in_shared_network_element (ASN1CTXT* pctxt, PLMNs_in_shared_network_element* pvalue);

EXTERN int asn1PD_PLMNs_in_shared_network_element (ASN1CTXT* pctxt, PLMNs_in_shared_network_element* pvalue);

EXTERN void asn1Print_PLMNs_in_shared_network_element
   (const char* name, PLMNs_in_shared_network_element* pvalue);

EXTERN PLMNs_in_shared_network_element* asn1Test_PLMNs_in_shared_network_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PLMNs_in_shared_network                                   */
/*                                                            */
/**************************************************************/

/* List of PLMNs_in_shared_network_element */
typedef Asn1RTDList PLMNs_in_shared_network;

EXTERN int asn1PE_PLMNs_in_shared_network (ASN1CTXT* pctxt, PLMNs_in_shared_network* pvalue);

EXTERN int asn1PD_PLMNs_in_shared_network (ASN1CTXT* pctxt, PLMNs_in_shared_network* pvalue);

EXTERN void asn1Print_PLMNs_in_shared_network
   (const char* name, PLMNs_in_shared_network* pvalue);

EXTERN PLMNs_in_shared_network* asn1Test_PLMNs_in_shared_network
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Shared_Network_Information_iE_Extensions_element          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Shared_Network_Information_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} Shared_Network_Information_iE_Extensions_element;

EXTERN int asn1PE_Shared_Network_Information_iE_Extensions_element (ASN1CTXT* pctxt, Shared_Network_Information_iE_Extensions_element* pvalue);

EXTERN int asn1PD_Shared_Network_Information_iE_Extensions_element (ASN1CTXT* pctxt, Shared_Network_Information_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_Shared_Network_Information_iE_Extensions_element (ASN1CTXT* pctxt,
   Shared_Network_Information_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_Shared_Network_Information_iE_Extensions_element (ASN1CTXT* pctxt,
   Shared_Network_Information_iE_Extensions_element *pvalue);

EXTERN void asn1Print_Shared_Network_Information_iE_Extensions_element
   (const char* name, Shared_Network_Information_iE_Extensions_element* pvalue);

EXTERN Shared_Network_Information_iE_Extensions_element* asn1Test_Shared_Network_Information_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Shared_Network_Information_iE_Extensions                  */
/*                                                            */
/**************************************************************/

/* List of Shared_Network_Information_iE_Extensions_element */
typedef Asn1RTDList Shared_Network_Information_iE_Extensions;

EXTERN int asn1PE_Shared_Network_Information_iE_Extensions (ASN1CTXT* pctxt, Shared_Network_Information_iE_Extensions* pvalue);

EXTERN int asn1PD_Shared_Network_Information_iE_Extensions (ASN1CTXT* pctxt, Shared_Network_Information_iE_Extensions* pvalue);

EXTERN void asn1Print_Shared_Network_Information_iE_Extensions
   (const char* name, Shared_Network_Information_iE_Extensions* pvalue);

EXTERN Shared_Network_Information_iE_Extensions* asn1Test_Shared_Network_Information_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Shared_Network_Information                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Shared_Network_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNs_in_shared_network pLMNs_in_shared_network;
   Shared_Network_Information_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} Shared_Network_Information;

EXTERN int asn1PE_Shared_Network_Information (ASN1CTXT* pctxt, Shared_Network_Information* pvalue);

EXTERN int asn1PD_Shared_Network_Information (ASN1CTXT* pctxt, Shared_Network_Information* pvalue);

EXTERN void asn1Print_Shared_Network_Information
   (const char* name, Shared_Network_Information* pvalue);

EXTERN Shared_Network_Information* asn1Test_Shared_Network_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ProvidedData                                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ProvidedData_shared_network_information 1
#define T_ProvidedData_extElem1         2

typedef struct EXTERN ProvidedData {
   int t;
   union {
      /* t = 1 */
      Shared_Network_Information *shared_network_information;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} ProvidedData;

EXTERN int asn1PE_ProvidedData (ASN1CTXT* pctxt, ProvidedData* pvalue);

EXTERN int asn1PD_ProvidedData (ASN1CTXT* pctxt, ProvidedData* pvalue);

EXTERN void asn1Print_ProvidedData
   (const char* name, ProvidedData* pvalue);

EXTERN ProvidedData* asn1Test_ProvidedData
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RIMInformation                                            */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr RIMInformation;

EXTERN int asn1PE_RIMInformation (ASN1CTXT* pctxt, RIMInformation value);

EXTERN int asn1PD_RIMInformation (ASN1CTXT* pctxt, RIMInformation* pvalue);

EXTERN void asn1Print_RIMInformation
   (const char* name, RIMInformation* pvalue);

EXTERN RIMInformation* asn1Test_RIMInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GERAN_Cell_ID_iE_Extensions_element                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GERAN_Cell_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} GERAN_Cell_ID_iE_Extensions_element;

EXTERN int asn1PE_GERAN_Cell_ID_iE_Extensions_element (ASN1CTXT* pctxt, GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GERAN_Cell_ID_iE_Extensions_element (ASN1CTXT* pctxt, GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_GERAN_Cell_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   GERAN_Cell_ID_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_GERAN_Cell_ID_iE_Extensions_element (ASN1CTXT* pctxt,
   GERAN_Cell_ID_iE_Extensions_element *pvalue);

EXTERN void asn1Print_GERAN_Cell_ID_iE_Extensions_element
   (const char* name, GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN GERAN_Cell_ID_iE_Extensions_element* asn1Test_GERAN_Cell_ID_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GERAN_Cell_ID_iE_Extensions                               */
/*                                                            */
/**************************************************************/

/* List of GERAN_Cell_ID_iE_Extensions_element */
typedef Asn1RTDList GERAN_Cell_ID_iE_Extensions;

EXTERN int asn1PE_GERAN_Cell_ID_iE_Extensions (ASN1CTXT* pctxt, GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_GERAN_Cell_ID_iE_Extensions (ASN1CTXT* pctxt, GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_GERAN_Cell_ID_iE_Extensions
   (const char* name, GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN GERAN_Cell_ID_iE_Extensions* asn1Test_GERAN_Cell_ID_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GERAN_Cell_ID                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GERAN_Cell_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   LAI lAI;
   RAC rAC;
   CI cI;
   GERAN_Cell_ID_iE_Extensions iE_Extensions;
} GERAN_Cell_ID;

EXTERN int asn1PE_GERAN_Cell_ID (ASN1CTXT* pctxt, GERAN_Cell_ID* pvalue);

EXTERN int asn1PD_GERAN_Cell_ID (ASN1CTXT* pctxt, GERAN_Cell_ID* pvalue);

EXTERN void asn1Print_GERAN_Cell_ID
   (const char* name, GERAN_Cell_ID* pvalue);

EXTERN GERAN_Cell_ID* asn1Test_GERAN_Cell_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RIMRoutingAddress                                         */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_RIMRoutingAddress_globalRNC_ID 1
#define T_RIMRoutingAddress_gERAN_Cell_ID 2
#define T_RIMRoutingAddress_extElem1    3

typedef struct EXTERN RIMRoutingAddress {
   int t;
   union {
      /* t = 1 */
      GlobalRNC_ID *globalRNC_ID;
      /* t = 2 */
      GERAN_Cell_ID *gERAN_Cell_ID;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} RIMRoutingAddress;

EXTERN int asn1PE_RIMRoutingAddress (ASN1CTXT* pctxt, RIMRoutingAddress* pvalue);

EXTERN int asn1PD_RIMRoutingAddress (ASN1CTXT* pctxt, RIMRoutingAddress* pvalue);

EXTERN void asn1Print_RIMRoutingAddress
   (const char* name, RIMRoutingAddress* pvalue);

EXTERN RIMRoutingAddress* asn1Test_RIMRoutingAddress
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RIM_Transfer_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RIM_Transfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} RIM_Transfer_iE_Extensions_element;

EXTERN int asn1PE_RIM_Transfer_iE_Extensions_element (ASN1CTXT* pctxt, RIM_Transfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RIM_Transfer_iE_Extensions_element (ASN1CTXT* pctxt, RIM_Transfer_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_RIM_Transfer_iE_Extensions_element (ASN1CTXT* pctxt,
   RIM_Transfer_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_RIM_Transfer_iE_Extensions_element (ASN1CTXT* pctxt,
   RIM_Transfer_iE_Extensions_element *pvalue);

EXTERN void asn1Print_RIM_Transfer_iE_Extensions_element
   (const char* name, RIM_Transfer_iE_Extensions_element* pvalue);

EXTERN RIM_Transfer_iE_Extensions_element* asn1Test_RIM_Transfer_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RIM_Transfer_iE_Extensions                                */
/*                                                            */
/**************************************************************/

/* List of RIM_Transfer_iE_Extensions_element */
typedef Asn1RTDList RIM_Transfer_iE_Extensions;

EXTERN int asn1PE_RIM_Transfer_iE_Extensions (ASN1CTXT* pctxt, RIM_Transfer_iE_Extensions* pvalue);

EXTERN int asn1PD_RIM_Transfer_iE_Extensions (ASN1CTXT* pctxt, RIM_Transfer_iE_Extensions* pvalue);

EXTERN void asn1Print_RIM_Transfer_iE_Extensions
   (const char* name, RIM_Transfer_iE_Extensions* pvalue);

EXTERN RIM_Transfer_iE_Extensions* asn1Test_RIM_Transfer_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RIM_Transfer                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RIM_Transfer {
   struct {
      unsigned rIMRoutingAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RIMInformation rIMInformation;
   RIMRoutingAddress rIMRoutingAddress;
   RIM_Transfer_iE_Extensions iE_Extensions;
} RIM_Transfer;

EXTERN int asn1PE_RIM_Transfer (ASN1CTXT* pctxt, RIM_Transfer* pvalue);

EXTERN int asn1PD_RIM_Transfer (ASN1CTXT* pctxt, RIM_Transfer* pvalue);

EXTERN void asn1Print_RIM_Transfer
   (const char* name, RIM_Transfer* pvalue);

EXTERN RIM_Transfer* asn1Test_RIM_Transfer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterSystemInformationTransferType                        */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InterSystemInformationTransferType_rIM_Transfer 1
#define T_InterSystemInformationTransferType_extElem1 2

typedef struct EXTERN InterSystemInformationTransferType {
   int t;
   union {
      /* t = 1 */
      RIM_Transfer *rIM_Transfer;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} InterSystemInformationTransferType;

EXTERN int asn1PE_InterSystemInformationTransferType (ASN1CTXT* pctxt, InterSystemInformationTransferType* pvalue);

EXTERN int asn1PD_InterSystemInformationTransferType (ASN1CTXT* pctxt, InterSystemInformationTransferType* pvalue);

EXTERN void asn1Print_InterSystemInformationTransferType
   (const char* name, InterSystemInformationTransferType* pvalue);

EXTERN InterSystemInformationTransferType* asn1Test_InterSystemInformationTransferType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationExchangeID                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT32 InformationExchangeID;

EXTERN int asn1PE_InformationExchangeID (ASN1CTXT* pctxt, InformationExchangeID value);

EXTERN int asn1PD_InformationExchangeID (ASN1CTXT* pctxt, InformationExchangeID* pvalue);

EXTERN void asn1Print_InformationExchangeID
   (const char* name, InformationExchangeID* pvalue);

EXTERN InformationExchangeID* asn1Test_InformationExchangeID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationExchangeType                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   transfer = 0,
   request = 1
} InformationExchangeType_Root;

typedef OSUINT32 InformationExchangeType;

EXTERN int asn1PE_InformationExchangeType (ASN1CTXT* pctxt, InformationExchangeType value);

EXTERN int asn1PD_InformationExchangeType (ASN1CTXT* pctxt, InformationExchangeType* pvalue);

EXTERN void asn1Print_InformationExchangeType
   (const char* name, InformationExchangeType* pvalue);

EXTERN InformationExchangeType* asn1Test_InformationExchangeType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RNCTraceInformation_traceActivationIndicator              */
/*                                                            */
/**************************************************************/

typedef enum {
   activated = 0,
   deactivated = 1
} RNCTraceInformation_traceActivationIndicator_Root;

typedef OSUINT32 RNCTraceInformation_traceActivationIndicator;

EXTERN int asn1PE_RNCTraceInformation_traceActivationIndicator (ASN1CTXT* pctxt, RNCTraceInformation_traceActivationIndicator value);

EXTERN int asn1PD_RNCTraceInformation_traceActivationIndicator (ASN1CTXT* pctxt, RNCTraceInformation_traceActivationIndicator* pvalue);

EXTERN void asn1Print_RNCTraceInformation_traceActivationIndicator
   (const char* name, RNCTraceInformation_traceActivationIndicator* pvalue);

EXTERN RNCTraceInformation_traceActivationIndicator* asn1Test_RNCTraceInformation_traceActivationIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEIList                                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEIList {
   OSUINT32 n;
   IMEI elem[64];
} IMEIList;

EXTERN int asn1PE_IMEIList (ASN1CTXT* pctxt, IMEIList* pvalue);

EXTERN int asn1PD_IMEIList (ASN1CTXT* pctxt, IMEIList* pvalue);

EXTERN void asn1Print_IMEIList
   (const char* name, IMEIList* pvalue);

EXTERN IMEIList* asn1Test_IMEIList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEISVList                                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEISVList {
   OSUINT32 n;
   IMEISV elem[64];
} IMEISVList;

EXTERN int asn1PE_IMEISVList (ASN1CTXT* pctxt, IMEISVList* pvalue);

EXTERN int asn1PD_IMEISVList (ASN1CTXT* pctxt, IMEISVList* pvalue);

EXTERN void asn1Print_IMEISVList
   (const char* name, IMEISVList* pvalue);

EXTERN IMEISVList* asn1Test_IMEISVList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEIGroup_iMEIMask                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEIGroup_iMEIMask {
   OSUINT32  numbits;
   OSOCTET data[1];
} IMEIGroup_iMEIMask;

EXTERN int asn1PE_IMEIGroup_iMEIMask (ASN1CTXT* pctxt, IMEIGroup_iMEIMask* pvalue);

EXTERN int asn1PD_IMEIGroup_iMEIMask (ASN1CTXT* pctxt, IMEIGroup_iMEIMask* pvalue);

EXTERN void asn1Print_IMEIGroup_iMEIMask
   (const char* name, IMEIGroup_iMEIMask* pvalue);

EXTERN IMEIGroup_iMEIMask* asn1Test_IMEIGroup_iMEIMask
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEIGroup_iE_Extensions_element                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEIGroup_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} IMEIGroup_iE_Extensions_element;

EXTERN int asn1PE_IMEIGroup_iE_Extensions_element (ASN1CTXT* pctxt, IMEIGroup_iE_Extensions_element* pvalue);

EXTERN int asn1PD_IMEIGroup_iE_Extensions_element (ASN1CTXT* pctxt, IMEIGroup_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_IMEIGroup_iE_Extensions_element (ASN1CTXT* pctxt,
   IMEIGroup_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_IMEIGroup_iE_Extensions_element (ASN1CTXT* pctxt,
   IMEIGroup_iE_Extensions_element *pvalue);

EXTERN void asn1Print_IMEIGroup_iE_Extensions_element
   (const char* name, IMEIGroup_iE_Extensions_element* pvalue);

EXTERN IMEIGroup_iE_Extensions_element* asn1Test_IMEIGroup_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEIGroup_iE_Extensions                                   */
/*                                                            */
/**************************************************************/

/* List of IMEIGroup_iE_Extensions_element */
typedef Asn1RTDList IMEIGroup_iE_Extensions;

EXTERN int asn1PE_IMEIGroup_iE_Extensions (ASN1CTXT* pctxt, IMEIGroup_iE_Extensions* pvalue);

EXTERN int asn1PD_IMEIGroup_iE_Extensions (ASN1CTXT* pctxt, IMEIGroup_iE_Extensions* pvalue);

EXTERN void asn1Print_IMEIGroup_iE_Extensions
   (const char* name, IMEIGroup_iE_Extensions* pvalue);

EXTERN IMEIGroup_iE_Extensions* asn1Test_IMEIGroup_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEIGroup                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEIGroup {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IMEI iMEI;
   IMEIGroup_iMEIMask iMEIMask;
   IMEIGroup_iE_Extensions iE_Extensions;
} IMEIGroup;

EXTERN int asn1PE_IMEIGroup (ASN1CTXT* pctxt, IMEIGroup* pvalue);

EXTERN int asn1PD_IMEIGroup (ASN1CTXT* pctxt, IMEIGroup* pvalue);

EXTERN void asn1Print_IMEIGroup
   (const char* name, IMEIGroup* pvalue);

EXTERN IMEIGroup* asn1Test_IMEIGroup
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEISVGroup_iMEISVMask                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEISVGroup_iMEISVMask {
   OSUINT32  numbits;
   OSOCTET data[1];
} IMEISVGroup_iMEISVMask;

EXTERN int asn1PE_IMEISVGroup_iMEISVMask (ASN1CTXT* pctxt, IMEISVGroup_iMEISVMask* pvalue);

EXTERN int asn1PD_IMEISVGroup_iMEISVMask (ASN1CTXT* pctxt, IMEISVGroup_iMEISVMask* pvalue);

EXTERN void asn1Print_IMEISVGroup_iMEISVMask
   (const char* name, IMEISVGroup_iMEISVMask* pvalue);

EXTERN IMEISVGroup_iMEISVMask* asn1Test_IMEISVGroup_iMEISVMask
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEISVGroup_iE_Extensions_element                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEISVGroup_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} IMEISVGroup_iE_Extensions_element;

EXTERN int asn1PE_IMEISVGroup_iE_Extensions_element (ASN1CTXT* pctxt, IMEISVGroup_iE_Extensions_element* pvalue);

EXTERN int asn1PD_IMEISVGroup_iE_Extensions_element (ASN1CTXT* pctxt, IMEISVGroup_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_IMEISVGroup_iE_Extensions_element (ASN1CTXT* pctxt,
   IMEISVGroup_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_IMEISVGroup_iE_Extensions_element (ASN1CTXT* pctxt,
   IMEISVGroup_iE_Extensions_element *pvalue);

EXTERN void asn1Print_IMEISVGroup_iE_Extensions_element
   (const char* name, IMEISVGroup_iE_Extensions_element* pvalue);

EXTERN IMEISVGroup_iE_Extensions_element* asn1Test_IMEISVGroup_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEISVGroup_iE_Extensions                                 */
/*                                                            */
/**************************************************************/

/* List of IMEISVGroup_iE_Extensions_element */
typedef Asn1RTDList IMEISVGroup_iE_Extensions;

EXTERN int asn1PE_IMEISVGroup_iE_Extensions (ASN1CTXT* pctxt, IMEISVGroup_iE_Extensions* pvalue);

EXTERN int asn1PD_IMEISVGroup_iE_Extensions (ASN1CTXT* pctxt, IMEISVGroup_iE_Extensions* pvalue);

EXTERN void asn1Print_IMEISVGroup_iE_Extensions
   (const char* name, IMEISVGroup_iE_Extensions* pvalue);

EXTERN IMEISVGroup_iE_Extensions* asn1Test_IMEISVGroup_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IMEISVGroup                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IMEISVGroup {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IMEISV iMEISV;
   IMEISVGroup_iMEISVMask iMEISVMask;
   IMEISVGroup_iE_Extensions iE_Extensions;
} IMEISVGroup;

EXTERN int asn1PE_IMEISVGroup (ASN1CTXT* pctxt, IMEISVGroup* pvalue);

EXTERN int asn1PD_IMEISVGroup (ASN1CTXT* pctxt, IMEISVGroup* pvalue);

EXTERN void asn1Print_IMEISVGroup
   (const char* name, IMEISVGroup* pvalue);

EXTERN IMEISVGroup* asn1Test_IMEISVGroup
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EquipmentsToBeTraced                                      */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_EquipmentsToBeTraced_iMEIlist 1
#define T_EquipmentsToBeTraced_iMEISVlist 2
#define T_EquipmentsToBeTraced_iMEIgroup 3
#define T_EquipmentsToBeTraced_iMEISVgroup 4
#define T_EquipmentsToBeTraced_extElem1 5

typedef struct EXTERN EquipmentsToBeTraced {
   int t;
   union {
      /* t = 1 */
      IMEIList *iMEIlist;
      /* t = 2 */
      IMEISVList *iMEISVlist;
      /* t = 3 */
      IMEIGroup *iMEIgroup;
      /* t = 4 */
      IMEISVGroup *iMEISVgroup;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} EquipmentsToBeTraced;

EXTERN int asn1PE_EquipmentsToBeTraced (ASN1CTXT* pctxt, EquipmentsToBeTraced* pvalue);

EXTERN int asn1PD_EquipmentsToBeTraced (ASN1CTXT* pctxt, EquipmentsToBeTraced* pvalue);

EXTERN void asn1Print_EquipmentsToBeTraced
   (const char* name, EquipmentsToBeTraced* pvalue);

EXTERN EquipmentsToBeTraced* asn1Test_EquipmentsToBeTraced
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RNCTraceInformation_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RNCTraceInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} RNCTraceInformation_iE_Extensions_element;

EXTERN int asn1PE_RNCTraceInformation_iE_Extensions_element (ASN1CTXT* pctxt, RNCTraceInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RNCTraceInformation_iE_Extensions_element (ASN1CTXT* pctxt, RNCTraceInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_RNCTraceInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   RNCTraceInformation_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_RNCTraceInformation_iE_Extensions_element (ASN1CTXT* pctxt,
   RNCTraceInformation_iE_Extensions_element *pvalue);

EXTERN void asn1Print_RNCTraceInformation_iE_Extensions_element
   (const char* name, RNCTraceInformation_iE_Extensions_element* pvalue);

EXTERN RNCTraceInformation_iE_Extensions_element* asn1Test_RNCTraceInformation_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RNCTraceInformation_iE_Extensions                         */
/*                                                            */
/**************************************************************/

/* List of RNCTraceInformation_iE_Extensions_element */
typedef Asn1RTDList RNCTraceInformation_iE_Extensions;

EXTERN int asn1PE_RNCTraceInformation_iE_Extensions (ASN1CTXT* pctxt, RNCTraceInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_RNCTraceInformation_iE_Extensions (ASN1CTXT* pctxt, RNCTraceInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_RNCTraceInformation_iE_Extensions
   (const char* name, RNCTraceInformation_iE_Extensions* pvalue);

EXTERN RNCTraceInformation_iE_Extensions* asn1Test_RNCTraceInformation_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RNCTraceInformation                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RNCTraceInformation {
   struct {
      unsigned equipmentsToBeTracedPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TraceReference traceReference;
   RNCTraceInformation_traceActivationIndicator traceActivationIndicator;
   EquipmentsToBeTraced equipmentsToBeTraced;
   RNCTraceInformation_iE_Extensions iE_Extensions;
} RNCTraceInformation;

EXTERN int asn1PE_RNCTraceInformation (ASN1CTXT* pctxt, RNCTraceInformation* pvalue);

EXTERN int asn1PD_RNCTraceInformation (ASN1CTXT* pctxt, RNCTraceInformation* pvalue);

EXTERN void asn1Print_RNCTraceInformation
   (const char* name, RNCTraceInformation* pvalue);

EXTERN RNCTraceInformation* asn1Test_RNCTraceInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationTransferType                                   */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InformationTransferType_rNCTraceInformation 1
#define T_InformationTransferType_extElem1 2

typedef struct EXTERN InformationTransferType {
   int t;
   union {
      /* t = 1 */
      RNCTraceInformation *rNCTraceInformation;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} InformationTransferType;

EXTERN int asn1PE_InformationTransferType (ASN1CTXT* pctxt, InformationTransferType* pvalue);

EXTERN int asn1PD_InformationTransferType (ASN1CTXT* pctxt, InformationTransferType* pvalue);

EXTERN void asn1Print_InformationTransferType
   (const char* name, InformationTransferType* pvalue);

EXTERN InformationTransferType* asn1Test_InformationTransferType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSIPMulticastAddressandAPNRequest                       */
/*                                                            */
/**************************************************************/

/* List of TMGI */
typedef Asn1RTDList MBMSIPMulticastAddressandAPNRequest;

EXTERN int asn1PE_MBMSIPMulticastAddressandAPNRequest (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNRequest* pvalue);

EXTERN int asn1PD_MBMSIPMulticastAddressandAPNRequest (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNRequest* pvalue);

EXTERN void asn1Print_MBMSIPMulticastAddressandAPNRequest
   (const char* name, MBMSIPMulticastAddressandAPNRequest* pvalue);

EXTERN MBMSIPMulticastAddressandAPNRequest* asn1Test_MBMSIPMulticastAddressandAPNRequest
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationRequestType                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InformationRequestType_mBMSIPMulticastAddressandAPNRequest 1
#define T_InformationRequestType_permanentNAS_UE_ID 2
#define T_InformationRequestType_extElem1 3

typedef struct EXTERN InformationRequestType {
   int t;
   union {
      /* t = 1 */
      MBMSIPMulticastAddressandAPNRequest *mBMSIPMulticastAddressandAPNRequest;
      /* t = 2 */
      PermanentNAS_UE_ID *permanentNAS_UE_ID;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} InformationRequestType;

EXTERN int asn1PE_InformationRequestType (ASN1CTXT* pctxt, InformationRequestType* pvalue);

EXTERN int asn1PD_InformationRequestType (ASN1CTXT* pctxt, InformationRequestType* pvalue);

EXTERN void asn1Print_InformationRequestType
   (const char* name, InformationRequestType* pvalue);

EXTERN InformationRequestType* asn1Test_InformationRequestType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPMulticastAddress                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IPMulticastAddress {
   OSUINT32 numocts;
   OSOCTET data[16];
} IPMulticastAddress;

EXTERN int asn1PE_IPMulticastAddress (ASN1CTXT* pctxt, IPMulticastAddress* pvalue);

EXTERN int asn1PD_IPMulticastAddress (ASN1CTXT* pctxt, IPMulticastAddress* pvalue);

EXTERN void asn1Print_IPMulticastAddress
   (const char* name, IPMulticastAddress* pvalue);

EXTERN IPMulticastAddress* asn1Test_IPMulticastAddress
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  APN                                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN APN {
   OSUINT32 numocts;
   OSOCTET data[255];
} APN;

EXTERN int asn1PE_APN (ASN1CTXT* pctxt, APN* pvalue);

EXTERN int asn1PD_APN (ASN1CTXT* pctxt, APN* pvalue);

EXTERN void asn1Print_APN
   (const char* name, APN* pvalue);

EXTERN APN* asn1Test_APN
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSIPMulticastAddressandAPNlist_iE_Extensions_element    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MBMSIPMulticastAddressandAPNlist_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} MBMSIPMulticastAddressandAPNlist_iE_Extensions_element;

EXTERN int asn1PE_MBMSIPMulticastAddressandAPNlist_iE_Extensions_element (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNlist_iE_Extensions_element* pvalue);

EXTERN int asn1PD_MBMSIPMulticastAddressandAPNlist_iE_Extensions_element (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNlist_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_MBMSIPMulticastAddressandAPNlist_iE_Extensions_element (ASN1CTXT* pctxt,
   MBMSIPMulticastAddressandAPNlist_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_MBMSIPMulticastAddressandAPNlist_iE_Extensions_element (ASN1CTXT* pctxt,
   MBMSIPMulticastAddressandAPNlist_iE_Extensions_element *pvalue);

EXTERN void asn1Print_MBMSIPMulticastAddressandAPNlist_iE_Extensions_element
   (const char* name, MBMSIPMulticastAddressandAPNlist_iE_Extensions_element* pvalue);

EXTERN MBMSIPMulticastAddressandAPNlist_iE_Extensions_element* asn1Test_MBMSIPMulticastAddressandAPNlist_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSIPMulticastAddressandAPNlist_iE_Extensions            */
/*                                                            */
/**************************************************************/

/* List of MBMSIPMulticastAddressandAPNlist_iE_Extensions_element */
typedef Asn1RTDList MBMSIPMulticastAddressandAPNlist_iE_Extensions;

EXTERN int asn1PE_MBMSIPMulticastAddressandAPNlist_iE_Extensions (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNlist_iE_Extensions* pvalue);

EXTERN int asn1PD_MBMSIPMulticastAddressandAPNlist_iE_Extensions (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNlist_iE_Extensions* pvalue);

EXTERN void asn1Print_MBMSIPMulticastAddressandAPNlist_iE_Extensions
   (const char* name, MBMSIPMulticastAddressandAPNlist_iE_Extensions* pvalue);

EXTERN MBMSIPMulticastAddressandAPNlist_iE_Extensions* asn1Test_MBMSIPMulticastAddressandAPNlist_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSIPMulticastAddressandAPNlist                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MBMSIPMulticastAddressandAPNlist {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TMGI tMGI;
   IPMulticastAddress iPMulticastAddress;
   APN aPN;
   MBMSIPMulticastAddressandAPNlist_iE_Extensions iE_Extensions;
   Asn1RTDList extElem1;
} MBMSIPMulticastAddressandAPNlist;

EXTERN int asn1PE_MBMSIPMulticastAddressandAPNlist (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNlist* pvalue);

EXTERN int asn1PD_MBMSIPMulticastAddressandAPNlist (ASN1CTXT* pctxt, MBMSIPMulticastAddressandAPNlist* pvalue);

EXTERN void asn1Print_MBMSIPMulticastAddressandAPNlist
   (const char* name, MBMSIPMulticastAddressandAPNlist* pvalue);

EXTERN MBMSIPMulticastAddressandAPNlist* asn1Test_MBMSIPMulticastAddressandAPNlist
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestedMBMSIPMulticastAddressandAPNRequest              */
/*                                                            */
/**************************************************************/

/* List of MBMSIPMulticastAddressandAPNlist */
typedef Asn1RTDList RequestedMBMSIPMulticastAddressandAPNRequest;

EXTERN int asn1PE_RequestedMBMSIPMulticastAddressandAPNRequest (ASN1CTXT* pctxt, RequestedMBMSIPMulticastAddressandAPNRequest* pvalue);

EXTERN int asn1PD_RequestedMBMSIPMulticastAddressandAPNRequest (ASN1CTXT* pctxt, RequestedMBMSIPMulticastAddressandAPNRequest* pvalue);

EXTERN void asn1Print_RequestedMBMSIPMulticastAddressandAPNRequest
   (const char* name, RequestedMBMSIPMulticastAddressandAPNRequest* pvalue);

EXTERN RequestedMBMSIPMulticastAddressandAPNRequest* asn1Test_RequestedMBMSIPMulticastAddressandAPNRequest
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestedMulticastServiceList                             */
/*                                                            */
/**************************************************************/

/* List of TMGI */
typedef Asn1RTDList RequestedMulticastServiceList;

EXTERN int asn1PE_RequestedMulticastServiceList (ASN1CTXT* pctxt, RequestedMulticastServiceList* pvalue);

EXTERN int asn1PD_RequestedMulticastServiceList (ASN1CTXT* pctxt, RequestedMulticastServiceList* pvalue);

EXTERN void asn1Print_RequestedMulticastServiceList
   (const char* name, RequestedMulticastServiceList* pvalue);

EXTERN RequestedMulticastServiceList* asn1Test_RequestedMulticastServiceList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationRequested                                      */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InformationRequested_requestedMBMSIPMulticastAddressandAPNRequest 1
#define T_InformationRequested_requestedMulticastServiceList 2
#define T_InformationRequested_extElem1 3

typedef struct EXTERN InformationRequested {
   int t;
   union {
      /* t = 1 */
      RequestedMBMSIPMulticastAddressandAPNRequest *requestedMBMSIPMulticastAddressandAPNRequest;
      /* t = 2 */
      RequestedMulticastServiceList *requestedMulticastServiceList;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} InformationRequested;

EXTERN int asn1PE_InformationRequested (ASN1CTXT* pctxt, InformationRequested* pvalue);

EXTERN int asn1PD_InformationRequested (ASN1CTXT* pctxt, InformationRequested* pvalue);

EXTERN void asn1Print_InformationRequested
   (const char* name, InformationRequested* pvalue);

EXTERN InformationRequested* asn1Test_InformationRequested
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSSessionIdentity                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MBMSSessionIdentity {
   OSUINT32 numocts;
   OSOCTET data[1];
} MBMSSessionIdentity;

EXTERN int asn1PE_MBMSSessionIdentity (ASN1CTXT* pctxt, MBMSSessionIdentity* pvalue);

EXTERN int asn1PD_MBMSSessionIdentity (ASN1CTXT* pctxt, MBMSSessionIdentity* pvalue);

EXTERN void asn1Print_MBMSSessionIdentity
   (const char* name, MBMSSessionIdentity* pvalue);

EXTERN MBMSSessionIdentity* asn1Test_MBMSSessionIdentity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSBearerServiceType                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   multicast = 0,
   broadcast = 1
} MBMSBearerServiceType_Root;

typedef OSUINT32 MBMSBearerServiceType;

EXTERN int asn1PE_MBMSBearerServiceType (ASN1CTXT* pctxt, MBMSBearerServiceType value);

EXTERN int asn1PD_MBMSBearerServiceType (ASN1CTXT* pctxt, MBMSBearerServiceType* pvalue);

EXTERN void asn1Print_MBMSBearerServiceType
   (const char* name, MBMSBearerServiceType* pvalue);

EXTERN MBMSBearerServiceType* asn1Test_MBMSBearerServiceType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSSessionDuration                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MBMSSessionDuration {
   OSUINT32 numocts;
   OSOCTET data[3];
} MBMSSessionDuration;

EXTERN int asn1PE_MBMSSessionDuration (ASN1CTXT* pctxt, MBMSSessionDuration* pvalue);

EXTERN int asn1PD_MBMSSessionDuration (ASN1CTXT* pctxt, MBMSSessionDuration* pvalue);

EXTERN void asn1Print_MBMSSessionDuration
   (const char* name, MBMSSessionDuration* pvalue);

EXTERN MBMSSessionDuration* asn1Test_MBMSSessionDuration
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSServiceArea                                           */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr MBMSServiceArea;

EXTERN int asn1PE_MBMSServiceArea (ASN1CTXT* pctxt, MBMSServiceArea value);

EXTERN int asn1PD_MBMSServiceArea (ASN1CTXT* pctxt, MBMSServiceArea* pvalue);

EXTERN void asn1Print_MBMSServiceArea
   (const char* name, MBMSServiceArea* pvalue);

EXTERN MBMSServiceArea* asn1Test_MBMSServiceArea
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FrequenceLayerConvergenceFlag                             */
/*                                                            */
/**************************************************************/

typedef enum {
   no_FLC_flag = 0
} FrequenceLayerConvergenceFlag_Root;

typedef OSUINT32 FrequenceLayerConvergenceFlag;

EXTERN int asn1PE_FrequenceLayerConvergenceFlag (ASN1CTXT* pctxt, FrequenceLayerConvergenceFlag value);

EXTERN int asn1PD_FrequenceLayerConvergenceFlag (ASN1CTXT* pctxt, FrequenceLayerConvergenceFlag* pvalue);

EXTERN void asn1Print_FrequenceLayerConvergenceFlag
   (const char* name, FrequenceLayerConvergenceFlag* pvalue);

EXTERN FrequenceLayerConvergenceFlag* asn1Test_FrequenceLayerConvergenceFlag
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAofIdleModeUEs                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAofIdleModeUEs {
   OSUINT32 n;
   RAC *elem;
} RAofIdleModeUEs;

EXTERN int asn1PE_RAofIdleModeUEs (ASN1CTXT* pctxt, RAofIdleModeUEs* pvalue);

EXTERN int asn1PD_RAofIdleModeUEs (ASN1CTXT* pctxt, RAofIdleModeUEs* pvalue);

EXTERN void asn1Print_RAofIdleModeUEs
   (const char* name, RAofIdleModeUEs* pvalue);

EXTERN RAofIdleModeUEs* asn1Test_RAofIdleModeUEs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NotEmptyRAListofIdleModeUEs_iE_Extensions_element         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NotEmptyRAListofIdleModeUEs_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} NotEmptyRAListofIdleModeUEs_iE_Extensions_element;

EXTERN int asn1PE_NotEmptyRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt, NotEmptyRAListofIdleModeUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PD_NotEmptyRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt, NotEmptyRAListofIdleModeUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_NotEmptyRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt,
   NotEmptyRAListofIdleModeUEs_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_NotEmptyRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt,
   NotEmptyRAListofIdleModeUEs_iE_Extensions_element *pvalue);

EXTERN void asn1Print_NotEmptyRAListofIdleModeUEs_iE_Extensions_element
   (const char* name, NotEmptyRAListofIdleModeUEs_iE_Extensions_element* pvalue);

EXTERN NotEmptyRAListofIdleModeUEs_iE_Extensions_element* asn1Test_NotEmptyRAListofIdleModeUEs_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NotEmptyRAListofIdleModeUEs_iE_Extensions                 */
/*                                                            */
/**************************************************************/

/* List of NotEmptyRAListofIdleModeUEs_iE_Extensions_element */
typedef Asn1RTDList NotEmptyRAListofIdleModeUEs_iE_Extensions;

EXTERN int asn1PE_NotEmptyRAListofIdleModeUEs_iE_Extensions (ASN1CTXT* pctxt, NotEmptyRAListofIdleModeUEs_iE_Extensions* pvalue);

EXTERN int asn1PD_NotEmptyRAListofIdleModeUEs_iE_Extensions (ASN1CTXT* pctxt, NotEmptyRAListofIdleModeUEs_iE_Extensions* pvalue);

EXTERN void asn1Print_NotEmptyRAListofIdleModeUEs_iE_Extensions
   (const char* name, NotEmptyRAListofIdleModeUEs_iE_Extensions* pvalue);

EXTERN NotEmptyRAListofIdleModeUEs_iE_Extensions* asn1Test_NotEmptyRAListofIdleModeUEs_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NotEmptyRAListofIdleModeUEs                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NotEmptyRAListofIdleModeUEs {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RAofIdleModeUEs rAofIdleModeUEs;
   NotEmptyRAListofIdleModeUEs_iE_Extensions iE_Extensions;
} NotEmptyRAListofIdleModeUEs;

EXTERN int asn1PE_NotEmptyRAListofIdleModeUEs (ASN1CTXT* pctxt, NotEmptyRAListofIdleModeUEs* pvalue);

EXTERN int asn1PD_NotEmptyRAListofIdleModeUEs (ASN1CTXT* pctxt, NotEmptyRAListofIdleModeUEs* pvalue);

EXTERN void asn1Print_NotEmptyRAListofIdleModeUEs
   (const char* name, NotEmptyRAListofIdleModeUEs* pvalue);

EXTERN NotEmptyRAListofIdleModeUEs* asn1Test_NotEmptyRAListofIdleModeUEs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs          */
/*                                                            */
/**************************************************************/

typedef enum {
   emptylist = 0,
   fulllist = 1
} RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs_Root;

typedef OSUINT32 RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs;

EXTERN int asn1PE_RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs (ASN1CTXT* pctxt, RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs value);

EXTERN int asn1PD_RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs (ASN1CTXT* pctxt, RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs* pvalue);

EXTERN void asn1Print_RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs
   (const char* name, RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs* pvalue);

EXTERN RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs* asn1Test_RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAListofIdleModeUEs                                       */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_RAListofIdleModeUEs_notEmptyRAListofIdleModeUEs 1
#define T_RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs 2
#define T_RAListofIdleModeUEs_extElem1  3

typedef struct EXTERN RAListofIdleModeUEs {
   int t;
   union {
      /* t = 1 */
      NotEmptyRAListofIdleModeUEs *notEmptyRAListofIdleModeUEs;
      /* t = 2 */
      RAListofIdleModeUEs_emptyFullRAListofIdleModeUEs emptyFullRAListofIdleModeUEs;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} RAListofIdleModeUEs;

EXTERN int asn1PE_RAListofIdleModeUEs (ASN1CTXT* pctxt, RAListofIdleModeUEs* pvalue);

EXTERN int asn1PD_RAListofIdleModeUEs (ASN1CTXT* pctxt, RAListofIdleModeUEs* pvalue);

EXTERN void asn1Print_RAListofIdleModeUEs
   (const char* name, RAListofIdleModeUEs* pvalue);

EXTERN RAListofIdleModeUEs* asn1Test_RAListofIdleModeUEs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSSessionRepetitionNumber                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 MBMSSessionRepetitionNumber;

EXTERN int asn1PE_MBMSSessionRepetitionNumber (ASN1CTXT* pctxt, MBMSSessionRepetitionNumber value);

EXTERN int asn1PD_MBMSSessionRepetitionNumber (ASN1CTXT* pctxt, MBMSSessionRepetitionNumber* pvalue);

EXTERN void asn1Print_MBMSSessionRepetitionNumber
   (const char* name, MBMSSessionRepetitionNumber* pvalue);

EXTERN MBMSSessionRepetitionNumber* asn1Test_MBMSSessionRepetitionNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimeToMBMSDataTransfer                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TimeToMBMSDataTransfer {
   OSUINT32 numocts;
   OSOCTET data[1];
} TimeToMBMSDataTransfer;

EXTERN int asn1PE_TimeToMBMSDataTransfer (ASN1CTXT* pctxt, TimeToMBMSDataTransfer* pvalue);

EXTERN int asn1PD_TimeToMBMSDataTransfer (ASN1CTXT* pctxt, TimeToMBMSDataTransfer* pvalue);

EXTERN void asn1Print_TimeToMBMSDataTransfer
   (const char* name, TimeToMBMSDataTransfer* pvalue);

EXTERN TimeToMBMSDataTransfer* asn1Test_TimeToMBMSDataTransfer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SessionUpdateID                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT32 SessionUpdateID;

EXTERN int asn1PE_SessionUpdateID (ASN1CTXT* pctxt, SessionUpdateID value);

EXTERN int asn1PD_SessionUpdateID (ASN1CTXT* pctxt, SessionUpdateID* pvalue);

EXTERN void asn1Print_SessionUpdateID
   (const char* name, SessionUpdateID* pvalue);

EXTERN SessionUpdateID* asn1Test_SessionUpdateID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NewRAListofIdleModeUEs                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NewRAListofIdleModeUEs {
   OSUINT32 n;
   RAC *elem;
} NewRAListofIdleModeUEs;

EXTERN int asn1PE_NewRAListofIdleModeUEs (ASN1CTXT* pctxt, NewRAListofIdleModeUEs* pvalue);

EXTERN int asn1PD_NewRAListofIdleModeUEs (ASN1CTXT* pctxt, NewRAListofIdleModeUEs* pvalue);

EXTERN void asn1Print_NewRAListofIdleModeUEs
   (const char* name, NewRAListofIdleModeUEs* pvalue);

EXTERN NewRAListofIdleModeUEs* asn1Test_NewRAListofIdleModeUEs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RAListwithNoIdleModeUEsAnyMore                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RAListwithNoIdleModeUEsAnyMore {
   OSUINT32 n;
   RAC *elem;
} RAListwithNoIdleModeUEsAnyMore;

EXTERN int asn1PE_RAListwithNoIdleModeUEsAnyMore (ASN1CTXT* pctxt, RAListwithNoIdleModeUEsAnyMore* pvalue);

EXTERN int asn1PD_RAListwithNoIdleModeUEsAnyMore (ASN1CTXT* pctxt, RAListwithNoIdleModeUEsAnyMore* pvalue);

EXTERN void asn1Print_RAListwithNoIdleModeUEsAnyMore
   (const char* name, RAListwithNoIdleModeUEsAnyMore* pvalue);

EXTERN RAListwithNoIdleModeUEsAnyMore* asn1Test_RAListwithNoIdleModeUEsAnyMore
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DeltaRAListofIdleModeUEs_iE_Extensions_element            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DeltaRAListofIdleModeUEs_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   Asn1Object extensionValue;
} DeltaRAListofIdleModeUEs_iE_Extensions_element;

EXTERN int asn1PE_DeltaRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt, DeltaRAListofIdleModeUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PD_DeltaRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt, DeltaRAListofIdleModeUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PETC_DeltaRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt,
   DeltaRAListofIdleModeUEs_iE_Extensions_element *pvalue);

EXTERN int asn1PDTC_DeltaRAListofIdleModeUEs_iE_Extensions_element (ASN1CTXT* pctxt,
   DeltaRAListofIdleModeUEs_iE_Extensions_element *pvalue);

EXTERN void asn1Print_DeltaRAListofIdleModeUEs_iE_Extensions_element
   (const char* name, DeltaRAListofIdleModeUEs_iE_Extensions_element* pvalue);

EXTERN DeltaRAListofIdleModeUEs_iE_Extensions_element* asn1Test_DeltaRAListofIdleModeUEs_iE_Extensions_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DeltaRAListofIdleModeUEs_iE_Extensions                    */
/*                                                            */
/**************************************************************/

/* List of DeltaRAListofIdleModeUEs_iE_Extensions_element */
typedef Asn1RTDList DeltaRAListofIdleModeUEs_iE_Extensions;

EXTERN int asn1PE_DeltaRAListofIdleModeUEs_iE_Extensions (ASN1CTXT* pctxt, DeltaRAListofIdleModeUEs_iE_Extensions* pvalue);

EXTERN int asn1PD_DeltaRAListofIdleModeUEs_iE_Extensions (ASN1CTXT* pctxt, DeltaRAListofIdleModeUEs_iE_Extensions* pvalue);

EXTERN void asn1Print_DeltaRAListofIdleModeUEs_iE_Extensions
   (const char* name, DeltaRAListofIdleModeUEs_iE_Extensions* pvalue);

EXTERN DeltaRAListofIdleModeUEs_iE_Extensions* asn1Test_DeltaRAListofIdleModeUEs_iE_Extensions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DeltaRAListofIdleModeUEs                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DeltaRAListofIdleModeUEs {
   struct {
      unsigned newRAListofIdleModeUEsPresent : 1;
      unsigned rAListwithNoIdleModeUEsAnyMorePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NewRAListofIdleModeUEs newRAListofIdleModeUEs;
   RAListwithNoIdleModeUEsAnyMore rAListwithNoIdleModeUEsAnyMore;
   DeltaRAListofIdleModeUEs_iE_Extensions iE_Extensions;
} DeltaRAListofIdleModeUEs;

EXTERN int asn1PE_DeltaRAListofIdleModeUEs (ASN1CTXT* pctxt, DeltaRAListofIdleModeUEs* pvalue);

EXTERN int asn1PD_DeltaRAListofIdleModeUEs (ASN1CTXT* pctxt, DeltaRAListofIdleModeUEs* pvalue);

EXTERN void asn1Print_DeltaRAListofIdleModeUEs
   (const char* name, DeltaRAListofIdleModeUEs* pvalue);

EXTERN DeltaRAListofIdleModeUEs* asn1Test_DeltaRAListofIdleModeUEs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSCNDe_Registration                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   normalsessionstop = 0,
   deregister = 1
} MBMSCNDe_Registration_Root;

typedef OSUINT32 MBMSCNDe_Registration;

EXTERN int asn1PE_MBMSCNDe_Registration (ASN1CTXT* pctxt, MBMSCNDe_Registration value);

EXTERN int asn1PD_MBMSCNDe_Registration (ASN1CTXT* pctxt, MBMSCNDe_Registration* pvalue);

EXTERN void asn1Print_MBMSCNDe_Registration
   (const char* name, MBMSCNDe_Registration* pvalue);

EXTERN MBMSCNDe_Registration* asn1Test_MBMSCNDe_Registration
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSRegistrationRequestType                               */
/*                                                            */
/**************************************************************/

typedef enum {
   register_ = 0,
   deregister_1 = 1
} MBMSRegistrationRequestType_Root;

typedef OSUINT32 MBMSRegistrationRequestType;

EXTERN int asn1PE_MBMSRegistrationRequestType (ASN1CTXT* pctxt, MBMSRegistrationRequestType value);

EXTERN int asn1PD_MBMSRegistrationRequestType (ASN1CTXT* pctxt, MBMSRegistrationRequestType* pvalue);

EXTERN void asn1Print_MBMSRegistrationRequestType
   (const char* name, MBMSRegistrationRequestType* pvalue);

EXTERN MBMSRegistrationRequestType* asn1Test_MBMSRegistrationRequestType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RateControlAllowed                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   not_allowed = 0,
   allowed = 1
} RateControlAllowed_Root;

typedef OSUINT32 RateControlAllowed;

EXTERN int asn1PE_RateControlAllowed (ASN1CTXT* pctxt, RateControlAllowed value);

EXTERN int asn1PD_RateControlAllowed (ASN1CTXT* pctxt, RateControlAllowed* pvalue);

EXTERN void asn1Print_RateControlAllowed
   (const char* name, RateControlAllowed* pvalue);

EXTERN RateControlAllowed* asn1Test_RateControlAllowed
   (ASN1CTXT* pctxt);

#ifdef __cplusplus
}
#endif

#endif
