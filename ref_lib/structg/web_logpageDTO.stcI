stcI_HASH : ANALYSIS_JAVA_LOG1_STG_TYPEDEF
stcI_EXTENSION : java
stcI_FILEPREFIX : STC/log_
stcI_FILEPOSTFIX : _DTO
SetI : ITJAVANAME = KEY
Set : iterate_comments = OFF

/*
 * Copyright 2005 EOSOFT, Inc. All rights reserved.
 * EOSOFT PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 * 
 *	@author	Hyun Seok Park
 *	@version	1.0, 07/02/20
 *	@since		JDK1.5
 */
package com.upresto.ims.log.dto;

import java.sql.*;
import java.util.*;
import kr.co.eosoft.config.*;
import kr.co.eosoft.common.*;
import com.upresto.ims.util.*;

public class Log_ITJAVANAME_DTO extends DTO {
	// ITJAVANAME 테이블항목
	
	ITERATE @SQL_ARRAY_ITJAVANAME +<<+ IT2KEY IT2VALUE
	NOTEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_USEYN{IT2VALUE}+>+,NO) #{
		IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,U16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,IP4 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S64 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,STIME || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,MTIME ) #{		private long IT2VALUE;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
		}#
		IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U8 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,DEF) #{		private int IT2VALUE;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
		}#
		IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,STRING || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,X8) #{		private String IT2VALUE;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
		}#
		NOTEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U32 || U16 || IP4 || S16 || S32 || S64 || STIME || MTIME || U8 || DEF || STRING || X8) #{		
			/* 존재하지 않는 타입  +<+$SQL_ITJAVANAME{IT2VALUE}+>+  IT2VALUE */
		}#
	}#
	+>>+

	/**
	 * Log_ITJAVANAME_DTO constructor
	 */
	public Log_ITJAVANAME_DTO() {
		isDebug = getDebugMode(this.getClass().getName());
	}//Log_ITJAVANAME_DTO() constructor ended

	// ITJAVANAME 항목 set, get함수 생성 시작

	ITERATE @SQL_ARRAY_ITJAVANAME +<<+ IT2KEY IT2VALUE
	NOTEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_USEYN{IT2VALUE}+>+,NO) #{
		IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,U16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,IP4 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S64 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,STIME || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,MTIME ) #{		
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 저장한다.
			 *  @param   long  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
			*/
			public void setIT2VALUE(long IT2VALUE) {
				this.IT2VALUE = IT2VALUE;
			}
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 가져온다.
			 *  @return   long  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
			*/
			public long getIT2VALUE() {
				return hideNegative(IT2VALUE);
			}

			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,IP4) #{		
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 IP 형식으로 리턴한다..
			 *  @return   String  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 IP 형식으로)
			*/
			public String getFormattedIT2VALUE() {
				return hideNull(IPHandler.transIP(getIT2VALUE()));
			}
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,STIME) #{
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+의  long 형식 시간을 yyyy.MM.dd HH:mm:ss 형식으로 변환 리턴한다.
			 *  @return   String  yyyy.MM.dd HH:mm:ss 형식으로 변환 리턴한다.
			*/
			public String getFormattedIT2VALUE() {
				return hideNull(DateTimeHandler.getFormattedTimeByHead(getIT2VALUE()));
			}
			}#
		}#
		IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U8 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,DEF) #{		
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 저장한다.
			 *  @param   int  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
			*/
			public void setIT2VALUE(int IT2VALUE) {
				this.IT2VALUE = IT2VALUE;
			}
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 가져온다.
			 *  @return   int  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
			*/
			public int getIT2VALUE() {
				return hideNegative(IT2VALUE);
			}
		}#
		IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,STRING || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,X8) #{		
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 저장한다.
			 *  @param   String  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
			*/
			public void setIT2VALUE(String IT2VALUE) {
				this.IT2VALUE = IT2VALUE;
			}
			/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 가져온다.
			 *  @return   String  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
			*/
			public String getIT2VALUE() {
				return hideNull(IT2VALUE);
			}
		}#
	}#
	+>>+
	// ITJAVANAME 항목 set, get함수 생성 끝

}
