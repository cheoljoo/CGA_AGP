FileName : abprotocol_treeprint.c
Set : iterate_comments = OFF
/**
  $Id: abprotocol_treeprint.stc,v 1.6 2007/03/23 11:58:50 yhshin Exp $
 **/ 
#define MAX_TREE_DEPTH          10
#define MAX_TREE_STRING         256
unsigned char       tree_prefix [MAX_TREE_DEPTH][MAX_TREE_STRING];

void
pvprint_prefix(int depth, unsigned char *ubuf, int *ulen, int *line)
{
    int     i;

    sprintf (ubuf + (*ulen), "treeValue=%d|", *line);
    *ulen = strlen(ubuf);
    for (i = 0; i < depth; i++) {
        sprintf (ubuf + (*ulen), "%s", tree_prefix[i]);
        *ulen = strlen(ubuf);
    }
}

void
param_msg_pvprint (param_node_t *pnode, int depth, unsigned char *ubuf, int *ulen, int *line)
{
    param_node_t        *pn;

    if (pnode == NULL)
        return;

    pvprint_prefix (depth, ubuf, ulen, line);

    if (&pnode->child == (dlink_t *)pnode) {
/*
        sprintf (ubuf + (*ulen), "%s", pnode->data);
        *ulen = strlen (ubuf);
*/
#if DEBUG_PRINT
        printf("..????\n");
#endif
        return;
    }

    sprintf (ubuf + (*ulen), "%s|%d|%d\r\n", pnode->data, pnode->pos, pnode->len);
    *ulen = strlen (ubuf);
    (*line)++;
    sprintf (tree_prefix [depth], "%s|", pnode->data);

    pn = (param_node_t *)pnode->child.next;

    while (&pnode->child != (dlink_t *)pn) {
        param_msg_pvprint(pn, depth+1, ubuf, ulen, line);
        pn = (param_node_t *)pn->sibling.next;
    }

}

void
protocol_msg_pvprint (pnode_t *pnode, int depth, unsigned char *ubuf, int *ulen, int *line)
{
    param_node_t        *pn;

    if (pnode == NULL)
        return;

    sprintf (ubuf + (*ulen), "treeValue=%d|%s|%d|%d\r\n", *line, pnode->pdesc, pnode->pos, pnode->len);
    *ulen = strlen (ubuf);
    (*line)++;

    sprintf (tree_prefix [depth], "%s|", pnode->pdesc);

    pn = (param_node_t *)pnode->child.next;

    while (&pnode->child != (dlink_t *)pn) {
        param_msg_pvprint (pn, depth+1, ubuf, ulen, line);
        pn = (param_node_t *)pn->sibling.next;
    }

}

Set : function_def{print_packet_view_tree} = "void print_packet_view_tree (proot_t *proot, unsigned char *ubuf, int *line)"
void print_packet_view_tree (proot_t *proot, unsigned char *ubuf, int *line)
{
    pnode_t     *pn;
    int         ulen;

    ulen = 0;
    pn = (pnode_t *)proot->child.next;

    while (&proot->child != (dlink_t *)pn) {
        protocol_msg_pvprint (pn, 0, ubuf, &ulen, line);
        pn = (pnode_t *)pn->sibling.next;
    }
}


/**  
 *  $Log: abprotocol_treeprint.stc,v $
 *  Revision 1.6  2007/03/23 11:58:50  yhshin
 *  DEBUG_PRINT
 *
 *  Revision 1.5  2007/03/20 02:46:43  yhshin
 *  pos
 *
 *  Revision 1.4  2007/03/16 12:11:56  yhshin
 *  *** empty log message ***
 *
 *  Revision 1.3  2007/03/16 12:10:58  yhshin
 *  rn
 *
 *  Revision 1.2  2007/03/16 11:46:42  yhshin
 *  Ω√¿€|≥°
 *
 *  Revision 1.1  2007/03/16 01:04:14  yhshin
 *  tree print lib
 *
 **/

