stcI_HASH : ANALYSIS_JAVA_PROTOCOL_STG_TYPEDEF
stcI_EXTENSION : java
stcI_FILEPREFIX : Protocol_
stcI_FILEPOSTFIX : _DTO
SetI : ITJAVANAME = KEY
Set : iterate_comments = OFF

/*
 * Copyright 2005 EOSOFT, Inc. All rights reserved.
 * EOSOFT PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 * 
 *	@author	Hyun Seok Park
 *	@version	1.0, 07/02/20
 *	@since		JDK1.5
 */
package com.upresto.ims.protocol.dto;

import java.sql.*;
import java.util.*;
import kr.co.eosoft.config.*;
import kr.co.eosoft.common.*;
import com.upresto.ims.util.*;

public class Protocol_ITJAVANAME_DTO extends DTO {
	// ITJAVANAME 테이블항목
	
	ITERATE @SQL_ARRAY_ITJAVANAME +<<+ IT2KEY IT2VALUE
	NOTEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_USEYN{IT2VALUE}+>+,NO) #{
		IFEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_LISTUSEYN{IT2VALUE}+>+,YES || +<+$SQL_ITJAVANAME_STG_PARM_JAVA_DETAILUSEYN{IT2VALUE}+>+,  ) #{
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,U16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,IP4 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S64 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,STIME || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,MTIME ) #{		private long IT2VALUE;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U8 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,DEF) #{		private int IT2VALUE;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,DEF) #{		private String IT2VALUEValue;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,STRING || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,X8) #{		private String IT2VALUE;	/* +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ */
			}#
			NOTEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U32 || U16 || IP4 || S16 || S32 || S64 || STIME || MTIME || U8 || DEF || STRING || X8) #{		
				/* 존재하지 않는 타입  +<+$SQL_ITJAVANAME{IT2VALUE}+>+  IT2VALUE */
			}#
		}#
	}#
	+>>+
	private String patternDuration = "###,##0.000000";

	/**
	 * Protocol_ITJAVANAME_DTO constructor
	 */
	public Protocol_ITJAVANAME_DTO() {
		isDebug = getDebugMode(this.getClass().getName());
	}//Protocol_ITJAVANAME_DTO() constructor ended

	// ITJAVANAME 항목 set, get함수 생성 시작
	ITERATE @SQL_ARRAY_ITJAVANAME +<<+ IT2KEY IT2VALUE
	NOTEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_USEYN{IT2VALUE}+>+,NO) #{
		IFEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_LISTUSEYN{IT2VALUE}+>+,YES || +<+$SQL_ITJAVANAME_STG_PARM_JAVA_DETAILUSEYN{IT2VALUE}+>+,  ) #{
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,U16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,IP4 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S16 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S32 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,S64 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,STIME || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,MTIME ) #{		
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 저장한다.
				 *  @param   long  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
				*/
				public void setIT2VALUE(long IT2VALUE) {
					this.IT2VALUE = IT2VALUE;
				}
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 가져온다.
				 *  @return   long  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
				*/
				public long getIT2VALUE() {
					return hideNegative(IT2VALUE);
				}

				IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,IP4) #{		
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 IP 형식으로 리턴한다..
				 *  @return   String  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 IP 형식으로)
				*/
				public String getFormattedIT2VALUE() {
					return hideNull(IPHandler.transIP(getIT2VALUE()));
				}
				}#
				IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,STIME) #{
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+의  long 형식 시간을 yyyy.MM.dd HH:mm:ss 형식으로 변환 리턴한다.
				 *  @return   String  yyyy.MM.dd HH:mm:ss 형식으로 변환 리턴한다.
				*/
				public String getFormattedIT2VALUE() {
					return hideNull(DateTimeHandler.getFormattedTimeByHead(getIT2VALUE()));
				}
				}#
				
				it2value=IT2VALUE  ,  $sql_itjavaname{it2value}= +<+$SQL_ITJAVANAME{IT2VALUE}+>+ , it2key=IT2KEY , $sql_array_itjavaname[it2key----]= +<+$SQL_ARRAY_ITJAVANAME[IT2KEY----]+>+ , $sql_itjavaname{+<+$sql_array_itjavaname[it2key----]=+<+$SQL_ITJAVANAME{+<+$SQL_ARRAY_ITJAVANAME[IT2KEY----]+>+}+>+
				
				IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,MTIME) #{
					IFEQUAL(+<+$SQL_ITJAVANAME{+<+$SQL_ARRAY_ITJAVANAME[IT2KEY----]+>+}+>+,STIME) #{
					/**  시간을 yyyy.MM.dd HH:mm:ss.xxxxxx 형식으로 변환 리턴한다.
					 *  @return   String  yyyy.MM.dd HH:mm:ss.xxxxxx 형식으로 변환 리턴한다.
					*/
					public String getFormattedTime+<+$SQL_ARRAY_ITJAVANAME[IT2KEY----]+>+() {
						if(getFormatted+<+$SQL_ARRAY_ITJAVANAME[IT2KEY----]+>+().equals("-")) return "-";
						return hideNull(getFormatted+<+$SQL_ARRAY_ITJAVANAME[IT2KEY----]+>+()+"."+getIT2VALUE());
					}
					}#
				}#
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,U8 || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,DEF) #{		
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 저장한다.
				 *  @param   int  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
				*/
				public void setIT2VALUE(int IT2VALUE) {
					this.IT2VALUE = IT2VALUE;
				}
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 가져온다.
				 *  @return   int  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
				*/
				public int getIT2VALUE() {
					return hideNegative(IT2VALUE);
				}
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,DEF) #{		
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+ 코드의 내용을 저장한다.
				 *  @param   String  IT2VALUEValue (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+코드의 내용)
				*/
				public void setIT2VALUEValue(String IT2VALUEValue) {
					this.IT2VALUEValue = IT2VALUEValue;
				}
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+코드의 내용을 가져온다.
				 *  @return   String  IT2VALUEValue (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+코드의 내용)
				*/
				public String getIT2VALUEValue() {
					return hideNull(IT2VALUEValue);
				}
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME{IT2VALUE}+>+,STRING || +<+$SQL_ITJAVANAME{IT2VALUE}+>+,X8) #{		
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 저장한다.
				 *  @param   String  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
				*/
				public void setIT2VALUE(String IT2VALUE) {
					this.IT2VALUE = IT2VALUE;
				}
				/**  +<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+(을)를 가져온다.
				 *  @return   String  IT2VALUE (+<+$SQL_ITJAVANAME_TABLE_COMMENTS{IT2VALUE}+>+)
				*/
				public String getIT2VALUE() {
					return hideNull(IT2VALUE);
				}
			}#
			IFEQUAL(+<+$SQL_ITJAVANAME_STG_PARM_JAVA_DURATION{IT2VALUE}+>+,YES ) #{		
				public String getFormattedDurationIT2VALUE() {
					return hideNull(StringHandler.formatDouble((getIT2VALUE() / (double)1000000), patternDuration));
				}
			}#
		}#
	}#
	+>>+
	// ITJAVANAME 항목 set, get함수 생성 끝

}
