FileName : struct.h

ITERATE %gColStruct +<<+ ITKEY  ITVALUE
+<+$gColStruct{ITKEY}{Struct}+>+
+>>+



FileName : parser.c
Set : iterate_comments = ON
int parser(unsigned char *p);
ITERATE %gParserRow +<<+ ITKEY  ITVALUE
int parser_levelITKEY(int FromStatus, unsigned char *p);
+>>+

ITERATE -V%gColShortStructName +<<+ ITKEY  ITVALUE
#define PARSER_RETURN_ITKEY     ITVALUE
				// Structure Index (It will be returned) : ITKEY [  +<+$gColShortStructName{ITKEY}+>+  ]
+>>+

ITERATE V%gLongDefine{Name} +<<+ ITKEY  ITVALUE
#define ITKEY   +<+$gLongDefine{Name}{ITKEY}+>+
+>>+

int parser(unsigned char *p){
	return parser_level+<+$gParserMinY+>+(-1,p);
}

ITERATE %gParserRow +<<+ ITKEY  ITVALUE
int parser_levelITKEY(int FromStatus, unsigned char *p){
	//  unsigned char / short / int value = (unsigned char / short / int) (p + LENGTH)
	unsigned char *pcvalue; pcvalue = (unsigned char *) (p+ITKEY);
	short *psvalue; psvalue = (short *) (p+ITKEY);
	int *pivalue; pivalue = (int *) (p+ITKEY);

	IFEQUAL( ITKEY eq +<+$gParserMinY+>+){
		if(0){
		}
		ITERATE %gParserRow{ITKEY} +<<+ IT2KEY  IT2VALUE
		else if(
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{Len} eq 1){ *pcvalue == (unsigned char) +<+$gParserRow{ITKEY}{IT2KEY}{Value}+>+ }
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{Len} eq 2){ *psvalue == (short) +<+$gParserRow{ITKEY}{IT2KEY}{Value}+>+ }
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{Len} eq 4){ *pivalue == (int) +<+$gParserRow{ITKEY}{IT2KEY}{Value}+>+ }
		){
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{ShortStruct} eq "O"){
				return +<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+ ;         // X : IT2KEY, Y : ITKEY
			}
			IFNOTEQUAL($gParserRow{ITKEY}{IT2KEY}{ShortStruct} eq "O"){
				return parser_level+<+$gParserRow{ITKEY}{IT2KEY}{NextY}+>+(+<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+, p );  // X : IT2KEY, Y : ITKEY
			}
		}
		+>>+
	}
	IFNOTEQUAL( ITKEY eq +<+$gParserMinY+>+){
		if(0){
		}
		ITERATE %gParserRow{ITKEY} +<<+ IT2KEY  IT2VALUE
		else if( (FromStatus == +<+$gParserRow{$gParserRow{ITKEY}{IT2KEY}{ParserParentY}}{$gParserRow{ITKEY}{IT2KEY}{ParserParentX}}{LongDefine}+>+)  && 
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{Len} eq 1){ (*pcvalue == +<+$gParserRow{ITKEY}{IT2KEY}{Value}+>+) }
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{Len} eq 2){ (*psvalue == +<+$gParserRow{ITKEY}{IT2KEY}{Value}+>+) }
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{Len} eq 4){ (*pivalue == +<+$gParserRow{ITKEY}{IT2KEY}{Value}+>+) }
		){
			//FromStatus == $gParserRow{$gParserRow{ITKEY}{IT2KEY}{ParserParentY}}{$gParserRow{ITKEY}{IT2KEY}{ParserParentX}}{LongDefine}
			//FromStatus == $gParserRow{+<+$gParserRow{ITKEY}{IT2KEY}{ParserParentY}+>+}{+<+$gParserRow{ITKEY}{IT2KEY}{ParserParentX}+>+}{LongDefine}
			//FromStatus == +<+$gParserRow{$gParserRow{ITKEY}{IT2KEY}{ParserParentY}}{$gParserRow{ITKEY}{IT2KEY}{ParserParentX}}{LongDefine}+>+
			//FromStatus == +<+$gParserRow{+<+$gParserRow{ITKEY}{IT2KEY}{ParserParentY}+>+}{+<+$gParserRow{ITKEY}{IT2KEY}{ParserParentX}+>+}{LongDefine}+>+
			IFEQUAL($gParserRow{ITKEY}{IT2KEY}{ShortStruct} eq "O"){
				return PARSER_RETURN_+<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+ ;         // X : IT2KEY, Y : ITKEY
				// Structure Index : +<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+ [  +<+$gColShortStructName{+<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+}+>+  ]
			}
			IFNOTEQUAL($gParserRow{ITKEY}{IT2KEY}{ShortStruct} eq "O"){
				//return parser_level$gParserRow{ITKEY}{IT2KEY}{NextY}($gParserRow{ITKEY}{IT2KEY}{LongDefine}, p + 1);
				return parser_level+<+$gParserRow{ITKEY}{IT2KEY}{NextY}+>+(+<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+, p );  // X : IT2KEY, Y : ITKEY
				// Structure Index : +<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+ [  +<+$gColShortStructName{+<+$gParserRow{ITKEY}{IT2KEY}{LongDefine}+>+}+>+  ]
			}
		}
		+>>+
	}

	return -1;
}

+>>+


FileName : table_protocol.html
Set : iterate_comments = OFF

<!doctype html>
<html lang="ko">
<head>
<meta charset="utf-8">
<title>Table</title>
</head> 
<STYLE TYPE="text/css">
table {font-size: 75%;}
</STYLE>
<body>
 <h1>Data Table Caption</h1>
  <table border="1">


ITERATE +gRow +<<+ ITKEY  ITVALUE
	<tr height=35px><td>ITKEY</td>
	ITERATE %gRow{ITKEY} +<<+ IT2KEY  IT2VALUE
		<!-- itkey ITKEY , it2key IT2KEY (+<+$gRow{ITKEY}{IT2KEY}{Len}+>+ >= 1) && (+<+$gRow{ITKEY}{IT2KEY}{Span}+>+ >= 1) -->
		IFEQUAL( (+<+$gRow{ITKEY}{IT2KEY}{Len}+>+ >= 1) && (+<+$gRow{ITKEY}{IT2KEY}{Span}+>+ >= 1)) {
			<td align=center border=1 bgcolor=beige rowspan="+<+$gRow{ITKEY}{IT2KEY}{Len}+>+"  colspan="+<+$gRow{ITKEY}{IT2KEY}{Span}+>+" >
				+<+$gRow{ITKEY}{IT2KEY}{Value}+>+ <br> +<+$gRow{ITKEY}{IT2KEY}{Description}+>+
			</td>
		}	
		IFEQUAL( (+<+$gRow{ITKEY}{IT2KEY}{Len}+>+ >= 1) && (+<+$gRow{ITKEY}{IT2KEY}{Span}+>+ == -1)){
			<td border=0 
			IFEQUAL(+<+$gRow{ITKEY}{IT2KEY}{Len}+>+ >= 1){
				rowspan="+<+$gRow{ITKEY}{IT2KEY}{Len}+>+"
			}
			>    </td>
		}	
	+>>+
	</tr>
+>>+



  </table>
  </body>
  </html>
