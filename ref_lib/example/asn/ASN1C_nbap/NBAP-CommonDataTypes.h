/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.83, Date: 19-Mar-2007.
 */
#ifndef NBAP_COMMONDATATYPES_H
#define NBAP_COMMONDATATYPES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "asn1per.h"

/**************************************************************/
/*                                                            */
/*  ProcedureCode                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 ProcedureCode;

EXTERN int asn1PE_ProcedureCode (ASN1CTXT* pctxt, ProcedureCode value);

EXTERN int asn1PD_ProcedureCode (ASN1CTXT* pctxt, ProcedureCode* pvalue);

EXTERN void asn1Print_ProcedureCode
   (const char* name, ProcedureCode* pvalue);

EXTERN ProcedureCode* asn1Test_ProcedureCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ProcedureID_ddMode                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   tdd = 0,
   fdd = 1,
   common_2 = 2
} ProcedureID_ddMode_Root;

typedef OSUINT32 ProcedureID_ddMode;

EXTERN int asn1PE_ProcedureID_ddMode (ASN1CTXT* pctxt, ProcedureID_ddMode value);

EXTERN int asn1PD_ProcedureID_ddMode (ASN1CTXT* pctxt, ProcedureID_ddMode* pvalue);

EXTERN void asn1Print_ProcedureID_ddMode
   (const char* name, ProcedureID_ddMode* pvalue);

EXTERN ProcedureID_ddMode* asn1Test_ProcedureID_ddMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ProcedureID                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ProcedureID {
   ProcedureCode procedureCode;
   ProcedureID_ddMode ddMode;
} ProcedureID;

EXTERN int asn1PE_ProcedureID (ASN1CTXT* pctxt, ProcedureID* pvalue);

EXTERN int asn1PD_ProcedureID (ASN1CTXT* pctxt, ProcedureID* pvalue);

EXTERN void asn1Print_ProcedureID
   (const char* name, ProcedureID* pvalue);

EXTERN ProcedureID* asn1Test_ProcedureID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Criticality                                               */
/*                                                            */
/**************************************************************/

typedef enum {
   reject = 0,
   ignore = 1,
   notify = 2
} Criticality_Root;

typedef OSUINT32 Criticality;

EXTERN int asn1PE_Criticality (ASN1CTXT* pctxt, Criticality value);

EXTERN int asn1PD_Criticality (ASN1CTXT* pctxt, Criticality* pvalue);

EXTERN void asn1Print_Criticality
   (const char* name, Criticality* pvalue);

EXTERN Criticality* asn1Test_Criticality
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageDiscriminator                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   common_1 = 0,
   dedicated = 1
} MessageDiscriminator_Root;

typedef OSUINT32 MessageDiscriminator;

EXTERN int asn1PE_MessageDiscriminator (ASN1CTXT* pctxt, MessageDiscriminator value);

EXTERN int asn1PD_MessageDiscriminator (ASN1CTXT* pctxt, MessageDiscriminator* pvalue);

EXTERN void asn1Print_MessageDiscriminator
   (const char* name, MessageDiscriminator* pvalue);

EXTERN MessageDiscriminator* asn1Test_MessageDiscriminator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransactionID                                             */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TransactionID_shortTransActionId 1
#define T_TransactionID_longTransActionId 2

typedef struct EXTERN TransactionID {
   int t;
   union {
      /* t = 1 */
      OSUINT8 shortTransActionId;
      /* t = 2 */
      OSUINT16 longTransActionId;
   } u;
} TransactionID;

EXTERN int asn1PE_TransactionID (ASN1CTXT* pctxt, TransactionID* pvalue);

EXTERN int asn1PD_TransactionID (ASN1CTXT* pctxt, TransactionID* pvalue);

EXTERN void asn1Print_TransactionID
   (const char* name, TransactionID* pvalue);

EXTERN TransactionID* asn1Test_TransactionID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ProtocolIE_ID                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 ProtocolIE_ID;

EXTERN int asn1PE_ProtocolIE_ID (ASN1CTXT* pctxt, ProtocolIE_ID value);

EXTERN int asn1PD_ProtocolIE_ID (ASN1CTXT* pctxt, ProtocolIE_ID* pvalue);

EXTERN void asn1Print_ProtocolIE_ID
   (const char* name, ProtocolIE_ID* pvalue);

EXTERN ProtocolIE_ID* asn1Test_ProtocolIE_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PrivateIE_ID                                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_PrivateIE_ID_local            1
#define T_PrivateIE_ID_global           2

typedef struct EXTERN PrivateIE_ID {
   int t;
   union {
      /* t = 1 */
      OSUINT16 local;
      /* t = 2 */
      ASN1OBJID *global;
   } u;
} PrivateIE_ID;

EXTERN int asn1PE_PrivateIE_ID (ASN1CTXT* pctxt, PrivateIE_ID* pvalue);

EXTERN int asn1PD_PrivateIE_ID (ASN1CTXT* pctxt, PrivateIE_ID* pvalue);

EXTERN void asn1Print_PrivateIE_ID
   (const char* name, PrivateIE_ID* pvalue);

EXTERN PrivateIE_ID* asn1Test_PrivateIE_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TriggeringMessage                                         */
/*                                                            */
/**************************************************************/

typedef enum {
   initiating_message = 0,
   successful_outcome = 1,
   unsuccessfull_outcome = 2,
   outcome = 3
} TriggeringMessage_Root;

typedef OSUINT32 TriggeringMessage;

EXTERN int asn1PE_TriggeringMessage (ASN1CTXT* pctxt, TriggeringMessage value);

EXTERN int asn1PD_TriggeringMessage (ASN1CTXT* pctxt, TriggeringMessage* pvalue);

EXTERN void asn1Print_TriggeringMessage
   (const char* name, TriggeringMessage* pvalue);

EXTERN TriggeringMessage* asn1Test_TriggeringMessage
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Presence                                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   optional = 0,
   conditional = 1,
   mandatory = 2
} Presence_Root;

typedef OSUINT32 Presence;

EXTERN int asn1PE_Presence (ASN1CTXT* pctxt, Presence value);

EXTERN int asn1PD_Presence (ASN1CTXT* pctxt, Presence* pvalue);

EXTERN void asn1Print_Presence
   (const char* name, Presence* pvalue);

EXTERN Presence* asn1Test_Presence
   (ASN1CTXT* pctxt);

/* Value definitions */

#define ASN1V_maxPrivateIEs 65535
#define ASN1V_maxProtocolExtensions 65535
#define ASN1V_maxProtocolIEs 65535

#ifdef __cplusplus
}
#endif

#endif
