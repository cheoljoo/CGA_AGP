/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 5.83, Date: 19-Mar-2007.
 */
#ifndef NBAP_IES_H
#define NBAP_IES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "asn1per.h"
#include "NBAP-CommonDataTypes.h"
#include "NBAP-Containers.h"

/**************************************************************/
/*                                                            */
/*  CommonPhysicalChannelID                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CommonPhysicalChannelID;

EXTERN int asn1PE_CommonPhysicalChannelID (ASN1CTXT* pctxt, CommonPhysicalChannelID value);

EXTERN int asn1PD_CommonPhysicalChannelID (ASN1CTXT* pctxt, CommonPhysicalChannelID* pvalue);

EXTERN void asn1Print_CommonPhysicalChannelID
   (const char* name, CommonPhysicalChannelID* pvalue);

EXTERN CommonPhysicalChannelID* asn1Test_CommonPhysicalChannelID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_S_CCPCH_Offset                                        */
/*                                                            */
/**************************************************************/

typedef OSUINT8 FDD_S_CCPCH_Offset;

EXTERN int asn1PE_FDD_S_CCPCH_Offset (ASN1CTXT* pctxt, FDD_S_CCPCH_Offset value);

EXTERN int asn1PD_FDD_S_CCPCH_Offset (ASN1CTXT* pctxt, FDD_S_CCPCH_Offset* pvalue);

EXTERN void asn1Print_FDD_S_CCPCH_Offset
   (const char* name, FDD_S_CCPCH_Offset* pvalue);

EXTERN FDD_S_CCPCH_Offset* asn1Test_FDD_S_CCPCH_Offset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_ScramblingCode                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DL_ScramblingCode;

EXTERN int asn1PE_DL_ScramblingCode (ASN1CTXT* pctxt, DL_ScramblingCode value);

EXTERN int asn1PD_DL_ScramblingCode (ASN1CTXT* pctxt, DL_ScramblingCode* pvalue);

EXTERN void asn1Print_DL_ScramblingCode
   (const char* name, DL_ScramblingCode* pvalue);

EXTERN DL_ScramblingCode* asn1Test_DL_ScramblingCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_DL_ChannelisationCodeNumber                           */
/*                                                            */
/**************************************************************/

typedef OSUINT16 FDD_DL_ChannelisationCodeNumber;

EXTERN int asn1PE_FDD_DL_ChannelisationCodeNumber (ASN1CTXT* pctxt, FDD_DL_ChannelisationCodeNumber value);

EXTERN int asn1PD_FDD_DL_ChannelisationCodeNumber (ASN1CTXT* pctxt, FDD_DL_ChannelisationCodeNumber* pvalue);

EXTERN void asn1Print_FDD_DL_ChannelisationCodeNumber
   (const char* name, FDD_DL_ChannelisationCodeNumber* pvalue);

EXTERN FDD_DL_ChannelisationCodeNumber* asn1Test_FDD_DL_ChannelisationCodeNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCS_CTFC                                                 */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TFCS_CTFC_ctfc2bit            1
#define T_TFCS_CTFC_ctfc4bit            2
#define T_TFCS_CTFC_ctfc6bit            3
#define T_TFCS_CTFC_ctfc8bit            4
#define T_TFCS_CTFC_ctfc12bit           5
#define T_TFCS_CTFC_ctfc16bit           6
#define T_TFCS_CTFC_ctfcmaxbit          7

typedef struct EXTERN TFCS_CTFC {
   int t;
   union {
      /* t = 1 */
      OSUINT8 ctfc2bit;
      /* t = 2 */
      OSUINT8 ctfc4bit;
      /* t = 3 */
      OSUINT8 ctfc6bit;
      /* t = 4 */
      OSUINT8 ctfc8bit;
      /* t = 5 */
      OSUINT16 ctfc12bit;
      /* t = 6 */
      OSUINT16 ctfc16bit;
      /* t = 7 */
      OSUINT32 ctfcmaxbit;
   } u;
} TFCS_CTFC;

EXTERN int asn1PE_TFCS_CTFC (ASN1CTXT* pctxt, TFCS_CTFC* pvalue);

EXTERN int asn1PD_TFCS_CTFC (ASN1CTXT* pctxt, TFCS_CTFC* pvalue);

EXTERN void asn1Print_TFCS_CTFC
   (const char* name, TFCS_CTFC* pvalue);

EXTERN TFCS_CTFC* asn1Test_TFCS_CTFC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BetaCD                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 BetaCD;

EXTERN int asn1PE_BetaCD (ASN1CTXT* pctxt, BetaCD value);

EXTERN int asn1PD_BetaCD (ASN1CTXT* pctxt, BetaCD* pvalue);

EXTERN void asn1Print_BetaCD
   (const char* name, BetaCD* pvalue);

EXTERN BetaCD* asn1Test_BetaCD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatCombination_Beta_signalledGainFactors_gai  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   BetaCD betaC;
   BetaCD betaD;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd;

EXTERN int asn1PE_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd (ASN1CTXT* pctxt, TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd* pvalue);

EXTERN int asn1PD_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd (ASN1CTXT* pctxt, TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd* pvalue);

EXTERN void asn1Print_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd
   (const char* name, TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd* pvalue);

EXTERN TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd* asn1Test_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatCombination_Beta_signalledGainFactors_gai  */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd 1
#define T_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_tdd 2
#define T_TransportFormatCombination_Beta_signalledGainFactors_gainFactor_extElem1 3

typedef struct EXTERN TransportFormatCombination_Beta_signalledGainFactors_gainFactor {
   int t;
   union {
      /* t = 1 */
      TransportFormatCombination_Beta_signalledGainFactors_gainFactor_fdd *fdd;
      /* t = 2 */
      BetaCD tdd;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TransportFormatCombination_Beta_signalledGainFactors_gainFactor;

EXTERN int asn1PE_TransportFormatCombination_Beta_signalledGainFactors_gainFactor (ASN1CTXT* pctxt, TransportFormatCombination_Beta_signalledGainFactors_gainFactor* pvalue);

EXTERN int asn1PD_TransportFormatCombination_Beta_signalledGainFactors_gainFactor (ASN1CTXT* pctxt, TransportFormatCombination_Beta_signalledGainFactors_gainFactor* pvalue);

EXTERN void asn1Print_TransportFormatCombination_Beta_signalledGainFactors_gainFactor
   (const char* name, TransportFormatCombination_Beta_signalledGainFactors_gainFactor* pvalue);

EXTERN TransportFormatCombination_Beta_signalledGainFactors_gainFactor* asn1Test_TransportFormatCombination_Beta_signalledGainFactors_gainFactor
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RefTFCNumber                                              */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RefTFCNumber;

EXTERN int asn1PE_RefTFCNumber (ASN1CTXT* pctxt, RefTFCNumber value);

EXTERN int asn1PD_RefTFCNumber (ASN1CTXT* pctxt, RefTFCNumber* pvalue);

EXTERN void asn1Print_RefTFCNumber
   (const char* name, RefTFCNumber* pvalue);

EXTERN RefTFCNumber* asn1Test_RefTFCNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatCombination_Beta_signalledGainFactors      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransportFormatCombination_Beta_signalledGainFactors {
   struct {
      unsigned refTFCNumberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportFormatCombination_Beta_signalledGainFactors_gainFactor gainFactor;
   RefTFCNumber refTFCNumber;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransportFormatCombination_Beta_signalledGainFactors;

EXTERN int asn1PE_TransportFormatCombination_Beta_signalledGainFactors (ASN1CTXT* pctxt, TransportFormatCombination_Beta_signalledGainFactors* pvalue);

EXTERN int asn1PD_TransportFormatCombination_Beta_signalledGainFactors (ASN1CTXT* pctxt, TransportFormatCombination_Beta_signalledGainFactors* pvalue);

EXTERN void asn1Print_TransportFormatCombination_Beta_signalledGainFactors
   (const char* name, TransportFormatCombination_Beta_signalledGainFactors* pvalue);

EXTERN TransportFormatCombination_Beta_signalledGainFactors* asn1Test_TransportFormatCombination_Beta_signalledGainFactors
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatCombination_Beta                           */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TransportFormatCombination_Beta_signalledGainFactors 1
#define T_TransportFormatCombination_Beta_computedGainFactors 2
#define T_TransportFormatCombination_Beta_extElem1 3

typedef struct EXTERN TransportFormatCombination_Beta {
   int t;
   union {
      /* t = 1 */
      TransportFormatCombination_Beta_signalledGainFactors *signalledGainFactors;
      /* t = 2 */
      RefTFCNumber computedGainFactors;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TransportFormatCombination_Beta;

EXTERN int asn1PE_TransportFormatCombination_Beta (ASN1CTXT* pctxt, TransportFormatCombination_Beta* pvalue);

EXTERN int asn1PD_TransportFormatCombination_Beta (ASN1CTXT* pctxt, TransportFormatCombination_Beta* pvalue);

EXTERN void asn1Print_TransportFormatCombination_Beta
   (const char* name, TransportFormatCombination_Beta* pvalue);

EXTERN TransportFormatCombination_Beta* asn1Test_TransportFormatCombination_Beta
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCS_TFCSList_element                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TFCS_TFCSList_element {
   struct {
      unsigned tFC_BetaPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TFCS_CTFC cTFC;
   TransportFormatCombination_Beta tFC_Beta;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TFCS_TFCSList_element;

EXTERN int asn1PE_TFCS_TFCSList_element (ASN1CTXT* pctxt, TFCS_TFCSList_element* pvalue);

EXTERN int asn1PD_TFCS_TFCSList_element (ASN1CTXT* pctxt, TFCS_TFCSList_element* pvalue);

EXTERN void asn1Print_TFCS_TFCSList_element
   (const char* name, TFCS_TFCSList_element* pvalue);

EXTERN TFCS_TFCSList_element* asn1Test_TFCS_TFCSList_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCS_TFCSList                                             */
/*                                                            */
/**************************************************************/

/* List of TFCS_TFCSList_element */
typedef Asn1RTDList TFCS_TFCSList;

EXTERN int asn1PE_TFCS_TFCSList (ASN1CTXT* pctxt, TFCS_TFCSList* pvalue);

EXTERN int asn1PD_TFCS_TFCSList (ASN1CTXT* pctxt, TFCS_TFCSList* pvalue);

EXTERN void asn1Print_TFCS_TFCSList
   (const char* name, TFCS_TFCSList* pvalue);

EXTERN TFCS_TFCSList* asn1Test_TFCS_TFCSList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCS_tFCSvalues                                           */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TFCS_tFCSvalues_no_Split_in_TFCI 1
#define T_TFCS_tFCSvalues_not_Used_split_in_TFCI 2
#define T_TFCS_tFCSvalues_extElem1      3

typedef struct EXTERN TFCS_tFCSvalues {
   int t;
   union {
      /* t = 1 */
      TFCS_TFCSList *no_Split_in_TFCI;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TFCS_tFCSvalues;

EXTERN int asn1PE_TFCS_tFCSvalues (ASN1CTXT* pctxt, TFCS_tFCSvalues* pvalue);

EXTERN int asn1PD_TFCS_tFCSvalues (ASN1CTXT* pctxt, TFCS_tFCSvalues* pvalue);

EXTERN void asn1Print_TFCS_tFCSvalues
   (const char* name, TFCS_tFCSvalues* pvalue);

EXTERN TFCS_tFCSvalues* asn1Test_TFCS_tFCSvalues
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCS                                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TFCS {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TFCS_tFCSvalues tFCSvalues;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TFCS;

EXTERN int asn1PE_TFCS (ASN1CTXT* pctxt, TFCS* pvalue);

EXTERN int asn1PD_TFCS (ASN1CTXT* pctxt, TFCS* pvalue);

EXTERN void asn1Print_TFCS
   (const char* name, TFCS* pvalue);

EXTERN TFCS* asn1Test_TFCS
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SecondaryCCPCH_SlotFormat                                 */
/*                                                            */
/**************************************************************/

typedef OSINT32 SecondaryCCPCH_SlotFormat;

EXTERN int asn1PE_SecondaryCCPCH_SlotFormat (ASN1CTXT* pctxt, SecondaryCCPCH_SlotFormat value);

EXTERN int asn1PD_SecondaryCCPCH_SlotFormat (ASN1CTXT* pctxt, SecondaryCCPCH_SlotFormat* pvalue);

EXTERN void asn1Print_SecondaryCCPCH_SlotFormat
   (const char* name, SecondaryCCPCH_SlotFormat* pvalue);

EXTERN SecondaryCCPCH_SlotFormat* asn1Test_SecondaryCCPCH_SlotFormat
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCI_Presence                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   present = 0,
   not_present = 1
} TFCI_Presence_Root;

typedef OSUINT32 TFCI_Presence;

EXTERN int asn1PE_TFCI_Presence (ASN1CTXT* pctxt, TFCI_Presence value);

EXTERN int asn1PD_TFCI_Presence (ASN1CTXT* pctxt, TFCI_Presence* pvalue);

EXTERN void asn1Print_TFCI_Presence
   (const char* name, TFCI_Presence* pvalue);

EXTERN TFCI_Presence* asn1Test_TFCI_Presence
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MultiplexingPosition                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   fixed = 0,
   flexible = 1
} MultiplexingPosition_Root;

typedef OSUINT32 MultiplexingPosition;

EXTERN int asn1PE_MultiplexingPosition (ASN1CTXT* pctxt, MultiplexingPosition value);

EXTERN int asn1PD_MultiplexingPosition (ASN1CTXT* pctxt, MultiplexingPosition* pvalue);

EXTERN void asn1Print_MultiplexingPosition
   (const char* name, MultiplexingPosition* pvalue);

EXTERN MultiplexingPosition* asn1Test_MultiplexingPosition
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PowerOffset                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PowerOffset;

EXTERN int asn1PE_PowerOffset (ASN1CTXT* pctxt, PowerOffset value);

EXTERN int asn1PD_PowerOffset (ASN1CTXT* pctxt, PowerOffset* pvalue);

EXTERN void asn1Print_PowerOffset
   (const char* name, PowerOffset* pvalue);

EXTERN PowerOffset* asn1Test_PowerOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  STTD_Indicator                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   active_3 = 0,
   inactive_3 = 1
} STTD_Indicator_Root;

typedef OSUINT32 STTD_Indicator;

EXTERN int asn1PE_STTD_Indicator (ASN1CTXT* pctxt, STTD_Indicator value);

EXTERN int asn1PD_STTD_Indicator (ASN1CTXT* pctxt, STTD_Indicator* pvalue);

EXTERN void asn1Print_STTD_Indicator
   (const char* name, STTD_Indicator* pvalue);

EXTERN STTD_Indicator* asn1Test_STTD_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ScramblingCodeNumber                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT8 ScramblingCodeNumber;

EXTERN int asn1PE_ScramblingCodeNumber (ASN1CTXT* pctxt, ScramblingCodeNumber value);

EXTERN int asn1PD_ScramblingCodeNumber (ASN1CTXT* pctxt, ScramblingCodeNumber* pvalue);

EXTERN void asn1Print_ScramblingCodeNumber
   (const char* name, ScramblingCodeNumber* pvalue);

EXTERN ScramblingCodeNumber* asn1Test_ScramblingCodeNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PreambleSignatures                                        */
/*                                                            */
/**************************************************************/

/* Named bit constants */

#define PreambleSignatures_signature15                     0
#define PreambleSignatures_signature14                     1
#define PreambleSignatures_signature13                     2
#define PreambleSignatures_signature12                     3
#define PreambleSignatures_signature11                     4
#define PreambleSignatures_signature10                     5
#define PreambleSignatures_signature9                      6
#define PreambleSignatures_signature8                      7
#define PreambleSignatures_signature7                      8
#define PreambleSignatures_signature6                      9
#define PreambleSignatures_signature5                      10
#define PreambleSignatures_signature4                      11
#define PreambleSignatures_signature3                      12
#define PreambleSignatures_signature2                      13
#define PreambleSignatures_signature1                      14
#define PreambleSignatures_signature0                      15

typedef struct EXTERN PreambleSignatures {
   OSUINT32  numbits;
   OSOCTET data[2];
} PreambleSignatures;

EXTERN int asn1PE_PreambleSignatures (ASN1CTXT* pctxt, PreambleSignatures* pvalue);

EXTERN int asn1PD_PreambleSignatures (ASN1CTXT* pctxt, PreambleSignatures* pvalue);

EXTERN void asn1Print_PreambleSignatures
   (const char* name, PreambleSignatures* pvalue);

EXTERN PreambleSignatures* asn1Test_PreambleSignatures
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RACH_SlotFormat                                           */
/*                                                            */
/**************************************************************/

typedef enum {
   v0_2 = 0,
   v1_3 = 1,
   v2_6 = 2,
   v3_1 = 3
} RACH_SlotFormat_Root;

typedef OSUINT32 RACH_SlotFormat;

EXTERN int asn1PE_RACH_SlotFormat (ASN1CTXT* pctxt, RACH_SlotFormat value);

EXTERN int asn1PD_RACH_SlotFormat (ASN1CTXT* pctxt, RACH_SlotFormat* pvalue);

EXTERN void asn1Print_RACH_SlotFormat
   (const char* name, RACH_SlotFormat* pvalue);

EXTERN RACH_SlotFormat* asn1Test_RACH_SlotFormat
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RACH_SubChannelNumbers                                    */
/*                                                            */
/**************************************************************/

/* Named bit constants */

#define RACH_SubChannelNumbers_subCh11                         0
#define RACH_SubChannelNumbers_subCh10                         1
#define RACH_SubChannelNumbers_subCh9                          2
#define RACH_SubChannelNumbers_subCh8                          3
#define RACH_SubChannelNumbers_subCh7                          4
#define RACH_SubChannelNumbers_subCh6                          5
#define RACH_SubChannelNumbers_subCh5                          6
#define RACH_SubChannelNumbers_subCh4                          7
#define RACH_SubChannelNumbers_subCh3                          8
#define RACH_SubChannelNumbers_subCh2                          9
#define RACH_SubChannelNumbers_subCh1                          10
#define RACH_SubChannelNumbers_subCh0                          11

typedef struct EXTERN RACH_SubChannelNumbers {
   OSUINT32  numbits;
   OSOCTET data[2];
} RACH_SubChannelNumbers;

EXTERN int asn1PE_RACH_SubChannelNumbers (ASN1CTXT* pctxt, RACH_SubChannelNumbers* pvalue);

EXTERN int asn1PD_RACH_SubChannelNumbers (ASN1CTXT* pctxt, RACH_SubChannelNumbers* pvalue);

EXTERN void asn1Print_RACH_SubChannelNumbers
   (const char* name, RACH_SubChannelNumbers* pvalue);

EXTERN RACH_SubChannelNumbers* asn1Test_RACH_SubChannelNumbers
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PunctureLimit                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PunctureLimit;

EXTERN int asn1PE_PunctureLimit (ASN1CTXT* pctxt, PunctureLimit value);

EXTERN int asn1PD_PunctureLimit (ASN1CTXT* pctxt, PunctureLimit* pvalue);

EXTERN void asn1Print_PunctureLimit
   (const char* name, PunctureLimit* pvalue);

EXTERN PunctureLimit* asn1Test_PunctureLimit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PreambleThreshold                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PreambleThreshold;

EXTERN int asn1PE_PreambleThreshold (ASN1CTXT* pctxt, PreambleThreshold value);

EXTERN int asn1PD_PreambleThreshold (ASN1CTXT* pctxt, PreambleThreshold* pvalue);

EXTERN void asn1Print_PreambleThreshold
   (const char* name, PreambleThreshold* pvalue);

EXTERN PreambleThreshold* asn1Test_PreambleThreshold
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AICH_TransmissionTiming                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   v0 = 0,
   v1 = 1
} AICH_TransmissionTiming_Root;

typedef OSUINT32 AICH_TransmissionTiming;

EXTERN int asn1PE_AICH_TransmissionTiming (ASN1CTXT* pctxt, AICH_TransmissionTiming value);

EXTERN int asn1PD_AICH_TransmissionTiming (ASN1CTXT* pctxt, AICH_TransmissionTiming* pvalue);

EXTERN void asn1Print_AICH_TransmissionTiming
   (const char* name, AICH_TransmissionTiming* pvalue);

EXTERN AICH_TransmissionTiming* asn1Test_AICH_TransmissionTiming
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AICH_Power                                                */
/*                                                            */
/**************************************************************/

typedef OSINT8 AICH_Power;

EXTERN int asn1PE_AICH_Power (ASN1CTXT* pctxt, AICH_Power value);

EXTERN int asn1PD_AICH_Power (ASN1CTXT* pctxt, AICH_Power* pvalue);

EXTERN void asn1Print_AICH_Power
   (const char* name, AICH_Power* pvalue);

EXTERN AICH_Power* asn1Test_AICH_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonTransportChannelID                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CommonTransportChannelID;

EXTERN int asn1PE_CommonTransportChannelID (ASN1CTXT* pctxt, CommonTransportChannelID value);

EXTERN int asn1PD_CommonTransportChannelID (ASN1CTXT* pctxt, CommonTransportChannelID* pvalue);

EXTERN void asn1Print_CommonTransportChannelID
   (const char* name, CommonTransportChannelID* pvalue);

EXTERN CommonTransportChannelID* asn1Test_CommonTransportChannelID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_NrOfTransportBlocks                    */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TransportFormatSet_NrOfTransportBlocks;

EXTERN int asn1PE_TransportFormatSet_NrOfTransportBlocks (ASN1CTXT* pctxt, TransportFormatSet_NrOfTransportBlocks value);

EXTERN int asn1PD_TransportFormatSet_NrOfTransportBlocks (ASN1CTXT* pctxt, TransportFormatSet_NrOfTransportBlocks* pvalue);

EXTERN void asn1Print_TransportFormatSet_NrOfTransportBlocks
   (const char* name, TransportFormatSet_NrOfTransportBlocks* pvalue);

EXTERN TransportFormatSet_NrOfTransportBlocks* asn1Test_TransportFormatSet_NrOfTransportBlocks
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_TransportBlockSize                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TransportFormatSet_TransportBlockSize;

EXTERN int asn1PE_TransportFormatSet_TransportBlockSize (ASN1CTXT* pctxt, TransportFormatSet_TransportBlockSize value);

EXTERN int asn1PD_TransportFormatSet_TransportBlockSize (ASN1CTXT* pctxt, TransportFormatSet_TransportBlockSize* pvalue);

EXTERN void asn1Print_TransportFormatSet_TransportBlockSize
   (const char* name, TransportFormatSet_TransportBlockSize* pvalue);

EXTERN TransportFormatSet_TransportBlockSize* asn1Test_TransportFormatSet_TransportBlockSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_TransmissionTimeIntervalDynamic        */
/*                                                            */
/**************************************************************/

typedef enum {
   msec_10 = 0,
   msec_20 = 1,
   msec_40 = 2,
   msec_80 = 3
} TransportFormatSet_TransmissionTimeIntervalDynamic_Root;

typedef OSUINT32 TransportFormatSet_TransmissionTimeIntervalDynamic;

EXTERN int asn1PE_TransportFormatSet_TransmissionTimeIntervalDynamic (ASN1CTXT* pctxt, TransportFormatSet_TransmissionTimeIntervalDynamic value);

EXTERN int asn1PD_TransportFormatSet_TransmissionTimeIntervalDynamic (ASN1CTXT* pctxt, TransportFormatSet_TransmissionTimeIntervalDynamic* pvalue);

EXTERN void asn1Print_TransportFormatSet_TransmissionTimeIntervalDynamic
   (const char* name, TransportFormatSet_TransmissionTimeIntervalDynamic* pvalue);

EXTERN TransportFormatSet_TransmissionTimeIntervalDynamic* asn1Test_TransportFormatSet_TransmissionTimeIntervalDynamic
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmissionTimeIntervalInformation_element               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransmissionTimeIntervalInformation_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportFormatSet_TransmissionTimeIntervalDynamic transmissionTimeInterval;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransmissionTimeIntervalInformation_element;

EXTERN int asn1PE_TransmissionTimeIntervalInformation_element (ASN1CTXT* pctxt, TransmissionTimeIntervalInformation_element* pvalue);

EXTERN int asn1PD_TransmissionTimeIntervalInformation_element (ASN1CTXT* pctxt, TransmissionTimeIntervalInformation_element* pvalue);

EXTERN void asn1Print_TransmissionTimeIntervalInformation_element
   (const char* name, TransmissionTimeIntervalInformation_element* pvalue);

EXTERN TransmissionTimeIntervalInformation_element* asn1Test_TransmissionTimeIntervalInformation_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmissionTimeIntervalInformation                       */
/*                                                            */
/**************************************************************/

/* List of TransmissionTimeIntervalInformation_element */
typedef Asn1RTDList TransmissionTimeIntervalInformation;

EXTERN int asn1PE_TransmissionTimeIntervalInformation (ASN1CTXT* pctxt, TransmissionTimeIntervalInformation* pvalue);

EXTERN int asn1PD_TransmissionTimeIntervalInformation (ASN1CTXT* pctxt, TransmissionTimeIntervalInformation* pvalue);

EXTERN void asn1Print_TransmissionTimeIntervalInformation
   (const char* name, TransmissionTimeIntervalInformation* pvalue);

EXTERN TransmissionTimeIntervalInformation* asn1Test_TransmissionTimeIntervalInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_TransportFormatSet_ModeDP                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TDD_TransportFormatSet_ModeDP {
   struct {
      unsigned transmissionTimeIntervalInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransmissionTimeIntervalInformation transmissionTimeIntervalInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TDD_TransportFormatSet_ModeDP;

EXTERN int asn1PE_TDD_TransportFormatSet_ModeDP (ASN1CTXT* pctxt, TDD_TransportFormatSet_ModeDP* pvalue);

EXTERN int asn1PD_TDD_TransportFormatSet_ModeDP (ASN1CTXT* pctxt, TDD_TransportFormatSet_ModeDP* pvalue);

EXTERN void asn1Print_TDD_TransportFormatSet_ModeDP
   (const char* name, TDD_TransportFormatSet_ModeDP* pvalue);

EXTERN TDD_TransportFormatSet_ModeDP* asn1Test_TDD_TransportFormatSet_ModeDP
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_ModeDP                                 */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TransportFormatSet_ModeDP_tdd 1
#define T_TransportFormatSet_ModeDP_notApplicable 2
#define T_TransportFormatSet_ModeDP_extElem1 3

typedef struct EXTERN TransportFormatSet_ModeDP {
   int t;
   union {
      /* t = 1 */
      TDD_TransportFormatSet_ModeDP *tdd;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TransportFormatSet_ModeDP;

EXTERN int asn1PE_TransportFormatSet_ModeDP (ASN1CTXT* pctxt, TransportFormatSet_ModeDP* pvalue);

EXTERN int asn1PD_TransportFormatSet_ModeDP (ASN1CTXT* pctxt, TransportFormatSet_ModeDP* pvalue);

EXTERN void asn1Print_TransportFormatSet_ModeDP
   (const char* name, TransportFormatSet_ModeDP* pvalue);

EXTERN TransportFormatSet_ModeDP* asn1Test_TransportFormatSet_ModeDP
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_DynamicPartList_element                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransportFormatSet_DynamicPartList_element {
   struct {
      unsigned transportBlockSizePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportFormatSet_NrOfTransportBlocks nrOfTransportBlocks;
   TransportFormatSet_TransportBlockSize transportBlockSize;
   TransportFormatSet_ModeDP mode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransportFormatSet_DynamicPartList_element;

EXTERN int asn1PE_TransportFormatSet_DynamicPartList_element (ASN1CTXT* pctxt, TransportFormatSet_DynamicPartList_element* pvalue);

EXTERN int asn1PD_TransportFormatSet_DynamicPartList_element (ASN1CTXT* pctxt, TransportFormatSet_DynamicPartList_element* pvalue);

EXTERN void asn1Print_TransportFormatSet_DynamicPartList_element
   (const char* name, TransportFormatSet_DynamicPartList_element* pvalue);

EXTERN TransportFormatSet_DynamicPartList_element* asn1Test_TransportFormatSet_DynamicPartList_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_DynamicPartList                        */
/*                                                            */
/**************************************************************/

/* List of TransportFormatSet_DynamicPartList_element */
typedef Asn1RTDList TransportFormatSet_DynamicPartList;

EXTERN int asn1PE_TransportFormatSet_DynamicPartList (ASN1CTXT* pctxt, TransportFormatSet_DynamicPartList* pvalue);

EXTERN int asn1PD_TransportFormatSet_DynamicPartList (ASN1CTXT* pctxt, TransportFormatSet_DynamicPartList* pvalue);

EXTERN void asn1Print_TransportFormatSet_DynamicPartList
   (const char* name, TransportFormatSet_DynamicPartList* pvalue);

EXTERN TransportFormatSet_DynamicPartList* asn1Test_TransportFormatSet_DynamicPartList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_TransmissionTimeIntervalSemiStatic     */
/*                                                            */
/**************************************************************/

typedef enum {
   msec_10_1 = 0,
   msec_20_1 = 1,
   msec_40_1 = 2,
   msec_80_1 = 3,
   dynamic = 4
} TransportFormatSet_TransmissionTimeIntervalSemiStatic_Root;

typedef enum {
   msec_5 = 5
} TransportFormatSet_TransmissionTimeIntervalSemiStatic_Ext;

typedef OSUINT32 TransportFormatSet_TransmissionTimeIntervalSemiStatic;

EXTERN int asn1PE_TransportFormatSet_TransmissionTimeIntervalSemiStatic (ASN1CTXT* pctxt, TransportFormatSet_TransmissionTimeIntervalSemiStatic value);

EXTERN int asn1PD_TransportFormatSet_TransmissionTimeIntervalSemiStatic (ASN1CTXT* pctxt, TransportFormatSet_TransmissionTimeIntervalSemiStatic* pvalue);

EXTERN void asn1Print_TransportFormatSet_TransmissionTimeIntervalSemiStatic
   (const char* name, TransportFormatSet_TransmissionTimeIntervalSemiStatic* pvalue);

EXTERN TransportFormatSet_TransmissionTimeIntervalSemiStatic* asn1Test_TransportFormatSet_TransmissionTimeIntervalSemiStatic
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_ChannelCodingType                      */
/*                                                            */
/**************************************************************/

typedef enum {
   no_codingTDD = 0,
   convolutional_coding = 1,
   turbo_coding = 2
} TransportFormatSet_ChannelCodingType_Root;

typedef OSUINT32 TransportFormatSet_ChannelCodingType;

EXTERN int asn1PE_TransportFormatSet_ChannelCodingType (ASN1CTXT* pctxt, TransportFormatSet_ChannelCodingType value);

EXTERN int asn1PD_TransportFormatSet_ChannelCodingType (ASN1CTXT* pctxt, TransportFormatSet_ChannelCodingType* pvalue);

EXTERN void asn1Print_TransportFormatSet_ChannelCodingType
   (const char* name, TransportFormatSet_ChannelCodingType* pvalue);

EXTERN TransportFormatSet_ChannelCodingType* asn1Test_TransportFormatSet_ChannelCodingType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_CodingRate                             */
/*                                                            */
/**************************************************************/

typedef enum {
   half = 0,
   third = 1
} TransportFormatSet_CodingRate_Root;

typedef OSUINT32 TransportFormatSet_CodingRate;

EXTERN int asn1PE_TransportFormatSet_CodingRate (ASN1CTXT* pctxt, TransportFormatSet_CodingRate value);

EXTERN int asn1PD_TransportFormatSet_CodingRate (ASN1CTXT* pctxt, TransportFormatSet_CodingRate* pvalue);

EXTERN void asn1Print_TransportFormatSet_CodingRate
   (const char* name, TransportFormatSet_CodingRate* pvalue);

EXTERN TransportFormatSet_CodingRate* asn1Test_TransportFormatSet_CodingRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_RateMatchingAttribute                  */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TransportFormatSet_RateMatchingAttribute;

EXTERN int asn1PE_TransportFormatSet_RateMatchingAttribute (ASN1CTXT* pctxt, TransportFormatSet_RateMatchingAttribute value);

EXTERN int asn1PD_TransportFormatSet_RateMatchingAttribute (ASN1CTXT* pctxt, TransportFormatSet_RateMatchingAttribute* pvalue);

EXTERN void asn1Print_TransportFormatSet_RateMatchingAttribute
   (const char* name, TransportFormatSet_RateMatchingAttribute* pvalue);

EXTERN TransportFormatSet_RateMatchingAttribute* asn1Test_TransportFormatSet_RateMatchingAttribute
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_CRC_Size                               */
/*                                                            */
/**************************************************************/

typedef enum {
   v0_4 = 0,
   v8_12 = 1,
   v12_2 = 2,
   v16_8 = 3,
   v24_1 = 4
} TransportFormatSet_CRC_Size_Root;

typedef OSUINT32 TransportFormatSet_CRC_Size;

EXTERN int asn1PE_TransportFormatSet_CRC_Size (ASN1CTXT* pctxt, TransportFormatSet_CRC_Size value);

EXTERN int asn1PD_TransportFormatSet_CRC_Size (ASN1CTXT* pctxt, TransportFormatSet_CRC_Size* pvalue);

EXTERN void asn1Print_TransportFormatSet_CRC_Size
   (const char* name, TransportFormatSet_CRC_Size* pvalue);

EXTERN TransportFormatSet_CRC_Size* asn1Test_TransportFormatSet_CRC_Size
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_SecondInterleavingMode                 */
/*                                                            */
/**************************************************************/

typedef enum {
   frame_related = 0,
   timeSlot_related = 1
} TransportFormatSet_SecondInterleavingMode_Root;

typedef OSUINT32 TransportFormatSet_SecondInterleavingMode;

EXTERN int asn1PE_TransportFormatSet_SecondInterleavingMode (ASN1CTXT* pctxt, TransportFormatSet_SecondInterleavingMode value);

EXTERN int asn1PD_TransportFormatSet_SecondInterleavingMode (ASN1CTXT* pctxt, TransportFormatSet_SecondInterleavingMode* pvalue);

EXTERN void asn1Print_TransportFormatSet_SecondInterleavingMode
   (const char* name, TransportFormatSet_SecondInterleavingMode* pvalue);

EXTERN TransportFormatSet_SecondInterleavingMode* asn1Test_TransportFormatSet_SecondInterleavingMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_ModeSSP                                */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TransportFormatSet_ModeSSP_tdd 1
#define T_TransportFormatSet_ModeSSP_notApplicable 2
#define T_TransportFormatSet_ModeSSP_extElem1 3

typedef struct EXTERN TransportFormatSet_ModeSSP {
   int t;
   union {
      /* t = 1 */
      TransportFormatSet_SecondInterleavingMode tdd;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TransportFormatSet_ModeSSP;

EXTERN int asn1PE_TransportFormatSet_ModeSSP (ASN1CTXT* pctxt, TransportFormatSet_ModeSSP* pvalue);

EXTERN int asn1PD_TransportFormatSet_ModeSSP (ASN1CTXT* pctxt, TransportFormatSet_ModeSSP* pvalue);

EXTERN void asn1Print_TransportFormatSet_ModeSSP
   (const char* name, TransportFormatSet_ModeSSP* pvalue);

EXTERN TransportFormatSet_ModeSSP* asn1Test_TransportFormatSet_ModeSSP
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet_Semi_staticPart                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransportFormatSet_Semi_staticPart {
   struct {
      unsigned codingRatePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportFormatSet_TransmissionTimeIntervalSemiStatic transmissionTimeInterval;
   TransportFormatSet_ChannelCodingType channelCoding;
   TransportFormatSet_CodingRate codingRate;
   TransportFormatSet_RateMatchingAttribute rateMatchingAttribute;
   TransportFormatSet_CRC_Size cRC_Size;
   TransportFormatSet_ModeSSP mode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransportFormatSet_Semi_staticPart;

EXTERN int asn1PE_TransportFormatSet_Semi_staticPart (ASN1CTXT* pctxt, TransportFormatSet_Semi_staticPart* pvalue);

EXTERN int asn1PD_TransportFormatSet_Semi_staticPart (ASN1CTXT* pctxt, TransportFormatSet_Semi_staticPart* pvalue);

EXTERN void asn1Print_TransportFormatSet_Semi_staticPart
   (const char* name, TransportFormatSet_Semi_staticPart* pvalue);

EXTERN TransportFormatSet_Semi_staticPart* asn1Test_TransportFormatSet_Semi_staticPart
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportFormatSet                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransportFormatSet {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportFormatSet_DynamicPartList dynamicParts;
   TransportFormatSet_Semi_staticPart semi_staticPart;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransportFormatSet;

EXTERN int asn1PE_TransportFormatSet (ASN1CTXT* pctxt, TransportFormatSet* pvalue);

EXTERN int asn1PD_TransportFormatSet (ASN1CTXT* pctxt, TransportFormatSet* pvalue);

EXTERN void asn1Print_TransportFormatSet
   (const char* name, TransportFormatSet* pvalue);

EXTERN TransportFormatSet* asn1Test_TransportFormatSet
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ToAWS                                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 ToAWS;

EXTERN int asn1PE_ToAWS (ASN1CTXT* pctxt, ToAWS value);

EXTERN int asn1PD_ToAWS (ASN1CTXT* pctxt, ToAWS* pvalue);

EXTERN void asn1Print_ToAWS
   (const char* name, ToAWS* pvalue);

EXTERN ToAWS* asn1Test_ToAWS
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ToAWE                                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 ToAWE;

EXTERN int asn1PE_ToAWE (ASN1CTXT* pctxt, ToAWE value);

EXTERN int asn1PD_ToAWE (ASN1CTXT* pctxt, ToAWE* pvalue);

EXTERN void asn1Print_ToAWE
   (const char* name, ToAWE* pvalue);

EXTERN ToAWE* asn1Test_ToAWE
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_Power                                                  */
/*                                                            */
/**************************************************************/

typedef OSINT16 DL_Power;

EXTERN int asn1PE_DL_Power (ASN1CTXT* pctxt, DL_Power value);

EXTERN int asn1PD_DL_Power (ASN1CTXT* pctxt, DL_Power* pvalue);

EXTERN void asn1Print_DL_Power
   (const char* name, DL_Power* pvalue);

EXTERN DL_Power* asn1Test_DL_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PICH_Power                                                */
/*                                                            */
/**************************************************************/

typedef OSINT8 PICH_Power;

EXTERN int asn1PE_PICH_Power (ASN1CTXT* pctxt, PICH_Power value);

EXTERN int asn1PD_PICH_Power (ASN1CTXT* pctxt, PICH_Power* pvalue);

EXTERN void asn1Print_PICH_Power
   (const char* name, PICH_Power* pvalue);

EXTERN PICH_Power* asn1Test_PICH_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PICH_Mode                                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   v18_1 = 0,
   v36_1 = 1,
   v72_1 = 2,
   v144_1 = 3
} PICH_Mode_Root;

typedef OSUINT32 PICH_Mode;

EXTERN int asn1PE_PICH_Mode (ASN1CTXT* pctxt, PICH_Mode value);

EXTERN int asn1PD_PICH_Mode (ASN1CTXT* pctxt, PICH_Mode* pvalue);

EXTERN void asn1Print_PICH_Mode
   (const char* name, PICH_Mode* pvalue);

EXTERN PICH_Mode* asn1Test_PICH_Mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MICH_Mode                                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   v18 = 0,
   v36 = 1,
   v72 = 2,
   v144 = 3
} MICH_Mode_Root;

typedef OSUINT32 MICH_Mode;

EXTERN int asn1PE_MICH_Mode (ASN1CTXT* pctxt, MICH_Mode value);

EXTERN int asn1PD_MICH_Mode (ASN1CTXT* pctxt, MICH_Mode* pvalue);

EXTERN void asn1Print_MICH_Mode
   (const char* name, MICH_Mode* pvalue);

EXTERN MICH_Mode* asn1Test_MICH_Mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CCTrCH_ID                                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CCTrCH_ID;

EXTERN int asn1PE_CCTrCH_ID (ASN1CTXT* pctxt, CCTrCH_ID value);

EXTERN int asn1PD_CCTrCH_ID (ASN1CTXT* pctxt, CCTrCH_ID* pvalue);

EXTERN void asn1Print_CCTrCH_ID
   (const char* name, CCTrCH_ID* pvalue);

EXTERN CCTrCH_ID* asn1Test_CCTrCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCI_Coding                                               */
/*                                                            */
/**************************************************************/

typedef enum {
   v4_12 = 0,
   v8_11 = 1,
   v16_7 = 2,
   v32_5 = 3
} TFCI_Coding_Root;

typedef OSUINT32 TFCI_Coding;

EXTERN int asn1PE_TFCI_Coding (ASN1CTXT* pctxt, TFCI_Coding value);

EXTERN int asn1PD_TFCI_Coding (ASN1CTXT* pctxt, TFCI_Coding* pvalue);

EXTERN void asn1Print_TFCI_Coding
   (const char* name, TFCI_Coding* pvalue);

EXTERN TFCI_Coding* asn1Test_TFCI_Coding
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_ChannelisationCode                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   chCode1div1 = 0,
   chCode2div1 = 1,
   chCode2div2 = 2,
   chCode4div1 = 3,
   chCode4div2 = 4,
   chCode4div3 = 5,
   chCode4div4 = 6,
   chCode8div1 = 7,
   chCode8div2 = 8,
   chCode8div3 = 9,
   chCode8div4 = 10,
   chCode8div5 = 11,
   chCode8div6 = 12,
   chCode8div7 = 13,
   chCode8div8 = 14,
   chCode16div1 = 15,
   chCode16div2 = 16,
   chCode16div3 = 17,
   chCode16div4 = 18,
   chCode16div5 = 19,
   chCode16div6 = 20,
   chCode16div7 = 21,
   chCode16div8 = 22,
   chCode16div9 = 23,
   chCode16div10 = 24,
   chCode16div11 = 25,
   chCode16div12 = 26,
   chCode16div13 = 27,
   chCode16div14 = 28,
   chCode16div15 = 29,
   chCode16div16 = 30
} TDD_ChannelisationCode_Root;

typedef OSUINT32 TDD_ChannelisationCode;

EXTERN int asn1PE_TDD_ChannelisationCode (ASN1CTXT* pctxt, TDD_ChannelisationCode value);

EXTERN int asn1PD_TDD_ChannelisationCode (ASN1CTXT* pctxt, TDD_ChannelisationCode* pvalue);

EXTERN void asn1Print_TDD_ChannelisationCode
   (const char* name, TDD_ChannelisationCode* pvalue);

EXTERN TDD_ChannelisationCode* asn1Test_TDD_ChannelisationCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimeSlot                                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TimeSlot;

EXTERN int asn1PE_TimeSlot (ASN1CTXT* pctxt, TimeSlot value);

EXTERN int asn1PD_TimeSlot (ASN1CTXT* pctxt, TimeSlot* pvalue);

EXTERN void asn1Print_TimeSlot
   (const char* name, TimeSlot* pvalue);

EXTERN TimeSlot* asn1Test_TimeSlot
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleConfigurationBurstType1And3                       */
/*                                                            */
/**************************************************************/

typedef enum {
   v4_4 = 0,
   v8_3 = 1,
   v16_2 = 2
} MidambleConfigurationBurstType1And3_Root;

typedef OSUINT32 MidambleConfigurationBurstType1And3;

EXTERN int asn1PE_MidambleConfigurationBurstType1And3 (ASN1CTXT* pctxt, MidambleConfigurationBurstType1And3 value);

EXTERN int asn1PD_MidambleConfigurationBurstType1And3 (ASN1CTXT* pctxt, MidambleConfigurationBurstType1And3* pvalue);

EXTERN void asn1Print_MidambleConfigurationBurstType1And3
   (const char* name, MidambleConfigurationBurstType1And3* pvalue);

EXTERN MidambleConfigurationBurstType1And3* asn1Test_MidambleConfigurationBurstType1And3
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftLong                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 MidambleShiftLong;

EXTERN int asn1PE_MidambleShiftLong (ASN1CTXT* pctxt, MidambleShiftLong value);

EXTERN int asn1PD_MidambleShiftLong (ASN1CTXT* pctxt, MidambleShiftLong* pvalue);

EXTERN void asn1Print_MidambleShiftLong
   (const char* name, MidambleShiftLong* pvalue);

EXTERN MidambleShiftLong* asn1Test_MidambleShiftLong
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType_type1_midambleAllocationMode    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_MidambleShiftAndBurstType_type1_midambleAllocationMode_defaultMidamble 1
#define T_MidambleShiftAndBurstType_type1_midambleAllocationMode_commonMidamble 2
#define T_MidambleShiftAndBurstType_type1_midambleAllocationMode_ueSpecificMidamble 3
#define T_MidambleShiftAndBurstType_type1_midambleAllocationMode_extElem1 4

typedef struct EXTERN MidambleShiftAndBurstType_type1_midambleAllocationMode {
   int t;
   union {
      /* t = 1 */
      /* t = 2 */
      /* t = 3 */
      MidambleShiftLong ueSpecificMidamble;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} MidambleShiftAndBurstType_type1_midambleAllocationMode;

EXTERN int asn1PE_MidambleShiftAndBurstType_type1_midambleAllocationMode (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type1_midambleAllocationMode* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType_type1_midambleAllocationMode (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type1_midambleAllocationMode* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType_type1_midambleAllocationMode
   (const char* name, MidambleShiftAndBurstType_type1_midambleAllocationMode* pvalue);

EXTERN MidambleShiftAndBurstType_type1_midambleAllocationMode* asn1Test_MidambleShiftAndBurstType_type1_midambleAllocationMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType_type1                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MidambleShiftAndBurstType_type1 {
   MidambleConfigurationBurstType1And3 midambleConfigurationBurstType1And3;
   MidambleShiftAndBurstType_type1_midambleAllocationMode midambleAllocationMode;
   Asn1RTDList extElem1;
} MidambleShiftAndBurstType_type1;

EXTERN int asn1PE_MidambleShiftAndBurstType_type1 (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type1* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType_type1 (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type1* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType_type1
   (const char* name, MidambleShiftAndBurstType_type1* pvalue);

EXTERN MidambleShiftAndBurstType_type1* asn1Test_MidambleShiftAndBurstType_type1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleConfigurationBurstType2                           */
/*                                                            */
/**************************************************************/

typedef enum {
   v3 = 0,
   v6_2 = 1
} MidambleConfigurationBurstType2_Root;

typedef OSUINT32 MidambleConfigurationBurstType2;

EXTERN int asn1PE_MidambleConfigurationBurstType2 (ASN1CTXT* pctxt, MidambleConfigurationBurstType2 value);

EXTERN int asn1PD_MidambleConfigurationBurstType2 (ASN1CTXT* pctxt, MidambleConfigurationBurstType2* pvalue);

EXTERN void asn1Print_MidambleConfigurationBurstType2
   (const char* name, MidambleConfigurationBurstType2* pvalue);

EXTERN MidambleConfigurationBurstType2* asn1Test_MidambleConfigurationBurstType2
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftShort                                        */
/*                                                            */
/**************************************************************/

typedef OSUINT8 MidambleShiftShort;

EXTERN int asn1PE_MidambleShiftShort (ASN1CTXT* pctxt, MidambleShiftShort value);

EXTERN int asn1PD_MidambleShiftShort (ASN1CTXT* pctxt, MidambleShiftShort* pvalue);

EXTERN void asn1Print_MidambleShiftShort
   (const char* name, MidambleShiftShort* pvalue);

EXTERN MidambleShiftShort* asn1Test_MidambleShiftShort
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType_type2_midambleAllocationMode    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_MidambleShiftAndBurstType_type2_midambleAllocationMode_defaultMidamble 1
#define T_MidambleShiftAndBurstType_type2_midambleAllocationMode_commonMidamble 2
#define T_MidambleShiftAndBurstType_type2_midambleAllocationMode_ueSpecificMidamble 3
#define T_MidambleShiftAndBurstType_type2_midambleAllocationMode_extElem1 4

typedef struct EXTERN MidambleShiftAndBurstType_type2_midambleAllocationMode {
   int t;
   union {
      /* t = 1 */
      /* t = 2 */
      /* t = 3 */
      MidambleShiftShort ueSpecificMidamble;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} MidambleShiftAndBurstType_type2_midambleAllocationMode;

EXTERN int asn1PE_MidambleShiftAndBurstType_type2_midambleAllocationMode (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type2_midambleAllocationMode* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType_type2_midambleAllocationMode (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type2_midambleAllocationMode* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType_type2_midambleAllocationMode
   (const char* name, MidambleShiftAndBurstType_type2_midambleAllocationMode* pvalue);

EXTERN MidambleShiftAndBurstType_type2_midambleAllocationMode* asn1Test_MidambleShiftAndBurstType_type2_midambleAllocationMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType_type2                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MidambleShiftAndBurstType_type2 {
   MidambleConfigurationBurstType2 midambleConfigurationBurstType2;
   MidambleShiftAndBurstType_type2_midambleAllocationMode midambleAllocationMode;
   Asn1RTDList extElem1;
} MidambleShiftAndBurstType_type2;

EXTERN int asn1PE_MidambleShiftAndBurstType_type2 (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type2* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType_type2 (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type2* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType_type2
   (const char* name, MidambleShiftAndBurstType_type2* pvalue);

EXTERN MidambleShiftAndBurstType_type2* asn1Test_MidambleShiftAndBurstType_type2
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType_type3_midambleAllocationMode    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_MidambleShiftAndBurstType_type3_midambleAllocationMode_defaultMidamble 1
#define T_MidambleShiftAndBurstType_type3_midambleAllocationMode_ueSpecificMidamble 2
#define T_MidambleShiftAndBurstType_type3_midambleAllocationMode_extElem1 3

typedef struct EXTERN MidambleShiftAndBurstType_type3_midambleAllocationMode {
   int t;
   union {
      /* t = 1 */
      /* t = 2 */
      MidambleShiftLong ueSpecificMidamble;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} MidambleShiftAndBurstType_type3_midambleAllocationMode;

EXTERN int asn1PE_MidambleShiftAndBurstType_type3_midambleAllocationMode (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type3_midambleAllocationMode* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType_type3_midambleAllocationMode (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type3_midambleAllocationMode* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType_type3_midambleAllocationMode
   (const char* name, MidambleShiftAndBurstType_type3_midambleAllocationMode* pvalue);

EXTERN MidambleShiftAndBurstType_type3_midambleAllocationMode* asn1Test_MidambleShiftAndBurstType_type3_midambleAllocationMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType_type3                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MidambleShiftAndBurstType_type3 {
   MidambleConfigurationBurstType1And3 midambleConfigurationBurstType1And3;
   MidambleShiftAndBurstType_type3_midambleAllocationMode midambleAllocationMode;
   Asn1RTDList extElem1;
} MidambleShiftAndBurstType_type3;

EXTERN int asn1PE_MidambleShiftAndBurstType_type3 (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type3* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType_type3 (ASN1CTXT* pctxt, MidambleShiftAndBurstType_type3* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType_type3
   (const char* name, MidambleShiftAndBurstType_type3* pvalue);

EXTERN MidambleShiftAndBurstType_type3* asn1Test_MidambleShiftAndBurstType_type3
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftAndBurstType                                 */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_MidambleShiftAndBurstType_type1 1
#define T_MidambleShiftAndBurstType_type2 2
#define T_MidambleShiftAndBurstType_type3 3
#define T_MidambleShiftAndBurstType_extElem1 4

typedef struct EXTERN MidambleShiftAndBurstType {
   int t;
   union {
      /* t = 1 */
      MidambleShiftAndBurstType_type1 *type1;
      /* t = 2 */
      MidambleShiftAndBurstType_type2 *type2;
      /* t = 3 */
      MidambleShiftAndBurstType_type3 *type3;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} MidambleShiftAndBurstType;

EXTERN int asn1PE_MidambleShiftAndBurstType (ASN1CTXT* pctxt, MidambleShiftAndBurstType* pvalue);

EXTERN int asn1PD_MidambleShiftAndBurstType (ASN1CTXT* pctxt, MidambleShiftAndBurstType* pvalue);

EXTERN void asn1Print_MidambleShiftAndBurstType
   (const char* name, MidambleShiftAndBurstType* pvalue);

EXTERN MidambleShiftAndBurstType* asn1Test_MidambleShiftAndBurstType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_PhysicalChannelOffset                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TDD_PhysicalChannelOffset;

EXTERN int asn1PE_TDD_PhysicalChannelOffset (ASN1CTXT* pctxt, TDD_PhysicalChannelOffset value);

EXTERN int asn1PD_TDD_PhysicalChannelOffset (ASN1CTXT* pctxt, TDD_PhysicalChannelOffset* pvalue);

EXTERN void asn1Print_TDD_PhysicalChannelOffset
   (const char* name, TDD_PhysicalChannelOffset* pvalue);

EXTERN TDD_PhysicalChannelOffset* asn1Test_TDD_PhysicalChannelOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RepetitionPeriod                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   v1_4 = 0,
   v2_7 = 1,
   v4_10 = 2,
   v8_9 = 3,
   v16_6 = 4,
   v32_4 = 5,
   v64_3 = 6
} RepetitionPeriod_Root;

typedef OSUINT32 RepetitionPeriod;

EXTERN int asn1PE_RepetitionPeriod (ASN1CTXT* pctxt, RepetitionPeriod value);

EXTERN int asn1PD_RepetitionPeriod (ASN1CTXT* pctxt, RepetitionPeriod* pvalue);

EXTERN void asn1Print_RepetitionPeriod
   (const char* name, RepetitionPeriod* pvalue);

EXTERN RepetitionPeriod* asn1Test_RepetitionPeriod
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RepetitionLength                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RepetitionLength;

EXTERN int asn1PE_RepetitionLength (ASN1CTXT* pctxt, RepetitionLength value);

EXTERN int asn1PD_RepetitionLength (ASN1CTXT* pctxt, RepetitionLength* pvalue);

EXTERN void asn1Print_RepetitionLength
   (const char* name, RepetitionLength* pvalue);

EXTERN RepetitionLength* asn1Test_RepetitionLength
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PagingIndicatorLength                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   v2_5 = 0,
   v4_9 = 1,
   v8_8 = 2
} PagingIndicatorLength_Root;

typedef OSUINT32 PagingIndicatorLength;

EXTERN int asn1PE_PagingIndicatorLength (ASN1CTXT* pctxt, PagingIndicatorLength value);

EXTERN int asn1PD_PagingIndicatorLength (ASN1CTXT* pctxt, PagingIndicatorLength* pvalue);

EXTERN void asn1Print_PagingIndicatorLength
   (const char* name, PagingIndicatorLength* pvalue);

EXTERN PagingIndicatorLength* asn1Test_PagingIndicatorLength
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Modulation                                                */
/*                                                            */
/**************************************************************/

typedef enum {
   qPSK = 0,
   eightPSK = 1
} Modulation_Root;

typedef OSUINT32 Modulation;

EXTERN int asn1PE_Modulation (ASN1CTXT* pctxt, Modulation value);

EXTERN int asn1PD_Modulation (ASN1CTXT* pctxt, Modulation* pvalue);

EXTERN void asn1Print_Modulation
   (const char* name, Modulation* pvalue);

EXTERN Modulation* asn1Test_Modulation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_ChannelisationCodeLCR                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TDD_ChannelisationCodeLCR {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TDD_ChannelisationCode tDD_ChannelisationCode;
   Modulation modulation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TDD_ChannelisationCodeLCR;

EXTERN int asn1PE_TDD_ChannelisationCodeLCR (ASN1CTXT* pctxt, TDD_ChannelisationCodeLCR* pvalue);

EXTERN int asn1PD_TDD_ChannelisationCodeLCR (ASN1CTXT* pctxt, TDD_ChannelisationCodeLCR* pvalue);

EXTERN void asn1Print_TDD_ChannelisationCodeLCR
   (const char* name, TDD_ChannelisationCodeLCR* pvalue);

EXTERN TDD_ChannelisationCodeLCR* asn1Test_TDD_ChannelisationCodeLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimeSlotLCR                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TimeSlotLCR;

EXTERN int asn1PE_TimeSlotLCR (ASN1CTXT* pctxt, TimeSlotLCR value);

EXTERN int asn1PD_TimeSlotLCR (ASN1CTXT* pctxt, TimeSlotLCR* pvalue);

EXTERN void asn1Print_TimeSlotLCR
   (const char* name, TimeSlotLCR* pvalue);

EXTERN TimeSlotLCR* asn1Test_TimeSlotLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleAllocationMode                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   defaultMidamble = 0,
   commonMidamble = 1,
   uESpecificMidamble = 2
} MidambleAllocationMode_Root;

typedef OSUINT32 MidambleAllocationMode;

EXTERN int asn1PE_MidambleAllocationMode (ASN1CTXT* pctxt, MidambleAllocationMode value);

EXTERN int asn1PD_MidambleAllocationMode (ASN1CTXT* pctxt, MidambleAllocationMode* pvalue);

EXTERN void asn1Print_MidambleAllocationMode
   (const char* name, MidambleAllocationMode* pvalue);

EXTERN MidambleAllocationMode* asn1Test_MidambleAllocationMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleConfigurationLCR                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   v2_2 = 0,
   v4_3 = 1,
   v6_1 = 2,
   v8_2 = 3,
   v10_1 = 4,
   v12_1 = 5,
   v14 = 6,
   v16_1 = 7
} MidambleConfigurationLCR_Root;

typedef OSUINT32 MidambleConfigurationLCR;

EXTERN int asn1PE_MidambleConfigurationLCR (ASN1CTXT* pctxt, MidambleConfigurationLCR value);

EXTERN int asn1PD_MidambleConfigurationLCR (ASN1CTXT* pctxt, MidambleConfigurationLCR* pvalue);

EXTERN void asn1Print_MidambleConfigurationLCR
   (const char* name, MidambleConfigurationLCR* pvalue);

EXTERN MidambleConfigurationLCR* asn1Test_MidambleConfigurationLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MidambleShiftLCR                                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MidambleShiftLCR {
   struct {
      unsigned midambleShiftPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   MidambleAllocationMode midambleAllocationMode;
   MidambleShiftLong midambleShift;
   MidambleConfigurationLCR midambleConfigurationLCR;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} MidambleShiftLCR;

EXTERN int asn1PE_MidambleShiftLCR (ASN1CTXT* pctxt, MidambleShiftLCR* pvalue);

EXTERN int asn1PD_MidambleShiftLCR (ASN1CTXT* pctxt, MidambleShiftLCR* pvalue);

EXTERN void asn1Print_MidambleShiftLCR
   (const char* name, MidambleShiftLCR* pvalue);

EXTERN MidambleShiftLCR* asn1Test_MidambleShiftLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  QPSK_DL_DPCH_TimeSlotFormatTDD_LCR                        */
/*                                                            */
/**************************************************************/

typedef OSINT32 QPSK_DL_DPCH_TimeSlotFormatTDD_LCR;

EXTERN int asn1PE_QPSK_DL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, QPSK_DL_DPCH_TimeSlotFormatTDD_LCR value);

EXTERN int asn1PD_QPSK_DL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, QPSK_DL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN void asn1Print_QPSK_DL_DPCH_TimeSlotFormatTDD_LCR
   (const char* name, QPSK_DL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN QPSK_DL_DPCH_TimeSlotFormatTDD_LCR* asn1Test_QPSK_DL_DPCH_TimeSlotFormatTDD_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR                    */
/*                                                            */
/**************************************************************/

typedef OSINT32 EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR;

EXTERN int asn1PE_EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR value);

EXTERN int asn1PD_EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN void asn1Print_EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR
   (const char* name, EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR* asn1Test_EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DL_DPCH_TimeSlotFormat_LCR                            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TDD_DL_DPCH_TimeSlotFormat_LCR_qPSK 1
#define T_TDD_DL_DPCH_TimeSlotFormat_LCR_eightPSK 2
#define T_TDD_DL_DPCH_TimeSlotFormat_LCR_extElem1 3

typedef struct EXTERN TDD_DL_DPCH_TimeSlotFormat_LCR {
   int t;
   union {
      /* t = 1 */
      QPSK_DL_DPCH_TimeSlotFormatTDD_LCR qPSK;
      /* t = 2 */
      EightPSK_DL_DPCH_TimeSlotFormatTDD_LCR eightPSK;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TDD_DL_DPCH_TimeSlotFormat_LCR;

EXTERN int asn1PE_TDD_DL_DPCH_TimeSlotFormat_LCR (ASN1CTXT* pctxt, TDD_DL_DPCH_TimeSlotFormat_LCR* pvalue);

EXTERN int asn1PD_TDD_DL_DPCH_TimeSlotFormat_LCR (ASN1CTXT* pctxt, TDD_DL_DPCH_TimeSlotFormat_LCR* pvalue);

EXTERN void asn1Print_TDD_DL_DPCH_TimeSlotFormat_LCR
   (const char* name, TDD_DL_DPCH_TimeSlotFormat_LCR* pvalue);

EXTERN TDD_DL_DPCH_TimeSlotFormat_LCR* asn1Test_TDD_DL_DPCH_TimeSlotFormat_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NotificationIndicatorLength                               */
/*                                                            */
/**************************************************************/

typedef enum {
   v2_4 = 0,
   v4_8 = 1,
   v8_7 = 2
} NotificationIndicatorLength_Root;

typedef OSUINT32 NotificationIndicatorLength;

EXTERN int asn1PE_NotificationIndicatorLength (ASN1CTXT* pctxt, NotificationIndicatorLength value);

EXTERN int asn1PD_NotificationIndicatorLength (ASN1CTXT* pctxt, NotificationIndicatorLength* pvalue);

EXTERN void asn1Print_NotificationIndicatorLength
   (const char* name, NotificationIndicatorLength* pvalue);

EXTERN NotificationIndicatorLength* asn1Test_NotificationIndicatorLength
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TSTD_Indicator                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   active_6 = 0,
   inactive_5 = 1
} TSTD_Indicator_Root;

typedef OSUINT32 TSTD_Indicator;

EXTERN int asn1PE_TSTD_Indicator (ASN1CTXT* pctxt, TSTD_Indicator value);

EXTERN int asn1PD_TSTD_Indicator (ASN1CTXT* pctxt, TSTD_Indicator* pvalue);

EXTERN void asn1Print_TSTD_Indicator
   (const char* name, TSTD_Indicator* pvalue);

EXTERN TSTD_Indicator* asn1Test_TSTD_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaxPRACH_MidambleShifts                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   shift4 = 0,
   shift8 = 1
} MaxPRACH_MidambleShifts_Root;

typedef OSUINT32 MaxPRACH_MidambleShifts;

EXTERN int asn1PE_MaxPRACH_MidambleShifts (ASN1CTXT* pctxt, MaxPRACH_MidambleShifts value);

EXTERN int asn1PD_MaxPRACH_MidambleShifts (ASN1CTXT* pctxt, MaxPRACH_MidambleShifts* pvalue);

EXTERN void asn1Print_MaxPRACH_MidambleShifts
   (const char* name, MaxPRACH_MidambleShifts* pvalue);

EXTERN MaxPRACH_MidambleShifts* asn1Test_MaxPRACH_MidambleShifts
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PRACH_Midamble                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   inverted = 0,
   direct = 1
} PRACH_Midamble_Root;

typedef OSUINT32 PRACH_Midamble;

EXTERN int asn1PE_PRACH_Midamble (ASN1CTXT* pctxt, PRACH_Midamble value);

EXTERN int asn1PD_PRACH_Midamble (ASN1CTXT* pctxt, PRACH_Midamble* pvalue);

EXTERN void asn1Print_PRACH_Midamble
   (const char* name, PRACH_Midamble* pvalue);

EXTERN PRACH_Midamble* asn1Test_PRACH_Midamble
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FPACH_Power                                               */
/*                                                            */
/**************************************************************/

typedef OSINT32 FPACH_Power;

EXTERN int asn1PE_FPACH_Power (ASN1CTXT* pctxt, FPACH_Power value);

EXTERN int asn1PD_FPACH_Power (ASN1CTXT* pctxt, FPACH_Power* pvalue);

EXTERN void asn1Print_FPACH_Power
   (const char* name, FPACH_Power* pvalue);

EXTERN FPACH_Power* asn1Test_FPACH_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BindingID                                                 */
/*                                                            */
/**************************************************************/

typedef ASN1DynOctStr BindingID;

EXTERN int asn1PE_BindingID (ASN1CTXT* pctxt, BindingID value);

EXTERN int asn1PD_BindingID (ASN1CTXT* pctxt, BindingID* pvalue);

EXTERN void asn1Print_BindingID
   (const char* name, BindingID* pvalue);

EXTERN BindingID* asn1Test_BindingID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportLayerAddress                                     */
/*                                                            */
/**************************************************************/

typedef ASN1DynBitStr TransportLayerAddress;

EXTERN int asn1PE_TransportLayerAddress (ASN1CTXT* pctxt, TransportLayerAddress value);

EXTERN int asn1PD_TransportLayerAddress (ASN1CTXT* pctxt, TransportLayerAddress* pvalue);

EXTERN void asn1Print_TransportLayerAddress
   (const char* name, TransportLayerAddress* pvalue);

EXTERN TransportLayerAddress* asn1Test_TransportLayerAddress
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonTransportChannel_InformationResponse                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CommonTransportChannel_InformationResponse {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CommonTransportChannelID commonTransportChannelID;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} CommonTransportChannel_InformationResponse;

EXTERN int asn1PE_CommonTransportChannel_InformationResponse (ASN1CTXT* pctxt, CommonTransportChannel_InformationResponse* pvalue);

EXTERN int asn1PD_CommonTransportChannel_InformationResponse (ASN1CTXT* pctxt, CommonTransportChannel_InformationResponse* pvalue);

EXTERN void asn1Print_CommonTransportChannel_InformationResponse
   (const char* name, CommonTransportChannel_InformationResponse* pvalue);

EXTERN CommonTransportChannel_InformationResponse* asn1Test_CommonTransportChannel_InformationResponse
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  C_ID                                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT16 C_ID;

EXTERN int asn1PE_C_ID (ASN1CTXT* pctxt, C_ID value);

EXTERN int asn1PD_C_ID (ASN1CTXT* pctxt, C_ID* pvalue);

EXTERN void asn1Print_C_ID
   (const char* name, C_ID* pvalue);

EXTERN C_ID* asn1Test_C_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ConfigurationGenerationID                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 ConfigurationGenerationID;

EXTERN int asn1PE_ConfigurationGenerationID (ASN1CTXT* pctxt, ConfigurationGenerationID value);

EXTERN int asn1PD_ConfigurationGenerationID (ASN1CTXT* pctxt, ConfigurationGenerationID* pvalue);

EXTERN void asn1Print_ConfigurationGenerationID
   (const char* name, ConfigurationGenerationID* pvalue);

EXTERN ConfigurationGenerationID* asn1Test_ConfigurationGenerationID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ResourceOperationalState                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   enabled = 0,
   disabled = 1
} ResourceOperationalState_Root;

typedef OSUINT32 ResourceOperationalState;

EXTERN int asn1PE_ResourceOperationalState (ASN1CTXT* pctxt, ResourceOperationalState value);

EXTERN int asn1PD_ResourceOperationalState (ASN1CTXT* pctxt, ResourceOperationalState* pvalue);

EXTERN void asn1Print_ResourceOperationalState
   (const char* name, ResourceOperationalState* pvalue);

EXTERN ResourceOperationalState* asn1Test_ResourceOperationalState
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AvailabilityStatus                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   empty = 0,
   in_test = 1,
   failed = 2,
   power_off = 3,
   off_line = 4,
   off_duty = 5,
   dependency = 6,
   degraded = 7,
   not_installed = 8,
   log_full = 9
} AvailabilityStatus_Root;

typedef OSUINT32 AvailabilityStatus;

EXTERN int asn1PE_AvailabilityStatus (ASN1CTXT* pctxt, AvailabilityStatus value);

EXTERN int asn1PD_AvailabilityStatus (ASN1CTXT* pctxt, AvailabilityStatus* pvalue);

EXTERN void asn1Print_AvailabilityStatus
   (const char* name, AvailabilityStatus* pvalue);

EXTERN AvailabilityStatus* asn1Test_AvailabilityStatus
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Local_Cell_ID                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT32 Local_Cell_ID;

EXTERN int asn1PE_Local_Cell_ID (ASN1CTXT* pctxt, Local_Cell_ID value);

EXTERN int asn1PD_Local_Cell_ID (ASN1CTXT* pctxt, Local_Cell_ID* pvalue);

EXTERN void asn1Print_Local_Cell_ID
   (const char* name, Local_Cell_ID* pvalue);

EXTERN Local_Cell_ID* asn1Test_Local_Cell_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommunicationControlPortID                                */
/*                                                            */
/**************************************************************/

typedef OSUINT16 CommunicationControlPortID;

EXTERN int asn1PE_CommunicationControlPortID (ASN1CTXT* pctxt, CommunicationControlPortID value);

EXTERN int asn1PD_CommunicationControlPortID (ASN1CTXT* pctxt, CommunicationControlPortID* pvalue);

EXTERN void asn1Print_CommunicationControlPortID
   (const char* name, CommunicationControlPortID* pvalue);

EXTERN CommunicationControlPortID* asn1Test_CommunicationControlPortID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_or_Global_CapacityCredit                               */
/*                                                            */
/**************************************************************/

typedef OSUINT16 DL_or_Global_CapacityCredit;

EXTERN int asn1PE_DL_or_Global_CapacityCredit (ASN1CTXT* pctxt, DL_or_Global_CapacityCredit value);

EXTERN int asn1PD_DL_or_Global_CapacityCredit (ASN1CTXT* pctxt, DL_or_Global_CapacityCredit* pvalue);

EXTERN void asn1Print_DL_or_Global_CapacityCredit
   (const char* name, DL_or_Global_CapacityCredit* pvalue);

EXTERN DL_or_Global_CapacityCredit* asn1Test_DL_or_Global_CapacityCredit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_CapacityCredit                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT16 UL_CapacityCredit;

EXTERN int asn1PE_UL_CapacityCredit (ASN1CTXT* pctxt, UL_CapacityCredit value);

EXTERN int asn1PD_UL_CapacityCredit (ASN1CTXT* pctxt, UL_CapacityCredit* pvalue);

EXTERN void asn1Print_UL_CapacityCredit
   (const char* name, UL_CapacityCredit* pvalue);

EXTERN UL_CapacityCredit* asn1Test_UL_CapacityCredit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonChannelsCapacityConsumptionLaw_element              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CommonChannelsCapacityConsumptionLaw_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT16 dl_Cost;
   OSUINT16 ul_Cost;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} CommonChannelsCapacityConsumptionLaw_element;

EXTERN int asn1PE_CommonChannelsCapacityConsumptionLaw_element (ASN1CTXT* pctxt, CommonChannelsCapacityConsumptionLaw_element* pvalue);

EXTERN int asn1PD_CommonChannelsCapacityConsumptionLaw_element (ASN1CTXT* pctxt, CommonChannelsCapacityConsumptionLaw_element* pvalue);

EXTERN void asn1Print_CommonChannelsCapacityConsumptionLaw_element
   (const char* name, CommonChannelsCapacityConsumptionLaw_element* pvalue);

EXTERN CommonChannelsCapacityConsumptionLaw_element* asn1Test_CommonChannelsCapacityConsumptionLaw_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonChannelsCapacityConsumptionLaw                      */
/*                                                            */
/**************************************************************/

/* List of CommonChannelsCapacityConsumptionLaw_element */
typedef Asn1RTDList CommonChannelsCapacityConsumptionLaw;

EXTERN int asn1PE_CommonChannelsCapacityConsumptionLaw (ASN1CTXT* pctxt, CommonChannelsCapacityConsumptionLaw* pvalue);

EXTERN int asn1PD_CommonChannelsCapacityConsumptionLaw (ASN1CTXT* pctxt, CommonChannelsCapacityConsumptionLaw* pvalue);

EXTERN void asn1Print_CommonChannelsCapacityConsumptionLaw
   (const char* name, CommonChannelsCapacityConsumptionLaw* pvalue);

EXTERN CommonChannelsCapacityConsumptionLaw* asn1Test_CommonChannelsCapacityConsumptionLaw
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DedicatedChannelsCapacityConsumptionLaw_element           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DedicatedChannelsCapacityConsumptionLaw_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT16 dl_Cost_1;
   OSUINT16 dl_Cost_2;
   OSUINT16 ul_Cost_1;
   OSUINT16 ul_Cost_2;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DedicatedChannelsCapacityConsumptionLaw_element;

EXTERN int asn1PE_DedicatedChannelsCapacityConsumptionLaw_element (ASN1CTXT* pctxt, DedicatedChannelsCapacityConsumptionLaw_element* pvalue);

EXTERN int asn1PD_DedicatedChannelsCapacityConsumptionLaw_element (ASN1CTXT* pctxt, DedicatedChannelsCapacityConsumptionLaw_element* pvalue);

EXTERN void asn1Print_DedicatedChannelsCapacityConsumptionLaw_element
   (const char* name, DedicatedChannelsCapacityConsumptionLaw_element* pvalue);

EXTERN DedicatedChannelsCapacityConsumptionLaw_element* asn1Test_DedicatedChannelsCapacityConsumptionLaw_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DedicatedChannelsCapacityConsumptionLaw                   */
/*                                                            */
/**************************************************************/

/* List of DedicatedChannelsCapacityConsumptionLaw_element */
typedef Asn1RTDList DedicatedChannelsCapacityConsumptionLaw;

EXTERN int asn1PE_DedicatedChannelsCapacityConsumptionLaw (ASN1CTXT* pctxt, DedicatedChannelsCapacityConsumptionLaw* pvalue);

EXTERN int asn1PD_DedicatedChannelsCapacityConsumptionLaw (ASN1CTXT* pctxt, DedicatedChannelsCapacityConsumptionLaw* pvalue);

EXTERN void asn1Print_DedicatedChannelsCapacityConsumptionLaw
   (const char* name, DedicatedChannelsCapacityConsumptionLaw* pvalue);

EXTERN DedicatedChannelsCapacityConsumptionLaw* asn1Test_DedicatedChannelsCapacityConsumptionLaw
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaximumDL_PowerCapability                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 MaximumDL_PowerCapability;

EXTERN int asn1PE_MaximumDL_PowerCapability (ASN1CTXT* pctxt, MaximumDL_PowerCapability value);

EXTERN int asn1PD_MaximumDL_PowerCapability (ASN1CTXT* pctxt, MaximumDL_PowerCapability* pvalue);

EXTERN void asn1Print_MaximumDL_PowerCapability
   (const char* name, MaximumDL_PowerCapability* pvalue);

EXTERN MaximumDL_PowerCapability* asn1Test_MaximumDL_PowerCapability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MinSpreadingFactor                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   v4_5 = 0,
   v8_4 = 1,
   v16_3 = 2,
   v32_1 = 3,
   v64 = 4,
   v128 = 5,
   v256 = 6,
   v512 = 7
} MinSpreadingFactor_Root;

typedef OSUINT32 MinSpreadingFactor;

EXTERN int asn1PE_MinSpreadingFactor (ASN1CTXT* pctxt, MinSpreadingFactor value);

EXTERN int asn1PD_MinSpreadingFactor (ASN1CTXT* pctxt, MinSpreadingFactor* pvalue);

EXTERN void asn1Print_MinSpreadingFactor
   (const char* name, MinSpreadingFactor* pvalue);

EXTERN MinSpreadingFactor* asn1Test_MinSpreadingFactor
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MinimumDL_PowerCapability                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 MinimumDL_PowerCapability;

EXTERN int asn1PE_MinimumDL_PowerCapability (ASN1CTXT* pctxt, MinimumDL_PowerCapability value);

EXTERN int asn1PD_MinimumDL_PowerCapability (ASN1CTXT* pctxt, MinimumDL_PowerCapability* pvalue);

EXTERN void asn1Print_MinimumDL_PowerCapability
   (const char* name, MinimumDL_PowerCapability* pvalue);

EXTERN MinimumDL_PowerCapability* asn1Test_MinimumDL_PowerCapability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmitted_Carrier_Power_Value                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 Transmitted_Carrier_Power_Value;

EXTERN int asn1PE_Transmitted_Carrier_Power_Value (ASN1CTXT* pctxt, Transmitted_Carrier_Power_Value value);

EXTERN int asn1PD_Transmitted_Carrier_Power_Value (ASN1CTXT* pctxt, Transmitted_Carrier_Power_Value* pvalue);

EXTERN void asn1Print_Transmitted_Carrier_Power_Value
   (const char* name, Transmitted_Carrier_Power_Value* pvalue);

EXTERN Transmitted_Carrier_Power_Value* asn1Test_Transmitted_Carrier_Power_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Received_total_wide_band_power_Value                      */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Received_total_wide_band_power_Value;

EXTERN int asn1PE_Received_total_wide_band_power_Value (ASN1CTXT* pctxt, Received_total_wide_band_power_Value value);

EXTERN int asn1PD_Received_total_wide_band_power_Value (ASN1CTXT* pctxt, Received_total_wide_band_power_Value* pvalue);

EXTERN void asn1Print_Received_total_wide_band_power_Value
   (const char* name, Received_total_wide_band_power_Value* pvalue);

EXTERN Received_total_wide_band_power_Value* asn1Test_Received_total_wide_band_power_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Acknowledged_PRACH_preambles_Value                        */
/*                                                            */
/**************************************************************/

typedef OSINT32 Acknowledged_PRACH_preambles_Value;

EXTERN int asn1PE_Acknowledged_PRACH_preambles_Value (ASN1CTXT* pctxt, Acknowledged_PRACH_preambles_Value value);

EXTERN int asn1PD_Acknowledged_PRACH_preambles_Value (ASN1CTXT* pctxt, Acknowledged_PRACH_preambles_Value* pvalue);

EXTERN void asn1Print_Acknowledged_PRACH_preambles_Value
   (const char* name, Acknowledged_PRACH_preambles_Value* pvalue);

EXTERN Acknowledged_PRACH_preambles_Value* asn1Test_Acknowledged_PRACH_preambles_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeslotISCP_Value                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT8 UL_TimeslotISCP_Value;

EXTERN int asn1PE_UL_TimeslotISCP_Value (ASN1CTXT* pctxt, UL_TimeslotISCP_Value value);

EXTERN int asn1PD_UL_TimeslotISCP_Value (ASN1CTXT* pctxt, UL_TimeslotISCP_Value* pvalue);

EXTERN void asn1Print_UL_TimeslotISCP_Value
   (const char* name, UL_TimeslotISCP_Value* pvalue);

EXTERN UL_TimeslotISCP_Value* asn1Test_UL_TimeslotISCP_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Extension_CommonMeasurementValue                          */
/*                                                            */
/**************************************************************/

typedef ProtocolIE_Single_Container Extension_CommonMeasurementValue;

EXTERN int asn1PE_Extension_CommonMeasurementValue (ASN1CTXT* pctxt, Extension_CommonMeasurementValue* pvalue);

EXTERN int asn1PD_Extension_CommonMeasurementValue (ASN1CTXT* pctxt, Extension_CommonMeasurementValue* pvalue);

EXTERN void asn1Print_Extension_CommonMeasurementValue
   (const char* name, Extension_CommonMeasurementValue* pvalue);

EXTERN Extension_CommonMeasurementValue* asn1Test_Extension_CommonMeasurementValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonMeasurementValue                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_CommonMeasurementValue_transmitted_carrier_power 1
#define T_CommonMeasurementValue_received_total_wide_band_power 2
#define T_CommonMeasurementValue_acknowledged_prach_preambles 3
#define T_CommonMeasurementValue_uL_TimeslotISCP 4
#define T_CommonMeasurementValue_notUsed_1_acknowledged_PCPCH_access_preambles 5
#define T_CommonMeasurementValue_notUsed_2_detected_PCPCH_access_preambles 6
#define T_CommonMeasurementValue_extension_CommonMeasurementValue 7
#define T_CommonMeasurementValue_extElem1 8

typedef struct EXTERN CommonMeasurementValue {
   int t;
   union {
      /* t = 1 */
      Transmitted_Carrier_Power_Value transmitted_carrier_power;
      /* t = 2 */
      Received_total_wide_band_power_Value received_total_wide_band_power;
      /* t = 3 */
      Acknowledged_PRACH_preambles_Value acknowledged_prach_preambles;
      /* t = 4 */
      UL_TimeslotISCP_Value uL_TimeslotISCP;
      /* t = 5 */
      /* t = 6 */
      /* t = 7 */
      Extension_CommonMeasurementValue *extension_CommonMeasurementValue;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} CommonMeasurementValue;

EXTERN int asn1PE_CommonMeasurementValue (ASN1CTXT* pctxt, CommonMeasurementValue* pvalue);

EXTERN int asn1PD_CommonMeasurementValue (ASN1CTXT* pctxt, CommonMeasurementValue* pvalue);

EXTERN void asn1Print_CommonMeasurementValue
   (const char* name, CommonMeasurementValue* pvalue);

EXTERN CommonMeasurementValue* asn1Test_CommonMeasurementValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonMeasurementAvailable                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CommonMeasurementAvailable {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   CommonMeasurementValue commonmeasurementValue;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} CommonMeasurementAvailable;

EXTERN int asn1PE_CommonMeasurementAvailable (ASN1CTXT* pctxt, CommonMeasurementAvailable* pvalue);

EXTERN int asn1PD_CommonMeasurementAvailable (ASN1CTXT* pctxt, CommonMeasurementAvailable* pvalue);

EXTERN void asn1Print_CommonMeasurementAvailable
   (const char* name, CommonMeasurementAvailable* pvalue);

EXTERN CommonMeasurementAvailable* asn1Test_CommonMeasurementAvailable
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonMeasurementnotAvailable                             */
/*                                                            */
/**************************************************************/

EXTERN int asn1PE_CommonMeasurementnotAvailable_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PE_CommonMeasurementnotAvailable(pctxt) \
asn1PE_CommonMeasurementnotAvailable_(pctxt, NULL)

EXTERN int asn1PD_CommonMeasurementnotAvailable_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PD_CommonMeasurementnotAvailable(pctxt) \
asn1PD_CommonMeasurementnotAvailable_(pctxt, NULL)

EXTERN void asn1Print_CommonMeasurementnotAvailable_
   (const char* name, void* pvalue);
#define asn1Print_CommonMeasurementnotAvailable(name) \
asn1Print_CommonMeasurementnotAvailable_(name, NULL)

/**************************************************************/
/*                                                            */
/*  CommonMeasurementValueInformation                         */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_CommonMeasurementValueInformation_measurementAvailable 1
#define T_CommonMeasurementValueInformation_measurementnotAvailable 2

typedef struct EXTERN CommonMeasurementValueInformation {
   int t;
   union {
      /* t = 1 */
      CommonMeasurementAvailable *measurementAvailable;
      /* t = 2 */
   } u;
} CommonMeasurementValueInformation;

EXTERN int asn1PE_CommonMeasurementValueInformation (ASN1CTXT* pctxt, CommonMeasurementValueInformation* pvalue);

EXTERN int asn1PD_CommonMeasurementValueInformation (ASN1CTXT* pctxt, CommonMeasurementValueInformation* pvalue);

EXTERN void asn1Print_CommonMeasurementValueInformation
   (const char* name, CommonMeasurementValueInformation* pvalue);

EXTERN CommonMeasurementValueInformation* asn1Test_CommonMeasurementValueInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  N_INSYNC_IND                                              */
/*                                                            */
/**************************************************************/

typedef OSUINT16 N_INSYNC_IND;

EXTERN int asn1PE_N_INSYNC_IND (ASN1CTXT* pctxt, N_INSYNC_IND value);

EXTERN int asn1PD_N_INSYNC_IND (ASN1CTXT* pctxt, N_INSYNC_IND* pvalue);

EXTERN void asn1Print_N_INSYNC_IND
   (const char* name, N_INSYNC_IND* pvalue);

EXTERN N_INSYNC_IND* asn1Test_N_INSYNC_IND
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  N_OUTSYNC_IND                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 N_OUTSYNC_IND;

EXTERN int asn1PE_N_OUTSYNC_IND (ASN1CTXT* pctxt, N_OUTSYNC_IND value);

EXTERN int asn1PD_N_OUTSYNC_IND (ASN1CTXT* pctxt, N_OUTSYNC_IND* pvalue);

EXTERN void asn1Print_N_OUTSYNC_IND
   (const char* name, N_OUTSYNC_IND* pvalue);

EXTERN N_OUTSYNC_IND* asn1Test_N_OUTSYNC_IND
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  T_RLFAILURE                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 T_RLFAILURE;

EXTERN int asn1PE_T_RLFAILURE (ASN1CTXT* pctxt, T_RLFAILURE value);

EXTERN int asn1PD_T_RLFAILURE (ASN1CTXT* pctxt, T_RLFAILURE* pvalue);

EXTERN void asn1Print_T_RLFAILURE
   (const char* name, T_RLFAILURE* pvalue);

EXTERN T_RLFAILURE* asn1Test_T_RLFAILURE
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PrimaryCPICH_Power                                        */
/*                                                            */
/**************************************************************/

typedef OSINT16 PrimaryCPICH_Power;

EXTERN int asn1PE_PrimaryCPICH_Power (ASN1CTXT* pctxt, PrimaryCPICH_Power value);

EXTERN int asn1PD_PrimaryCPICH_Power (ASN1CTXT* pctxt, PrimaryCPICH_Power* pvalue);

EXTERN void asn1Print_PrimaryCPICH_Power
   (const char* name, PrimaryCPICH_Power* pvalue);

EXTERN PrimaryCPICH_Power* asn1Test_PrimaryCPICH_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmitDiversityIndicator                                */
/*                                                            */
/**************************************************************/

typedef enum {
   active_5 = 0,
   inactive_4 = 1
} TransmitDiversityIndicator_Root;

typedef OSUINT32 TransmitDiversityIndicator;

EXTERN int asn1PE_TransmitDiversityIndicator (ASN1CTXT* pctxt, TransmitDiversityIndicator value);

EXTERN int asn1PD_TransmitDiversityIndicator (ASN1CTXT* pctxt, TransmitDiversityIndicator* pvalue);

EXTERN void asn1Print_TransmitDiversityIndicator
   (const char* name, TransmitDiversityIndicator* pvalue);

EXTERN TransmitDiversityIndicator* asn1Test_TransmitDiversityIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PowerRaiseLimit                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PowerRaiseLimit;

EXTERN int asn1PE_PowerRaiseLimit (ASN1CTXT* pctxt, PowerRaiseLimit value);

EXTERN int asn1PD_PowerRaiseLimit (ASN1CTXT* pctxt, PowerRaiseLimit* pvalue);

EXTERN void asn1Print_PowerRaiseLimit
   (const char* name, PowerRaiseLimit* pvalue);

EXTERN PowerRaiseLimit* asn1Test_PowerRaiseLimit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DLPowerAveragingWindowSize                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DLPowerAveragingWindowSize;

EXTERN int asn1PE_DLPowerAveragingWindowSize (ASN1CTXT* pctxt, DLPowerAveragingWindowSize value);

EXTERN int asn1PD_DLPowerAveragingWindowSize (ASN1CTXT* pctxt, DLPowerAveragingWindowSize* pvalue);

EXTERN void asn1Print_DLPowerAveragingWindowSize
   (const char* name, DLPowerAveragingWindowSize* pvalue);

EXTERN DLPowerAveragingWindowSize* asn1Test_DLPowerAveragingWindowSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_FDD_Parameters_iP_SpacingFDD                         */
/*                                                            */
/**************************************************************/

typedef enum {
   sp5 = 0,
   sp7 = 1,
   sp10 = 2,
   sp15 = 3,
   sp20 = 4,
   sp30 = 5,
   sp40 = 6,
   sp50 = 7
} IPDL_FDD_Parameters_iP_SpacingFDD_Root;

typedef OSUINT32 IPDL_FDD_Parameters_iP_SpacingFDD;

EXTERN int asn1PE_IPDL_FDD_Parameters_iP_SpacingFDD (ASN1CTXT* pctxt, IPDL_FDD_Parameters_iP_SpacingFDD value);

EXTERN int asn1PD_IPDL_FDD_Parameters_iP_SpacingFDD (ASN1CTXT* pctxt, IPDL_FDD_Parameters_iP_SpacingFDD* pvalue);

EXTERN void asn1Print_IPDL_FDD_Parameters_iP_SpacingFDD
   (const char* name, IPDL_FDD_Parameters_iP_SpacingFDD* pvalue);

EXTERN IPDL_FDD_Parameters_iP_SpacingFDD* asn1Test_IPDL_FDD_Parameters_iP_SpacingFDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_FDD_Parameters_iP_Length                             */
/*                                                            */
/**************************************************************/

typedef enum {
   len5 = 0,
   len10 = 1
} IPDL_FDD_Parameters_iP_Length_Root;

typedef OSUINT32 IPDL_FDD_Parameters_iP_Length;

EXTERN int asn1PE_IPDL_FDD_Parameters_iP_Length (ASN1CTXT* pctxt, IPDL_FDD_Parameters_iP_Length value);

EXTERN int asn1PD_IPDL_FDD_Parameters_iP_Length (ASN1CTXT* pctxt, IPDL_FDD_Parameters_iP_Length* pvalue);

EXTERN void asn1Print_IPDL_FDD_Parameters_iP_Length
   (const char* name, IPDL_FDD_Parameters_iP_Length* pvalue);

EXTERN IPDL_FDD_Parameters_iP_Length* asn1Test_IPDL_FDD_Parameters_iP_Length
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BurstModeParams                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN BurstModeParams {
   OSUINT8 burstStart;
   OSUINT8 burstLength;
   OSUINT8 burstFreq;
   Asn1RTDList extElem1;
} BurstModeParams;

EXTERN int asn1PE_BurstModeParams (ASN1CTXT* pctxt, BurstModeParams* pvalue);

EXTERN int asn1PD_BurstModeParams (ASN1CTXT* pctxt, BurstModeParams* pvalue);

EXTERN void asn1Print_BurstModeParams
   (const char* name, BurstModeParams* pvalue);

EXTERN BurstModeParams* asn1Test_BurstModeParams
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_FDD_Parameters                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IPDL_FDD_Parameters {
   struct {
      unsigned burstModeParamsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IPDL_FDD_Parameters_iP_SpacingFDD iP_SpacingFDD;
   IPDL_FDD_Parameters_iP_Length iP_Length;
   OSUINT8 seed;
   BurstModeParams burstModeParams;
   OSUINT8 iP_Offset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} IPDL_FDD_Parameters;

EXTERN int asn1PE_IPDL_FDD_Parameters (ASN1CTXT* pctxt, IPDL_FDD_Parameters* pvalue);

EXTERN int asn1PD_IPDL_FDD_Parameters (ASN1CTXT* pctxt, IPDL_FDD_Parameters* pvalue);

EXTERN void asn1Print_IPDL_FDD_Parameters
   (const char* name, IPDL_FDD_Parameters* pvalue);

EXTERN IPDL_FDD_Parameters* asn1Test_IPDL_FDD_Parameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_Indicator                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   active_2 = 0,
   inactive_2 = 1
} IPDL_Indicator_Root;

typedef OSUINT32 IPDL_Indicator;

EXTERN int asn1PE_IPDL_Indicator (ASN1CTXT* pctxt, IPDL_Indicator value);

EXTERN int asn1PD_IPDL_Indicator (ASN1CTXT* pctxt, IPDL_Indicator* pvalue);

EXTERN void asn1Print_IPDL_Indicator
   (const char* name, IPDL_Indicator* pvalue);

EXTERN IPDL_Indicator* asn1Test_IPDL_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellPortionID                                             */
/*                                                            */
/**************************************************************/

typedef OSINT32 CellPortionID;

EXTERN int asn1PE_CellPortionID (ASN1CTXT* pctxt, CellPortionID value);

EXTERN int asn1PD_CellPortionID (ASN1CTXT* pctxt, CellPortionID* pvalue);

EXTERN void asn1Print_CellPortionID
   (const char* name, CellPortionID* pvalue);

EXTERN CellPortionID* asn1Test_CellPortionID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SCH_TimeSlot                                              */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SCH_TimeSlot;

EXTERN int asn1PE_SCH_TimeSlot (ASN1CTXT* pctxt, SCH_TimeSlot value);

EXTERN int asn1PD_SCH_TimeSlot (ASN1CTXT* pctxt, SCH_TimeSlot* pvalue);

EXTERN void asn1Print_SCH_TimeSlot
   (const char* name, SCH_TimeSlot* pvalue);

EXTERN SCH_TimeSlot* asn1Test_SCH_TimeSlot
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PCCPCH_Power                                              */
/*                                                            */
/**************************************************************/

typedef OSINT32 PCCPCH_Power;

EXTERN int asn1PE_PCCPCH_Power (ASN1CTXT* pctxt, PCCPCH_Power value);

EXTERN int asn1PD_PCCPCH_Power (ASN1CTXT* pctxt, PCCPCH_Power* pvalue);

EXTERN void asn1Print_PCCPCH_Power
   (const char* name, PCCPCH_Power* pvalue);

EXTERN PCCPCH_Power* asn1Test_PCCPCH_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SCTD_Indicator                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   active = 0,
   inactive = 1
} SCTD_Indicator_Root;

typedef OSUINT32 SCTD_Indicator;

EXTERN int asn1PE_SCTD_Indicator (ASN1CTXT* pctxt, SCTD_Indicator value);

EXTERN int asn1PD_SCTD_Indicator (ASN1CTXT* pctxt, SCTD_Indicator* pvalue);

EXTERN void asn1Print_SCTD_Indicator
   (const char* name, SCTD_Indicator* pvalue);

EXTERN SCTD_Indicator* asn1Test_SCTD_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimeSlotStatus                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   active_4 = 0,
   not_active = 1
} TimeSlotStatus_Root;

typedef OSUINT32 TimeSlotStatus;

EXTERN int asn1PE_TimeSlotStatus (ASN1CTXT* pctxt, TimeSlotStatus value);

EXTERN int asn1PD_TimeSlotStatus (ASN1CTXT* pctxt, TimeSlotStatus* pvalue);

EXTERN void asn1Print_TimeSlotStatus
   (const char* name, TimeSlotStatus* pvalue);

EXTERN TimeSlotStatus* asn1Test_TimeSlotStatus
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimeSlotDirection                                         */
/*                                                            */
/**************************************************************/

typedef enum {
   ul = 0,
   dl = 1
} TimeSlotDirection_Root;

typedef OSUINT32 TimeSlotDirection;

EXTERN int asn1PE_TimeSlotDirection (ASN1CTXT* pctxt, TimeSlotDirection value);

EXTERN int asn1PD_TimeSlotDirection (ASN1CTXT* pctxt, TimeSlotDirection* pvalue);

EXTERN void asn1Print_TimeSlotDirection
   (const char* name, TimeSlotDirection* pvalue);

EXTERN TimeSlotDirection* asn1Test_TimeSlotDirection
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DwPCH_Power                                               */
/*                                                            */
/**************************************************************/

typedef OSINT32 DwPCH_Power;

EXTERN int asn1PE_DwPCH_Power (ASN1CTXT* pctxt, DwPCH_Power value);

EXTERN int asn1PD_DwPCH_Power (ASN1CTXT* pctxt, DwPCH_Power* pvalue);

EXTERN void asn1Print_DwPCH_Power
   (const char* name, DwPCH_Power* pvalue);

EXTERN DwPCH_Power* asn1Test_DwPCH_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_TDD_Parameters_iP_SpacingTDD                         */
/*                                                            */
/**************************************************************/

typedef enum {
   sp30_1 = 0,
   sp40_1 = 1,
   sp50_1 = 2,
   sp70 = 3,
   sp100 = 4
} IPDL_TDD_Parameters_iP_SpacingTDD_Root;

typedef OSUINT32 IPDL_TDD_Parameters_iP_SpacingTDD;

EXTERN int asn1PE_IPDL_TDD_Parameters_iP_SpacingTDD (ASN1CTXT* pctxt, IPDL_TDD_Parameters_iP_SpacingTDD value);

EXTERN int asn1PD_IPDL_TDD_Parameters_iP_SpacingTDD (ASN1CTXT* pctxt, IPDL_TDD_Parameters_iP_SpacingTDD* pvalue);

EXTERN void asn1Print_IPDL_TDD_Parameters_iP_SpacingTDD
   (const char* name, IPDL_TDD_Parameters_iP_SpacingTDD* pvalue);

EXTERN IPDL_TDD_Parameters_iP_SpacingTDD* asn1Test_IPDL_TDD_Parameters_iP_SpacingTDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_TDD_Parameters_iP_PCCPCH                             */
/*                                                            */
/**************************************************************/

typedef enum {
   switchOff_1_Frame = 0,
   switchOff_2_Frames = 1
} IPDL_TDD_Parameters_iP_PCCPCH_Root;

typedef OSUINT32 IPDL_TDD_Parameters_iP_PCCPCH;

EXTERN int asn1PE_IPDL_TDD_Parameters_iP_PCCPCH (ASN1CTXT* pctxt, IPDL_TDD_Parameters_iP_PCCPCH value);

EXTERN int asn1PD_IPDL_TDD_Parameters_iP_PCCPCH (ASN1CTXT* pctxt, IPDL_TDD_Parameters_iP_PCCPCH* pvalue);

EXTERN void asn1Print_IPDL_TDD_Parameters_iP_PCCPCH
   (const char* name, IPDL_TDD_Parameters_iP_PCCPCH* pvalue);

EXTERN IPDL_TDD_Parameters_iP_PCCPCH* asn1Test_IPDL_TDD_Parameters_iP_PCCPCH
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_TDD_Parameters                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IPDL_TDD_Parameters {
   struct {
      unsigned burstModeParamsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IPDL_TDD_Parameters_iP_SpacingTDD iP_SpacingTDD;
   OSUINT16 iP_Start;
   OSUINT8 iP_Slot;
   IPDL_TDD_Parameters_iP_PCCPCH iP_PCCPCH;
   BurstModeParams burstModeParams;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} IPDL_TDD_Parameters;

EXTERN int asn1PE_IPDL_TDD_Parameters (ASN1CTXT* pctxt, IPDL_TDD_Parameters* pvalue);

EXTERN int asn1PD_IPDL_TDD_Parameters (ASN1CTXT* pctxt, IPDL_TDD_Parameters* pvalue);

EXTERN void asn1Print_IPDL_TDD_Parameters
   (const char* name, IPDL_TDD_Parameters* pvalue);

EXTERN IPDL_TDD_Parameters* asn1Test_IPDL_TDD_Parameters
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_TDD_Parameters_LCR_iP_SpacingTDD                     */
/*                                                            */
/**************************************************************/

typedef enum {
   sp30_2 = 0,
   sp40_2 = 1,
   sp50_2 = 2,
   sp70_1 = 3,
   sp100_1 = 4
} IPDL_TDD_Parameters_LCR_iP_SpacingTDD_Root;

typedef OSUINT32 IPDL_TDD_Parameters_LCR_iP_SpacingTDD;

EXTERN int asn1PE_IPDL_TDD_Parameters_LCR_iP_SpacingTDD (ASN1CTXT* pctxt, IPDL_TDD_Parameters_LCR_iP_SpacingTDD value);

EXTERN int asn1PD_IPDL_TDD_Parameters_LCR_iP_SpacingTDD (ASN1CTXT* pctxt, IPDL_TDD_Parameters_LCR_iP_SpacingTDD* pvalue);

EXTERN void asn1Print_IPDL_TDD_Parameters_LCR_iP_SpacingTDD
   (const char* name, IPDL_TDD_Parameters_LCR_iP_SpacingTDD* pvalue);

EXTERN IPDL_TDD_Parameters_LCR_iP_SpacingTDD* asn1Test_IPDL_TDD_Parameters_LCR_iP_SpacingTDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_TDD_Parameters_LCR_iP_Sub                            */
/*                                                            */
/**************************************************************/

typedef enum {
   first = 0,
   second = 1,
   both = 2
} IPDL_TDD_Parameters_LCR_iP_Sub_Root;

typedef OSUINT32 IPDL_TDD_Parameters_LCR_iP_Sub;

EXTERN int asn1PE_IPDL_TDD_Parameters_LCR_iP_Sub (ASN1CTXT* pctxt, IPDL_TDD_Parameters_LCR_iP_Sub value);

EXTERN int asn1PD_IPDL_TDD_Parameters_LCR_iP_Sub (ASN1CTXT* pctxt, IPDL_TDD_Parameters_LCR_iP_Sub* pvalue);

EXTERN void asn1Print_IPDL_TDD_Parameters_LCR_iP_Sub
   (const char* name, IPDL_TDD_Parameters_LCR_iP_Sub* pvalue);

EXTERN IPDL_TDD_Parameters_LCR_iP_Sub* asn1Test_IPDL_TDD_Parameters_LCR_iP_Sub
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IPDL_TDD_Parameters_LCR                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN IPDL_TDD_Parameters_LCR {
   struct {
      unsigned burstModeParamsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IPDL_TDD_Parameters_LCR_iP_SpacingTDD iP_SpacingTDD;
   OSUINT16 iP_Start;
   IPDL_TDD_Parameters_LCR_iP_Sub iP_Sub;
   BurstModeParams burstModeParams;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} IPDL_TDD_Parameters_LCR;

EXTERN int asn1PE_IPDL_TDD_Parameters_LCR (ASN1CTXT* pctxt, IPDL_TDD_Parameters_LCR* pvalue);

EXTERN int asn1PD_IPDL_TDD_Parameters_LCR (ASN1CTXT* pctxt, IPDL_TDD_Parameters_LCR* pvalue);

EXTERN void asn1Print_IPDL_TDD_Parameters_LCR
   (const char* name, IPDL_TDD_Parameters_LCR* pvalue);

EXTERN IPDL_TDD_Parameters_LCR* asn1Test_IPDL_TDD_Parameters_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AddorDeleteIndicator                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   add = 0,
   delete_ = 1
} AddorDeleteIndicator_Root;

typedef OSUINT32 AddorDeleteIndicator;

EXTERN int asn1PE_AddorDeleteIndicator (ASN1CTXT* pctxt, AddorDeleteIndicator value);

EXTERN int asn1PD_AddorDeleteIndicator (ASN1CTXT* pctxt, AddorDeleteIndicator* pvalue);

EXTERN void asn1Print_AddorDeleteIndicator
   (const char* name, AddorDeleteIndicator* pvalue);

EXTERN AddorDeleteIndicator* asn1Test_AddorDeleteIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IB_Type                                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   mIB = 0,
   sB1 = 1,
   sB2 = 2,
   sIB1 = 3,
   sIB2 = 4,
   sIB3 = 5,
   sIB4 = 6,
   sIB5 = 7,
   sIB6 = 8,
   sIB7 = 9,
   sIB8 = 10,
   sIB9 = 11,
   sIB10 = 12,
   sIB11 = 13,
   sIB12 = 14,
   sIB13 = 15,
   sIB13dot1 = 16,
   sIB13dot2 = 17,
   sIB13dot3 = 18,
   sIB13dot4 = 19,
   sIB14 = 20,
   sIB15 = 21,
   sIB15dot1 = 22,
   sIB15dot2 = 23,
   sIB15dot3 = 24,
   sIB16 = 25
} IB_Type_Root;

typedef enum {
   sIB17 = 26,
   sIB15dot4 = 27,
   sIB18 = 28,
   sIB15dot5 = 29,
   sIB5bis = 30
} IB_Type_Ext;

typedef OSUINT32 IB_Type;

EXTERN int asn1PE_IB_Type (ASN1CTXT* pctxt, IB_Type value);

EXTERN int asn1PD_IB_Type (ASN1CTXT* pctxt, IB_Type* pvalue);

EXTERN void asn1Print_IB_Type
   (const char* name, IB_Type* pvalue);

EXTERN IB_Type* asn1Test_IB_Type
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IB_OC_ID                                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 IB_OC_ID;

EXTERN int asn1PE_IB_OC_ID (ASN1CTXT* pctxt, IB_OC_ID value);

EXTERN int asn1PD_IB_OC_ID (ASN1CTXT* pctxt, IB_OC_ID* pvalue);

EXTERN void asn1Print_IB_OC_ID
   (const char* name, IB_OC_ID* pvalue);

EXTERN IB_OC_ID* asn1Test_IB_OC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SIB_Originator                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   nodeB = 0,
   cRNC = 1
} SIB_Originator_Root;

typedef OSUINT32 SIB_Originator;

EXTERN int asn1PE_SIB_Originator (ASN1CTXT* pctxt, SIB_Originator value);

EXTERN int asn1PD_SIB_Originator (ASN1CTXT* pctxt, SIB_Originator* pvalue);

EXTERN void asn1Print_SIB_Originator
   (const char* name, SIB_Originator* pvalue);

EXTERN SIB_Originator* asn1Test_SIB_Originator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IB_SG_REP                                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   rep4 = 0,
   rep8 = 1,
   rep16 = 2,
   rep32 = 3,
   rep64 = 4,
   rep128 = 5,
   rep256 = 6,
   rep512 = 7,
   rep1024 = 8,
   rep2048 = 9,
   rep4096 = 10
} IB_SG_REP_Root;

typedef OSUINT32 IB_SG_REP;

EXTERN int asn1PE_IB_SG_REP (ASN1CTXT* pctxt, IB_SG_REP value);

EXTERN int asn1PD_IB_SG_REP (ASN1CTXT* pctxt, IB_SG_REP* pvalue);

EXTERN void asn1Print_IB_SG_REP
   (const char* name, IB_SG_REP* pvalue);

EXTERN IB_SG_REP* asn1Test_IB_SG_REP
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IB_SG_POS                                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 IB_SG_POS;

EXTERN int asn1PE_IB_SG_POS (ASN1CTXT* pctxt, IB_SG_POS value);

EXTERN int asn1PD_IB_SG_POS (ASN1CTXT* pctxt, IB_SG_POS* pvalue);

EXTERN void asn1Print_IB_SG_POS
   (const char* name, IB_SG_POS* pvalue);

EXTERN IB_SG_POS* asn1Test_IB_SG_POS
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Segment_Type                                              */
/*                                                            */
/**************************************************************/

typedef enum {
   first_segment = 0,
   first_segment_short = 1,
   subsequent_segment = 2,
   last_segment = 3,
   last_segment_short = 4,
   complete_SIB = 5,
   complete_SIB_short = 6
} Segment_Type_Root;

typedef OSUINT32 Segment_Type;

EXTERN int asn1PE_Segment_Type (ASN1CTXT* pctxt, Segment_Type value);

EXTERN int asn1PD_Segment_Type (ASN1CTXT* pctxt, Segment_Type* pvalue);

EXTERN void asn1Print_Segment_Type
   (const char* name, Segment_Type* pvalue);

EXTERN Segment_Type* asn1Test_Segment_Type
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IB_SG_DATA                                                */
/*                                                            */
/**************************************************************/

typedef ASN1DynBitStr IB_SG_DATA;

EXTERN int asn1PE_IB_SG_DATA (ASN1CTXT* pctxt, IB_SG_DATA value);

EXTERN int asn1PD_IB_SG_DATA (ASN1CTXT* pctxt, IB_SG_DATA* pvalue);

EXTERN void asn1Print_IB_SG_DATA
   (const char* name, IB_SG_DATA* pvalue);

EXTERN IB_SG_DATA* asn1Test_IB_SG_DATA
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_ScramblingCodeNumber                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT32 UL_ScramblingCodeNumber;

EXTERN int asn1PE_UL_ScramblingCodeNumber (ASN1CTXT* pctxt, UL_ScramblingCodeNumber value);

EXTERN int asn1PD_UL_ScramblingCodeNumber (ASN1CTXT* pctxt, UL_ScramblingCodeNumber* pvalue);

EXTERN void asn1Print_UL_ScramblingCodeNumber
   (const char* name, UL_ScramblingCodeNumber* pvalue);

EXTERN UL_ScramblingCodeNumber* asn1Test_UL_ScramblingCodeNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_ScramblingCodeLength                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   short_ = 0,
   long_ = 1
} UL_ScramblingCodeLength_Root;

typedef OSUINT32 UL_ScramblingCodeLength;

EXTERN int asn1PE_UL_ScramblingCodeLength (ASN1CTXT* pctxt, UL_ScramblingCodeLength value);

EXTERN int asn1PD_UL_ScramblingCodeLength (ASN1CTXT* pctxt, UL_ScramblingCodeLength* pvalue);

EXTERN void asn1Print_UL_ScramblingCodeLength
   (const char* name, UL_ScramblingCodeLength* pvalue);

EXTERN UL_ScramblingCodeLength* asn1Test_UL_ScramblingCodeLength
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_ScramblingCode                                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UL_ScramblingCode {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UL_ScramblingCodeNumber uL_ScramblingCodeNumber;
   UL_ScramblingCodeLength uL_ScramblingCodeLength;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UL_ScramblingCode;

EXTERN int asn1PE_UL_ScramblingCode (ASN1CTXT* pctxt, UL_ScramblingCode* pvalue);

EXTERN int asn1PD_UL_ScramblingCode (ASN1CTXT* pctxt, UL_ScramblingCode* pvalue);

EXTERN void asn1Print_UL_ScramblingCode
   (const char* name, UL_ScramblingCode* pvalue);

EXTERN UL_ScramblingCode* asn1Test_UL_ScramblingCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MinUL_ChannelisationCodeLength                            */
/*                                                            */
/**************************************************************/

typedef enum {
   v4_6 = 0,
   v8_5 = 1,
   v16_4 = 2,
   v32_2 = 3,
   v64_1 = 4,
   v128_1 = 5,
   v256_1 = 6
} MinUL_ChannelisationCodeLength_Root;

typedef OSUINT32 MinUL_ChannelisationCodeLength;

EXTERN int asn1PE_MinUL_ChannelisationCodeLength (ASN1CTXT* pctxt, MinUL_ChannelisationCodeLength value);

EXTERN int asn1PD_MinUL_ChannelisationCodeLength (ASN1CTXT* pctxt, MinUL_ChannelisationCodeLength* pvalue);

EXTERN void asn1Print_MinUL_ChannelisationCodeLength
   (const char* name, MinUL_ChannelisationCodeLength* pvalue);

EXTERN MinUL_ChannelisationCodeLength* asn1Test_MinUL_ChannelisationCodeLength
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaxNrOfUL_DPDCHs                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 MaxNrOfUL_DPDCHs;

EXTERN int asn1PE_MaxNrOfUL_DPDCHs (ASN1CTXT* pctxt, MaxNrOfUL_DPDCHs value);

EXTERN int asn1PD_MaxNrOfUL_DPDCHs (ASN1CTXT* pctxt, MaxNrOfUL_DPDCHs* pvalue);

EXTERN void asn1Print_MaxNrOfUL_DPDCHs
   (const char* name, MaxNrOfUL_DPDCHs* pvalue);

EXTERN MaxNrOfUL_DPDCHs* asn1Test_MaxNrOfUL_DPDCHs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_DPCCH_SlotFormat                                       */
/*                                                            */
/**************************************************************/

typedef OSINT32 UL_DPCCH_SlotFormat;

EXTERN int asn1PE_UL_DPCCH_SlotFormat (ASN1CTXT* pctxt, UL_DPCCH_SlotFormat value);

EXTERN int asn1PD_UL_DPCCH_SlotFormat (ASN1CTXT* pctxt, UL_DPCCH_SlotFormat* pvalue);

EXTERN void asn1Print_UL_DPCCH_SlotFormat
   (const char* name, UL_DPCCH_SlotFormat* pvalue);

EXTERN UL_DPCCH_SlotFormat* asn1Test_UL_DPCCH_SlotFormat
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_SIR                                                    */
/*                                                            */
/**************************************************************/

typedef OSINT16 UL_SIR;

EXTERN int asn1PE_UL_SIR (ASN1CTXT* pctxt, UL_SIR value);

EXTERN int asn1PD_UL_SIR (ASN1CTXT* pctxt, UL_SIR* pvalue);

EXTERN void asn1Print_UL_SIR
   (const char* name, UL_SIR* pvalue);

EXTERN UL_SIR* asn1Test_UL_SIR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DiversityMode                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   none = 0,
   sTTD = 1,
   closed_loop_mode1 = 2,
   not_used_closed_loop_mode2 = 3
} DiversityMode_Root;

typedef OSUINT32 DiversityMode;

EXTERN int asn1PE_DiversityMode (ASN1CTXT* pctxt, DiversityMode value);

EXTERN int asn1PD_DiversityMode (ASN1CTXT* pctxt, DiversityMode* pvalue);

EXTERN void asn1Print_DiversityMode
   (const char* name, DiversityMode* pvalue);

EXTERN DiversityMode* asn1Test_DiversityMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_DPCH_SlotFormat                                        */
/*                                                            */
/**************************************************************/

typedef OSINT32 DL_DPCH_SlotFormat;

EXTERN int asn1PE_DL_DPCH_SlotFormat (ASN1CTXT* pctxt, DL_DPCH_SlotFormat value);

EXTERN int asn1PD_DL_DPCH_SlotFormat (ASN1CTXT* pctxt, DL_DPCH_SlotFormat* pvalue);

EXTERN void asn1Print_DL_DPCH_SlotFormat
   (const char* name, DL_DPCH_SlotFormat* pvalue);

EXTERN DL_DPCH_SlotFormat* asn1Test_DL_DPCH_SlotFormat
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCI_SignallingMode_TFCI_SignallingOption                 */
/*                                                            */
/**************************************************************/

typedef enum {
   normal_1 = 0,
   not_Used_split = 1
} TFCI_SignallingMode_TFCI_SignallingOption_Root;

typedef OSUINT32 TFCI_SignallingMode_TFCI_SignallingOption;

EXTERN int asn1PE_TFCI_SignallingMode_TFCI_SignallingOption (ASN1CTXT* pctxt, TFCI_SignallingMode_TFCI_SignallingOption value);

EXTERN int asn1PD_TFCI_SignallingMode_TFCI_SignallingOption (ASN1CTXT* pctxt, TFCI_SignallingMode_TFCI_SignallingOption* pvalue);

EXTERN void asn1Print_TFCI_SignallingMode_TFCI_SignallingOption
   (const char* name, TFCI_SignallingMode_TFCI_SignallingOption* pvalue);

EXTERN TFCI_SignallingMode_TFCI_SignallingOption* asn1Test_TFCI_SignallingMode_TFCI_SignallingOption
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFCI_SignallingMode                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TFCI_SignallingMode {
   struct {
      unsigned not_Used_splitTypePresent : 1;
      unsigned not_Used_lengthOfTFCI2Present : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TFCI_SignallingMode_TFCI_SignallingOption tFCI_SignallingOption;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TFCI_SignallingMode;

EXTERN int asn1PE_TFCI_SignallingMode (ASN1CTXT* pctxt, TFCI_SignallingMode* pvalue);

EXTERN int asn1PD_TFCI_SignallingMode (ASN1CTXT* pctxt, TFCI_SignallingMode* pvalue);

EXTERN void asn1Print_TFCI_SignallingMode
   (const char* name, TFCI_SignallingMode* pvalue);

EXTERN TFCI_SignallingMode* asn1Test_TFCI_SignallingMode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_TPC_DownlinkStepSize                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   step_size0_5 = 0,
   step_size1 = 1,
   step_size1_5 = 2,
   step_size2 = 3
} FDD_TPC_DownlinkStepSize_Root;

typedef OSUINT32 FDD_TPC_DownlinkStepSize;

EXTERN int asn1PE_FDD_TPC_DownlinkStepSize (ASN1CTXT* pctxt, FDD_TPC_DownlinkStepSize value);

EXTERN int asn1PD_FDD_TPC_DownlinkStepSize (ASN1CTXT* pctxt, FDD_TPC_DownlinkStepSize* pvalue);

EXTERN void asn1Print_FDD_TPC_DownlinkStepSize
   (const char* name, FDD_TPC_DownlinkStepSize* pvalue);

EXTERN FDD_TPC_DownlinkStepSize* asn1Test_FDD_TPC_DownlinkStepSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LimitedPowerIncrease                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   used = 0,
   not_used = 1
} LimitedPowerIncrease_Root;

typedef OSUINT32 LimitedPowerIncrease;

EXTERN int asn1PE_LimitedPowerIncrease (ASN1CTXT* pctxt, LimitedPowerIncrease value);

EXTERN int asn1PD_LimitedPowerIncrease (ASN1CTXT* pctxt, LimitedPowerIncrease* pvalue);

EXTERN void asn1Print_LimitedPowerIncrease
   (const char* name, LimitedPowerIncrease* pvalue);

EXTERN LimitedPowerIncrease* asn1Test_LimitedPowerIncrease
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InnerLoopDLPCStatus                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   active_1 = 0,
   inactive_1 = 1
} InnerLoopDLPCStatus_Root;

typedef OSUINT32 InnerLoopDLPCStatus;

EXTERN int asn1PE_InnerLoopDLPCStatus (ASN1CTXT* pctxt, InnerLoopDLPCStatus value);

EXTERN int asn1PD_InnerLoopDLPCStatus (ASN1CTXT* pctxt, InnerLoopDLPCStatus* pvalue);

EXTERN void asn1Print_InnerLoopDLPCStatus
   (const char* name, InnerLoopDLPCStatus* pvalue);

EXTERN InnerLoopDLPCStatus* asn1Test_InnerLoopDLPCStatus
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RL_ID                                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RL_ID;

EXTERN int asn1PE_RL_ID (ASN1CTXT* pctxt, RL_ID value);

EXTERN int asn1PD_RL_ID (ASN1CTXT* pctxt, RL_ID* pvalue);

EXTERN void asn1Print_RL_ID
   (const char* name, RL_ID* pvalue);

EXTERN RL_ID* asn1Test_RL_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FirstRLS_Indicator                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   first_RLS = 0,
   not_first_RLS = 1
} FirstRLS_Indicator_Root;

typedef OSUINT32 FirstRLS_Indicator;

EXTERN int asn1PE_FirstRLS_Indicator (ASN1CTXT* pctxt, FirstRLS_Indicator value);

EXTERN int asn1PD_FirstRLS_Indicator (ASN1CTXT* pctxt, FirstRLS_Indicator* pvalue);

EXTERN void asn1Print_FirstRLS_Indicator
   (const char* name, FirstRLS_Indicator* pvalue);

EXTERN FirstRLS_Indicator* asn1Test_FirstRLS_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FrameOffset                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 FrameOffset;

EXTERN int asn1PE_FrameOffset (ASN1CTXT* pctxt, FrameOffset value);

EXTERN int asn1PD_FrameOffset (ASN1CTXT* pctxt, FrameOffset* pvalue);

EXTERN void asn1Print_FrameOffset
   (const char* name, FrameOffset* pvalue);

EXTERN FrameOffset* asn1Test_FrameOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ChipOffset                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT16 ChipOffset;

EXTERN int asn1PE_ChipOffset (ASN1CTXT* pctxt, ChipOffset value);

EXTERN int asn1PD_ChipOffset (ASN1CTXT* pctxt, ChipOffset* pvalue);

EXTERN void asn1Print_ChipOffset
   (const char* name, ChipOffset* pvalue);

EXTERN ChipOffset* asn1Test_ChipOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PropagationDelay                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PropagationDelay;

EXTERN int asn1PE_PropagationDelay (ASN1CTXT* pctxt, PropagationDelay value);

EXTERN int asn1PD_PropagationDelay (ASN1CTXT* pctxt, PropagationDelay* pvalue);

EXTERN void asn1Print_PropagationDelay
   (const char* name, PropagationDelay* pvalue);

EXTERN PropagationDelay* asn1Test_PropagationDelay
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DiversityControlField                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   may = 0,
   must = 1,
   must_not = 2
} DiversityControlField_Root;

typedef OSUINT32 DiversityControlField;

EXTERN int asn1PE_DiversityControlField (ASN1CTXT* pctxt, DiversityControlField value);

EXTERN int asn1PD_DiversityControlField (ASN1CTXT* pctxt, DiversityControlField* pvalue);

EXTERN void asn1Print_DiversityControlField
   (const char* name, DiversityControlField* pvalue);

EXTERN DiversityControlField* asn1Test_DiversityControlField
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmissionGapPatternSequenceCodeInformation             */
/*                                                            */
/**************************************************************/

typedef enum {
   code_change = 0,
   nocode_change = 1
} TransmissionGapPatternSequenceCodeInformation_Root;

typedef OSUINT32 TransmissionGapPatternSequenceCodeInformation;

EXTERN int asn1PE_TransmissionGapPatternSequenceCodeInformation (ASN1CTXT* pctxt, TransmissionGapPatternSequenceCodeInformation value);

EXTERN int asn1PD_TransmissionGapPatternSequenceCodeInformation (ASN1CTXT* pctxt, TransmissionGapPatternSequenceCodeInformation* pvalue);

EXTERN void asn1Print_TransmissionGapPatternSequenceCodeInformation
   (const char* name, TransmissionGapPatternSequenceCodeInformation* pvalue);

EXTERN TransmissionGapPatternSequenceCodeInformation* asn1Test_TransmissionGapPatternSequenceCodeInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_DL_CodeInformationItem                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN FDD_DL_CodeInformationItem {
   struct {
      unsigned transmissionGapPatternSequenceCodeInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DL_ScramblingCode dl_ScramblingCode;
   FDD_DL_ChannelisationCodeNumber fdd_DL_ChannelisationCodeNumber;
   TransmissionGapPatternSequenceCodeInformation transmissionGapPatternSequenceCodeInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} FDD_DL_CodeInformationItem;

EXTERN int asn1PE_FDD_DL_CodeInformationItem (ASN1CTXT* pctxt, FDD_DL_CodeInformationItem* pvalue);

EXTERN int asn1PD_FDD_DL_CodeInformationItem (ASN1CTXT* pctxt, FDD_DL_CodeInformationItem* pvalue);

EXTERN void asn1Print_FDD_DL_CodeInformationItem
   (const char* name, FDD_DL_CodeInformationItem* pvalue);

EXTERN FDD_DL_CodeInformationItem* asn1Test_FDD_DL_CodeInformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_DL_CodeInformation                                    */
/*                                                            */
/**************************************************************/

/* List of FDD_DL_CodeInformationItem */
typedef Asn1RTDList FDD_DL_CodeInformation;

EXTERN int asn1PE_FDD_DL_CodeInformation (ASN1CTXT* pctxt, FDD_DL_CodeInformation* pvalue);

EXTERN int asn1PD_FDD_DL_CodeInformation (ASN1CTXT* pctxt, FDD_DL_CodeInformation* pvalue);

EXTERN void asn1Print_FDD_DL_CodeInformation
   (const char* name, FDD_DL_CodeInformation* pvalue);

EXTERN FDD_DL_CodeInformation* asn1Test_FDD_DL_CodeInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Max_Set_E_DPDCHs                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   vN64 = 0,
   vN32 = 1,
   vN16 = 2,
   vN8 = 3,
   v2xN4 = 4,
   v2xN2 = 5,
   v2xN2plus2xN4 = 6
} Max_Set_E_DPDCHs_Root;

typedef OSUINT32 Max_Set_E_DPDCHs;

EXTERN int asn1PE_Max_Set_E_DPDCHs (ASN1CTXT* pctxt, Max_Set_E_DPDCHs value);

EXTERN int asn1PD_Max_Set_E_DPDCHs (ASN1CTXT* pctxt, Max_Set_E_DPDCHs* pvalue);

EXTERN void asn1Print_Max_Set_E_DPDCHs
   (const char* name, Max_Set_E_DPDCHs* pvalue);

EXTERN Max_Set_E_DPDCHs* asn1Test_Max_Set_E_DPDCHs
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_TFCS_Index                                          */
/*                                                            */
/**************************************************************/

typedef OSINT32 E_DCH_TFCS_Index;

EXTERN int asn1PE_E_DCH_TFCS_Index (ASN1CTXT* pctxt, E_DCH_TFCS_Index value);

EXTERN int asn1PD_E_DCH_TFCS_Index (ASN1CTXT* pctxt, E_DCH_TFCS_Index* pvalue);

EXTERN void asn1Print_E_DCH_TFCS_Index
   (const char* name, E_DCH_TFCS_Index* pvalue);

EXTERN E_DCH_TFCS_Index* asn1Test_E_DCH_TFCS_Index
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_TFCI                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_TFCI;

EXTERN int asn1PE_E_TFCI (ASN1CTXT* pctxt, E_TFCI value);

EXTERN int asn1PD_E_TFCI (ASN1CTXT* pctxt, E_TFCI* pvalue);

EXTERN void asn1Print_E_TFCI
   (const char* name, E_TFCI* pvalue);

EXTERN E_TFCI* asn1Test_E_TFCI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Reference_E_TFCI_PO                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 Reference_E_TFCI_PO;

EXTERN int asn1PE_Reference_E_TFCI_PO (ASN1CTXT* pctxt, Reference_E_TFCI_PO value);

EXTERN int asn1PD_Reference_E_TFCI_PO (ASN1CTXT* pctxt, Reference_E_TFCI_PO* pvalue);

EXTERN void asn1Print_Reference_E_TFCI_PO
   (const char* name, Reference_E_TFCI_PO* pvalue);

EXTERN Reference_E_TFCI_PO* asn1Test_Reference_E_TFCI_PO
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Reference_E_TFCI_Information_Item                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Reference_E_TFCI_Information_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_TFCI reference_E_TFCI;
   Reference_E_TFCI_PO reference_E_TFCI_PO;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Reference_E_TFCI_Information_Item;

EXTERN int asn1PE_Reference_E_TFCI_Information_Item (ASN1CTXT* pctxt, Reference_E_TFCI_Information_Item* pvalue);

EXTERN int asn1PD_Reference_E_TFCI_Information_Item (ASN1CTXT* pctxt, Reference_E_TFCI_Information_Item* pvalue);

EXTERN void asn1Print_Reference_E_TFCI_Information_Item
   (const char* name, Reference_E_TFCI_Information_Item* pvalue);

EXTERN Reference_E_TFCI_Information_Item* asn1Test_Reference_E_TFCI_Information_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Reference_E_TFCI_Information                              */
/*                                                            */
/**************************************************************/

/* List of Reference_E_TFCI_Information_Item */
typedef Asn1RTDList Reference_E_TFCI_Information;

EXTERN int asn1PE_Reference_E_TFCI_Information (ASN1CTXT* pctxt, Reference_E_TFCI_Information* pvalue);

EXTERN int asn1PD_Reference_E_TFCI_Information (ASN1CTXT* pctxt, Reference_E_TFCI_Information* pvalue);

EXTERN void asn1Print_Reference_E_TFCI_Information
   (const char* name, Reference_E_TFCI_Information* pvalue);

EXTERN Reference_E_TFCI_Information* asn1Test_Reference_E_TFCI_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_TFCS_Information                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_TFCS_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_TFCS_Index e_DCH_TFCS_Index;
   E_TFCI e_DCH_Min_Set_E_TFCI;
   Reference_E_TFCI_Information reference_E_TFCI_Information;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_TFCS_Information;

EXTERN int asn1PE_E_TFCS_Information (ASN1CTXT* pctxt, E_TFCS_Information* pvalue);

EXTERN int asn1PD_E_TFCS_Information (ASN1CTXT* pctxt, E_TFCS_Information* pvalue);

EXTERN void asn1Print_E_TFCS_Information
   (const char* name, E_TFCS_Information* pvalue);

EXTERN E_TFCS_Information* asn1Test_E_TFCS_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_TTI                                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   e_TTI_2ms = 0,
   e_TTI_10ms = 1
} E_TTI_Root;

typedef OSUINT32 E_TTI;

EXTERN int asn1PE_E_TTI (ASN1CTXT* pctxt, E_TTI value);

EXTERN int asn1PD_E_TTI (ASN1CTXT* pctxt, E_TTI* pvalue);

EXTERN void asn1Print_E_TTI
   (const char* name, E_TTI* pvalue);

EXTERN E_TTI* asn1Test_E_TTI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DPCCH_PO                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_DPCCH_PO;

EXTERN int asn1PE_E_DPCCH_PO (ASN1CTXT* pctxt, E_DPCCH_PO value);

EXTERN int asn1PD_E_DPCCH_PO (ASN1CTXT* pctxt, E_DPCCH_PO* pvalue);

EXTERN void asn1Print_E_DPCCH_PO
   (const char* name, E_DPCCH_PO* pvalue);

EXTERN E_DPCCH_PO* asn1Test_E_DPCCH_PO
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DPCHOffset                                            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TDD_DPCHOffset_initialOffset  1
#define T_TDD_DPCHOffset_noinitialOffset 2

typedef struct EXTERN TDD_DPCHOffset {
   int t;
   union {
      /* t = 1 */
      OSUINT8 initialOffset;
      /* t = 2 */
      OSUINT8 noinitialOffset;
   } u;
} TDD_DPCHOffset;

EXTERN int asn1PE_TDD_DPCHOffset (ASN1CTXT* pctxt, TDD_DPCHOffset* pvalue);

EXTERN int asn1PD_TDD_DPCHOffset (ASN1CTXT* pctxt, TDD_DPCHOffset* pvalue);

EXTERN void asn1Print_TDD_DPCHOffset
   (const char* name, TDD_DPCHOffset* pvalue);

EXTERN TDD_DPCHOffset* asn1Test_TDD_DPCHOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DPCH_ID                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DPCH_ID;

EXTERN int asn1PE_DPCH_ID (ASN1CTXT* pctxt, DPCH_ID value);

EXTERN int asn1PD_DPCH_ID (ASN1CTXT* pctxt, DPCH_ID* pvalue);

EXTERN void asn1Print_DPCH_ID
   (const char* name, DPCH_ID* pvalue);

EXTERN DPCH_ID* asn1Test_DPCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_UL_Code_InformationItem                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TDD_UL_Code_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DPCH_ID dPCH_ID;
   TDD_ChannelisationCode tdd_ChannelisationCode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TDD_UL_Code_InformationItem;

EXTERN int asn1PE_TDD_UL_Code_InformationItem (ASN1CTXT* pctxt, TDD_UL_Code_InformationItem* pvalue);

EXTERN int asn1PD_TDD_UL_Code_InformationItem (ASN1CTXT* pctxt, TDD_UL_Code_InformationItem* pvalue);

EXTERN void asn1Print_TDD_UL_Code_InformationItem
   (const char* name, TDD_UL_Code_InformationItem* pvalue);

EXTERN TDD_UL_Code_InformationItem* asn1Test_TDD_UL_Code_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_UL_Code_Information                                   */
/*                                                            */
/**************************************************************/

/* List of TDD_UL_Code_InformationItem */
typedef Asn1RTDList TDD_UL_Code_Information;

EXTERN int asn1PE_TDD_UL_Code_Information (ASN1CTXT* pctxt, TDD_UL_Code_Information* pvalue);

EXTERN int asn1PD_TDD_UL_Code_Information (ASN1CTXT* pctxt, TDD_UL_Code_Information* pvalue);

EXTERN void asn1Print_TDD_UL_Code_Information
   (const char* name, TDD_UL_Code_Information* pvalue);

EXTERN TDD_UL_Code_Information* asn1Test_TDD_UL_Code_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_Timeslot_InformationItem                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UL_Timeslot_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlot timeSlot;
   MidambleShiftAndBurstType midambleShiftAndBurstType;
   TFCI_Presence tFCI_Presence;
   TDD_UL_Code_Information uL_Code_InformationList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UL_Timeslot_InformationItem;

EXTERN int asn1PE_UL_Timeslot_InformationItem (ASN1CTXT* pctxt, UL_Timeslot_InformationItem* pvalue);

EXTERN int asn1PD_UL_Timeslot_InformationItem (ASN1CTXT* pctxt, UL_Timeslot_InformationItem* pvalue);

EXTERN void asn1Print_UL_Timeslot_InformationItem
   (const char* name, UL_Timeslot_InformationItem* pvalue);

EXTERN UL_Timeslot_InformationItem* asn1Test_UL_Timeslot_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_Timeslot_Information                                   */
/*                                                            */
/**************************************************************/

/* List of UL_Timeslot_InformationItem */
typedef Asn1RTDList UL_Timeslot_Information;

EXTERN int asn1PE_UL_Timeslot_Information (ASN1CTXT* pctxt, UL_Timeslot_Information* pvalue);

EXTERN int asn1PD_UL_Timeslot_Information (ASN1CTXT* pctxt, UL_Timeslot_Information* pvalue);

EXTERN void asn1Print_UL_Timeslot_Information
   (const char* name, UL_Timeslot_Information* pvalue);

EXTERN UL_Timeslot_Information* asn1Test_UL_Timeslot_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  QPSK_UL_DPCH_TimeSlotFormatTDD_LCR                        */
/*                                                            */
/**************************************************************/

typedef OSINT32 QPSK_UL_DPCH_TimeSlotFormatTDD_LCR;

EXTERN int asn1PE_QPSK_UL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, QPSK_UL_DPCH_TimeSlotFormatTDD_LCR value);

EXTERN int asn1PD_QPSK_UL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, QPSK_UL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN void asn1Print_QPSK_UL_DPCH_TimeSlotFormatTDD_LCR
   (const char* name, QPSK_UL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN QPSK_UL_DPCH_TimeSlotFormatTDD_LCR* asn1Test_QPSK_UL_DPCH_TimeSlotFormatTDD_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR                    */
/*                                                            */
/**************************************************************/

typedef OSINT32 EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR;

EXTERN int asn1PE_EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR value);

EXTERN int asn1PD_EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR (ASN1CTXT* pctxt, EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN void asn1Print_EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR
   (const char* name, EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR* pvalue);

EXTERN EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR* asn1Test_EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_UL_DPCH_TimeSlotFormat_LCR                            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TDD_UL_DPCH_TimeSlotFormat_LCR_qPSK 1
#define T_TDD_UL_DPCH_TimeSlotFormat_LCR_eightPSK 2
#define T_TDD_UL_DPCH_TimeSlotFormat_LCR_extElem1 3

typedef struct EXTERN TDD_UL_DPCH_TimeSlotFormat_LCR {
   int t;
   union {
      /* t = 1 */
      QPSK_UL_DPCH_TimeSlotFormatTDD_LCR qPSK;
      /* t = 2 */
      EightPSK_UL_DPCH_TimeSlotFormatTDD_LCR eightPSK;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TDD_UL_DPCH_TimeSlotFormat_LCR;

EXTERN int asn1PE_TDD_UL_DPCH_TimeSlotFormat_LCR (ASN1CTXT* pctxt, TDD_UL_DPCH_TimeSlotFormat_LCR* pvalue);

EXTERN int asn1PD_TDD_UL_DPCH_TimeSlotFormat_LCR (ASN1CTXT* pctxt, TDD_UL_DPCH_TimeSlotFormat_LCR* pvalue);

EXTERN void asn1Print_TDD_UL_DPCH_TimeSlotFormat_LCR
   (const char* name, TDD_UL_DPCH_TimeSlotFormat_LCR* pvalue);

EXTERN TDD_UL_DPCH_TimeSlotFormat_LCR* asn1Test_TDD_UL_DPCH_TimeSlotFormat_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_UL_Code_LCR_InformationItem                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TDD_UL_Code_LCR_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DPCH_ID dPCH_ID;
   TDD_ChannelisationCodeLCR tdd_ChannelisationCodeLCR;
   TDD_UL_DPCH_TimeSlotFormat_LCR tdd_UL_DPCH_TimeSlotFormat_LCR;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TDD_UL_Code_LCR_InformationItem;

EXTERN int asn1PE_TDD_UL_Code_LCR_InformationItem (ASN1CTXT* pctxt, TDD_UL_Code_LCR_InformationItem* pvalue);

EXTERN int asn1PD_TDD_UL_Code_LCR_InformationItem (ASN1CTXT* pctxt, TDD_UL_Code_LCR_InformationItem* pvalue);

EXTERN void asn1Print_TDD_UL_Code_LCR_InformationItem
   (const char* name, TDD_UL_Code_LCR_InformationItem* pvalue);

EXTERN TDD_UL_Code_LCR_InformationItem* asn1Test_TDD_UL_Code_LCR_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_UL_Code_LCR_Information                               */
/*                                                            */
/**************************************************************/

/* List of TDD_UL_Code_LCR_InformationItem */
typedef Asn1RTDList TDD_UL_Code_LCR_Information;

EXTERN int asn1PE_TDD_UL_Code_LCR_Information (ASN1CTXT* pctxt, TDD_UL_Code_LCR_Information* pvalue);

EXTERN int asn1PD_TDD_UL_Code_LCR_Information (ASN1CTXT* pctxt, TDD_UL_Code_LCR_Information* pvalue);

EXTERN void asn1Print_TDD_UL_Code_LCR_Information
   (const char* name, TDD_UL_Code_LCR_Information* pvalue);

EXTERN TDD_UL_Code_LCR_Information* asn1Test_TDD_UL_Code_LCR_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeslotLCR_InformationItem                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UL_TimeslotLCR_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlotLCR timeSlotLCR;
   MidambleShiftLCR midambleShiftLCR;
   TFCI_Presence tFCI_Presence;
   TDD_UL_Code_LCR_Information uL_Code_InformationList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UL_TimeslotLCR_InformationItem;

EXTERN int asn1PE_UL_TimeslotLCR_InformationItem (ASN1CTXT* pctxt, UL_TimeslotLCR_InformationItem* pvalue);

EXTERN int asn1PD_UL_TimeslotLCR_InformationItem (ASN1CTXT* pctxt, UL_TimeslotLCR_InformationItem* pvalue);

EXTERN void asn1Print_UL_TimeslotLCR_InformationItem
   (const char* name, UL_TimeslotLCR_InformationItem* pvalue);

EXTERN UL_TimeslotLCR_InformationItem* asn1Test_UL_TimeslotLCR_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeslotLCR_Information                                */
/*                                                            */
/**************************************************************/

/* List of UL_TimeslotLCR_InformationItem */
typedef Asn1RTDList UL_TimeslotLCR_Information;

EXTERN int asn1PE_UL_TimeslotLCR_Information (ASN1CTXT* pctxt, UL_TimeslotLCR_Information* pvalue);

EXTERN int asn1PD_UL_TimeslotLCR_Information (ASN1CTXT* pctxt, UL_TimeslotLCR_Information* pvalue);

EXTERN void asn1Print_UL_TimeslotLCR_Information
   (const char* name, UL_TimeslotLCR_Information* pvalue);

EXTERN UL_TimeslotLCR_Information* asn1Test_UL_TimeslotLCR_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_TPC_DownlinkStepSize                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   step_size1_1 = 0,
   step_size2_1 = 1,
   step_size3 = 2
} TDD_TPC_DownlinkStepSize_Root;

typedef OSUINT32 TDD_TPC_DownlinkStepSize;

EXTERN int asn1PE_TDD_TPC_DownlinkStepSize (ASN1CTXT* pctxt, TDD_TPC_DownlinkStepSize value);

EXTERN int asn1PD_TDD_TPC_DownlinkStepSize (ASN1CTXT* pctxt, TDD_TPC_DownlinkStepSize* pvalue);

EXTERN void asn1Print_TDD_TPC_DownlinkStepSize
   (const char* name, TDD_TPC_DownlinkStepSize* pvalue);

EXTERN TDD_TPC_DownlinkStepSize* asn1Test_TDD_TPC_DownlinkStepSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DL_Code_InformationItem                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TDD_DL_Code_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DPCH_ID dPCH_ID;
   TDD_ChannelisationCode tdd_ChannelisationCode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TDD_DL_Code_InformationItem;

EXTERN int asn1PE_TDD_DL_Code_InformationItem (ASN1CTXT* pctxt, TDD_DL_Code_InformationItem* pvalue);

EXTERN int asn1PD_TDD_DL_Code_InformationItem (ASN1CTXT* pctxt, TDD_DL_Code_InformationItem* pvalue);

EXTERN void asn1Print_TDD_DL_Code_InformationItem
   (const char* name, TDD_DL_Code_InformationItem* pvalue);

EXTERN TDD_DL_Code_InformationItem* asn1Test_TDD_DL_Code_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DL_Code_Information                                   */
/*                                                            */
/**************************************************************/

/* List of TDD_DL_Code_InformationItem */
typedef Asn1RTDList TDD_DL_Code_Information;

EXTERN int asn1PE_TDD_DL_Code_Information (ASN1CTXT* pctxt, TDD_DL_Code_Information* pvalue);

EXTERN int asn1PD_TDD_DL_Code_Information (ASN1CTXT* pctxt, TDD_DL_Code_Information* pvalue);

EXTERN void asn1Print_TDD_DL_Code_Information
   (const char* name, TDD_DL_Code_Information* pvalue);

EXTERN TDD_DL_Code_Information* asn1Test_TDD_DL_Code_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_Timeslot_InformationItem                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DL_Timeslot_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlot timeSlot;
   MidambleShiftAndBurstType midambleShiftAndBurstType;
   TFCI_Presence tFCI_Presence;
   TDD_DL_Code_Information dL_Code_Information;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DL_Timeslot_InformationItem;

EXTERN int asn1PE_DL_Timeslot_InformationItem (ASN1CTXT* pctxt, DL_Timeslot_InformationItem* pvalue);

EXTERN int asn1PD_DL_Timeslot_InformationItem (ASN1CTXT* pctxt, DL_Timeslot_InformationItem* pvalue);

EXTERN void asn1Print_DL_Timeslot_InformationItem
   (const char* name, DL_Timeslot_InformationItem* pvalue);

EXTERN DL_Timeslot_InformationItem* asn1Test_DL_Timeslot_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_Timeslot_Information                                   */
/*                                                            */
/**************************************************************/

/* List of DL_Timeslot_InformationItem */
typedef Asn1RTDList DL_Timeslot_Information;

EXTERN int asn1PE_DL_Timeslot_Information (ASN1CTXT* pctxt, DL_Timeslot_Information* pvalue);

EXTERN int asn1PD_DL_Timeslot_Information (ASN1CTXT* pctxt, DL_Timeslot_Information* pvalue);

EXTERN void asn1Print_DL_Timeslot_Information
   (const char* name, DL_Timeslot_Information* pvalue);

EXTERN DL_Timeslot_Information* asn1Test_DL_Timeslot_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DL_Code_LCR_InformationItem                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TDD_DL_Code_LCR_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DPCH_ID dPCH_ID;
   TDD_ChannelisationCodeLCR tdd_ChannelisationCodeLCR;
   TDD_DL_DPCH_TimeSlotFormat_LCR tdd_DL_DPCH_TimeSlotFormat_LCR;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TDD_DL_Code_LCR_InformationItem;

EXTERN int asn1PE_TDD_DL_Code_LCR_InformationItem (ASN1CTXT* pctxt, TDD_DL_Code_LCR_InformationItem* pvalue);

EXTERN int asn1PD_TDD_DL_Code_LCR_InformationItem (ASN1CTXT* pctxt, TDD_DL_Code_LCR_InformationItem* pvalue);

EXTERN void asn1Print_TDD_DL_Code_LCR_InformationItem
   (const char* name, TDD_DL_Code_LCR_InformationItem* pvalue);

EXTERN TDD_DL_Code_LCR_InformationItem* asn1Test_TDD_DL_Code_LCR_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DL_Code_LCR_Information                               */
/*                                                            */
/**************************************************************/

/* List of TDD_DL_Code_LCR_InformationItem */
typedef Asn1RTDList TDD_DL_Code_LCR_Information;

EXTERN int asn1PE_TDD_DL_Code_LCR_Information (ASN1CTXT* pctxt, TDD_DL_Code_LCR_Information* pvalue);

EXTERN int asn1PD_TDD_DL_Code_LCR_Information (ASN1CTXT* pctxt, TDD_DL_Code_LCR_Information* pvalue);

EXTERN void asn1Print_TDD_DL_Code_LCR_Information
   (const char* name, TDD_DL_Code_LCR_Information* pvalue);

EXTERN TDD_DL_Code_LCR_Information* asn1Test_TDD_DL_Code_LCR_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotLCR_InformationItem                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DL_TimeslotLCR_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlotLCR timeSlotLCR;
   MidambleShiftLCR midambleShiftLCR;
   TFCI_Presence tFCI_Presence;
   TDD_DL_Code_LCR_Information dL_Code_LCR_Information;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DL_TimeslotLCR_InformationItem;

EXTERN int asn1PE_DL_TimeslotLCR_InformationItem (ASN1CTXT* pctxt, DL_TimeslotLCR_InformationItem* pvalue);

EXTERN int asn1PD_DL_TimeslotLCR_InformationItem (ASN1CTXT* pctxt, DL_TimeslotLCR_InformationItem* pvalue);

EXTERN void asn1Print_DL_TimeslotLCR_InformationItem
   (const char* name, DL_TimeslotLCR_InformationItem* pvalue);

EXTERN DL_TimeslotLCR_InformationItem* asn1Test_DL_TimeslotLCR_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotLCR_Information                                */
/*                                                            */
/**************************************************************/

/* List of DL_TimeslotLCR_InformationItem */
typedef Asn1RTDList DL_TimeslotLCR_Information;

EXTERN int asn1PE_DL_TimeslotLCR_Information (ASN1CTXT* pctxt, DL_TimeslotLCR_Information* pvalue);

EXTERN int asn1PD_DL_TimeslotLCR_Information (ASN1CTXT* pctxt, DL_TimeslotLCR_Information* pvalue);

EXTERN void asn1Print_DL_TimeslotLCR_Information
   (const char* name, DL_TimeslotLCR_Information* pvalue);

EXTERN DL_TimeslotLCR_Information* asn1Test_DL_TimeslotLCR_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SpecialBurstScheduling                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT16 SpecialBurstScheduling;

EXTERN int asn1PE_SpecialBurstScheduling (ASN1CTXT* pctxt, SpecialBurstScheduling value);

EXTERN int asn1PD_SpecialBurstScheduling (ASN1CTXT* pctxt, SpecialBurstScheduling* pvalue);

EXTERN void asn1Print_SpecialBurstScheduling
   (const char* name, SpecialBurstScheduling* pvalue);

EXTERN SpecialBurstScheduling* asn1Test_SpecialBurstScheduling
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotISCP                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DL_TimeslotISCP;

EXTERN int asn1PE_DL_TimeslotISCP (ASN1CTXT* pctxt, DL_TimeslotISCP value);

EXTERN int asn1PD_DL_TimeslotISCP (ASN1CTXT* pctxt, DL_TimeslotISCP* pvalue);

EXTERN void asn1Print_DL_TimeslotISCP
   (const char* name, DL_TimeslotISCP* pvalue);

EXTERN DL_TimeslotISCP* asn1Test_DL_TimeslotISCP
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotISCPInfoItem                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DL_TimeslotISCPInfoItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlot timeSlot;
   DL_TimeslotISCP dL_TimeslotISCP;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DL_TimeslotISCPInfoItem;

EXTERN int asn1PE_DL_TimeslotISCPInfoItem (ASN1CTXT* pctxt, DL_TimeslotISCPInfoItem* pvalue);

EXTERN int asn1PD_DL_TimeslotISCPInfoItem (ASN1CTXT* pctxt, DL_TimeslotISCPInfoItem* pvalue);

EXTERN void asn1Print_DL_TimeslotISCPInfoItem
   (const char* name, DL_TimeslotISCPInfoItem* pvalue);

EXTERN DL_TimeslotISCPInfoItem* asn1Test_DL_TimeslotISCPInfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotISCPInfo                                       */
/*                                                            */
/**************************************************************/

/* List of DL_TimeslotISCPInfoItem */
typedef Asn1RTDList DL_TimeslotISCPInfo;

EXTERN int asn1PE_DL_TimeslotISCPInfo (ASN1CTXT* pctxt, DL_TimeslotISCPInfo* pvalue);

EXTERN int asn1PD_DL_TimeslotISCPInfo (ASN1CTXT* pctxt, DL_TimeslotISCPInfo* pvalue);

EXTERN void asn1Print_DL_TimeslotISCPInfo
   (const char* name, DL_TimeslotISCPInfo* pvalue);

EXTERN DL_TimeslotISCPInfo* asn1Test_DL_TimeslotISCPInfo
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RL_Set_ID                                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RL_Set_ID;

EXTERN int asn1PE_RL_Set_ID (ASN1CTXT* pctxt, RL_Set_ID value);

EXTERN int asn1PD_RL_Set_ID (ASN1CTXT* pctxt, RL_Set_ID* pvalue);

EXTERN void asn1Print_RL_Set_ID
   (const char* name, RL_Set_ID* pvalue);

EXTERN RL_Set_ID* asn1Test_RL_Set_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DCH_ID;

EXTERN int asn1PE_DCH_ID (ASN1CTXT* pctxt, DCH_ID value);

EXTERN int asn1PD_DCH_ID (ASN1CTXT* pctxt, DCH_ID* pvalue);

EXTERN void asn1Print_DCH_ID
   (const char* name, DCH_ID* pvalue);

EXTERN DCH_ID* asn1Test_DCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_InformationResponseItem                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_InformationResponseItem {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_ID;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_InformationResponseItem;

EXTERN int asn1PE_DCH_InformationResponseItem (ASN1CTXT* pctxt, DCH_InformationResponseItem* pvalue);

EXTERN int asn1PD_DCH_InformationResponseItem (ASN1CTXT* pctxt, DCH_InformationResponseItem* pvalue);

EXTERN void asn1Print_DCH_InformationResponseItem
   (const char* name, DCH_InformationResponseItem* pvalue);

EXTERN DCH_InformationResponseItem* asn1Test_DCH_InformationResponseItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_InformationResponse                                   */
/*                                                            */
/**************************************************************/

/* List of DCH_InformationResponseItem */
typedef Asn1RTDList DCH_InformationResponse;

EXTERN int asn1PE_DCH_InformationResponse (ASN1CTXT* pctxt, DCH_InformationResponse* pvalue);

EXTERN int asn1PD_DCH_InformationResponse (ASN1CTXT* pctxt, DCH_InformationResponse* pvalue);

EXTERN void asn1Print_DCH_InformationResponse
   (const char* name, DCH_InformationResponse* pvalue);

EXTERN DCH_InformationResponse* asn1Test_DCH_InformationResponse
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SSDT_SupportIndicator                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   not_Used_sSDT_Supported = 0,
   sSDT_not_supported = 1
} SSDT_SupportIndicator_Root;

typedef OSUINT32 SSDT_SupportIndicator;

EXTERN int asn1PE_SSDT_SupportIndicator (ASN1CTXT* pctxt, SSDT_SupportIndicator value);

EXTERN int asn1PD_SSDT_SupportIndicator (ASN1CTXT* pctxt, SSDT_SupportIndicator* pvalue);

EXTERN void asn1Print_SSDT_SupportIndicator
   (const char* name, SSDT_SupportIndicator* pvalue);

EXTERN SSDT_SupportIndicator* asn1Test_SSDT_SupportIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeSlot_ISCP_InfoItem                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UL_TimeSlot_ISCP_InfoItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlot timeSlot;
   UL_TimeslotISCP_Value iSCP;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UL_TimeSlot_ISCP_InfoItem;

EXTERN int asn1PE_UL_TimeSlot_ISCP_InfoItem (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_InfoItem* pvalue);

EXTERN int asn1PD_UL_TimeSlot_ISCP_InfoItem (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_InfoItem* pvalue);

EXTERN void asn1Print_UL_TimeSlot_ISCP_InfoItem
   (const char* name, UL_TimeSlot_ISCP_InfoItem* pvalue);

EXTERN UL_TimeSlot_ISCP_InfoItem* asn1Test_UL_TimeSlot_ISCP_InfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeSlot_ISCP_Info                                     */
/*                                                            */
/**************************************************************/

/* List of UL_TimeSlot_ISCP_InfoItem */
typedef Asn1RTDList UL_TimeSlot_ISCP_Info;

EXTERN int asn1PE_UL_TimeSlot_ISCP_Info (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_Info* pvalue);

EXTERN int asn1PD_UL_TimeSlot_ISCP_Info (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_Info* pvalue);

EXTERN void asn1Print_UL_TimeSlot_ISCP_Info
   (const char* name, UL_TimeSlot_ISCP_Info* pvalue);

EXTERN UL_TimeSlot_ISCP_Info* asn1Test_UL_TimeSlot_ISCP_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_PhysCH_SF_Variation                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   sf_variation_supported = 0,
   sf_variation_not_supported = 1
} UL_PhysCH_SF_Variation_Root;

typedef OSUINT32 UL_PhysCH_SF_Variation;

EXTERN int asn1PE_UL_PhysCH_SF_Variation (ASN1CTXT* pctxt, UL_PhysCH_SF_Variation value);

EXTERN int asn1PD_UL_PhysCH_SF_Variation (ASN1CTXT* pctxt, UL_PhysCH_SF_Variation* pvalue);

EXTERN void asn1Print_UL_PhysCH_SF_Variation
   (const char* name, UL_PhysCH_SF_Variation* pvalue);

EXTERN UL_PhysCH_SF_Variation* asn1Test_UL_PhysCH_SF_Variation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeSlot_ISCP_LCR_InfoItem                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UL_TimeSlot_ISCP_LCR_InfoItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlotLCR timeSlotLCR;
   UL_TimeslotISCP_Value iSCP;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UL_TimeSlot_ISCP_LCR_InfoItem;

EXTERN int asn1PE_UL_TimeSlot_ISCP_LCR_InfoItem (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_LCR_InfoItem* pvalue);

EXTERN int asn1PD_UL_TimeSlot_ISCP_LCR_InfoItem (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_LCR_InfoItem* pvalue);

EXTERN void asn1Print_UL_TimeSlot_ISCP_LCR_InfoItem
   (const char* name, UL_TimeSlot_ISCP_LCR_InfoItem* pvalue);

EXTERN UL_TimeSlot_ISCP_LCR_InfoItem* asn1Test_UL_TimeSlot_ISCP_LCR_InfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeSlot_ISCP_LCR_Info                                 */
/*                                                            */
/**************************************************************/

/* List of UL_TimeSlot_ISCP_LCR_InfoItem */
typedef Asn1RTDList UL_TimeSlot_ISCP_LCR_Info;

EXTERN int asn1PE_UL_TimeSlot_ISCP_LCR_Info (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_LCR_Info* pvalue);

EXTERN int asn1PD_UL_TimeSlot_ISCP_LCR_Info (ASN1CTXT* pctxt, UL_TimeSlot_ISCP_LCR_Info* pvalue);

EXTERN void asn1Print_UL_TimeSlot_ISCP_LCR_Info
   (const char* name, UL_TimeSlot_ISCP_LCR_Info* pvalue);

EXTERN UL_TimeSlot_ISCP_LCR_Info* asn1Test_UL_TimeSlot_ISCP_LCR_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseRadioNetwork                                         */
/*                                                            */
/**************************************************************/

typedef enum {
   unknown_C_ID = 0,
   cell_not_available = 1,
   power_level_not_supported = 2,
   dl_radio_resources_not_available = 3,
   ul_radio_resources_not_available = 4,
   rl_already_ActivatedOrAllocated = 5,
   nodeB_Resources_unavailable = 6,
   measurement_not_supported_for_the_object = 7,
   combining_resources_not_available = 8,
   requested_configuration_not_supported = 9,
   synchronisation_failure = 10,
   priority_transport_channel_established = 11,
   sIB_Origination_in_Node_B_not_Supported = 12,
   requested_tx_diversity_mode_not_supported = 13,
   unspecified_2 = 14,
   bCCH_scheduling_error = 15,
   measurement_temporarily_not_available = 16,
   invalid_CM_settings = 17,
   reconfiguration_CFN_not_elapsed = 18,
   number_of_DL_codes_not_supported = 19,
   s_cipch_not_supported = 20,
   combining_not_supported = 21,
   ul_sf_not_supported = 22,
   dl_SF_not_supported = 23,
   common_transport_channel_type_not_supported = 24,
   dedicated_transport_channel_type_not_supported = 25,
   downlink_shared_channel_type_not_supported = 26,
   uplink_shared_channel_type_not_supported = 27,
   cm_not_supported = 28,
   tx_diversity_no_longer_supported = 29,
   unknown_Local_Cell_ID = 30
} CauseRadioNetwork_Root;

typedef enum {
   number_of_UL_codes_not_supported = 31,
   information_temporarily_not_available = 32,
   information_provision_not_supported_for_the_object = 33,
   cell_synchronisation_not_supported = 34,
   cell_synchronisation_adjustment_not_supported = 35,
   dpc_mode_change_not_supported = 36,
   iPDL_already_activated = 37,
   iPDL_not_supported = 38,
   iPDL_parameters_not_available = 39,
   frequency_acquisition_not_supported = 40,
   power_balancing_status_not_compatible = 41,
   requested_typeofbearer_re_arrangement_not_supported = 42,
   signalling_Bearer_Re_arrangement_not_supported = 43,
   bearer_Re_arrangement_needed = 44,
   delayed_activation_not_supported = 45,
   rl_timing_adjustment_not_supported = 46,
   mich_not_supported = 47,
   f_DPCH_not_supported = 48
} CauseRadioNetwork_Ext;

typedef OSUINT32 CauseRadioNetwork;

EXTERN int asn1PE_CauseRadioNetwork (ASN1CTXT* pctxt, CauseRadioNetwork value);

EXTERN int asn1PD_CauseRadioNetwork (ASN1CTXT* pctxt, CauseRadioNetwork* pvalue);

EXTERN void asn1Print_CauseRadioNetwork
   (const char* name, CauseRadioNetwork* pvalue);

EXTERN CauseRadioNetwork* asn1Test_CauseRadioNetwork
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseTransport                                            */
/*                                                            */
/**************************************************************/

typedef enum {
   transport_resource_unavailable = 0,
   unspecified_3 = 1
} CauseTransport_Root;

typedef OSUINT32 CauseTransport;

EXTERN int asn1PE_CauseTransport (ASN1CTXT* pctxt, CauseTransport value);

EXTERN int asn1PD_CauseTransport (ASN1CTXT* pctxt, CauseTransport* pvalue);

EXTERN void asn1Print_CauseTransport
   (const char* name, CauseTransport* pvalue);

EXTERN CauseTransport* asn1Test_CauseTransport
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseProtocol                                             */
/*                                                            */
/**************************************************************/

typedef enum {
   transfer_syntax_error = 0,
   abstract_syntax_error_reject = 1,
   abstract_syntax_error_ignore_and_notify = 2,
   message_not_compatible_with_receiver_state = 3,
   semantic_error = 4,
   unspecified_1 = 5,
   abstract_syntax_error_falsely_constructed_message = 6
} CauseProtocol_Root;

typedef OSUINT32 CauseProtocol;

EXTERN int asn1PE_CauseProtocol (ASN1CTXT* pctxt, CauseProtocol value);

EXTERN int asn1PD_CauseProtocol (ASN1CTXT* pctxt, CauseProtocol* pvalue);

EXTERN void asn1Print_CauseProtocol
   (const char* name, CauseProtocol* pvalue);

EXTERN CauseProtocol* asn1Test_CauseProtocol
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CauseMisc                                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   control_processing_overload = 0,
   hardware_failure = 1,
   oam_intervention = 2,
   not_enough_user_plane_processing_resources = 3,
   unspecified = 4
} CauseMisc_Root;

typedef OSUINT32 CauseMisc;

EXTERN int asn1PE_CauseMisc (ASN1CTXT* pctxt, CauseMisc value);

EXTERN int asn1PD_CauseMisc (ASN1CTXT* pctxt, CauseMisc* pvalue);

EXTERN void asn1Print_CauseMisc
   (const char* name, CauseMisc* pvalue);

EXTERN CauseMisc* asn1Test_CauseMisc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Cause                                                     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_Cause_radioNetwork            1
#define T_Cause_transport               2
#define T_Cause_protocol                3
#define T_Cause_misc                    4
#define T_Cause_extElem1                5

typedef struct EXTERN Cause {
   int t;
   union {
      /* t = 1 */
      CauseRadioNetwork radioNetwork;
      /* t = 2 */
      CauseTransport transport;
      /* t = 3 */
      CauseProtocol protocol;
      /* t = 4 */
      CauseMisc misc;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} Cause;

EXTERN int asn1PE_Cause (ASN1CTXT* pctxt, Cause* pvalue);

EXTERN int asn1PD_Cause (ASN1CTXT* pctxt, Cause* pvalue);

EXTERN void asn1Print_Cause
   (const char* name, Cause* pvalue);

EXTERN Cause* asn1Test_Cause
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_TPC_UplinkStepSize_LCR                                */
/*                                                            */
/**************************************************************/

typedef enum {
   step_size1_2 = 0,
   step_size2_2 = 1,
   step_size3_1 = 2
} TDD_TPC_UplinkStepSize_LCR_Root;

typedef OSUINT32 TDD_TPC_UplinkStepSize_LCR;

EXTERN int asn1PE_TDD_TPC_UplinkStepSize_LCR (ASN1CTXT* pctxt, TDD_TPC_UplinkStepSize_LCR value);

EXTERN int asn1PD_TDD_TPC_UplinkStepSize_LCR (ASN1CTXT* pctxt, TDD_TPC_UplinkStepSize_LCR* pvalue);

EXTERN void asn1Print_TDD_TPC_UplinkStepSize_LCR
   (const char* name, TDD_TPC_UplinkStepSize_LCR* pvalue);

EXTERN TDD_TPC_UplinkStepSize_LCR* asn1Test_TDD_TPC_UplinkStepSize_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSCH_ID                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DSCH_ID;

EXTERN int asn1PE_DSCH_ID (ASN1CTXT* pctxt, DSCH_ID value);

EXTERN int asn1PD_DSCH_ID (ASN1CTXT* pctxt, DSCH_ID* pvalue);

EXTERN void asn1Print_DSCH_ID
   (const char* name, DSCH_ID* pvalue);

EXTERN DSCH_ID* asn1Test_DSCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityLevel                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PriorityLevel;

EXTERN int asn1PE_PriorityLevel (ASN1CTXT* pctxt, PriorityLevel value);

EXTERN int asn1PD_PriorityLevel (ASN1CTXT* pctxt, PriorityLevel* pvalue);

EXTERN void asn1Print_PriorityLevel
   (const char* name, PriorityLevel* pvalue);

EXTERN PriorityLevel* asn1Test_PriorityLevel
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Pre_emptionCapability                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   shall_not_trigger_pre_emption = 0,
   may_trigger_pre_emption = 1
} Pre_emptionCapability_Root;

typedef OSUINT32 Pre_emptionCapability;

EXTERN int asn1PE_Pre_emptionCapability (ASN1CTXT* pctxt, Pre_emptionCapability value);

EXTERN int asn1PD_Pre_emptionCapability (ASN1CTXT* pctxt, Pre_emptionCapability* pvalue);

EXTERN void asn1Print_Pre_emptionCapability
   (const char* name, Pre_emptionCapability* pvalue);

EXTERN Pre_emptionCapability* asn1Test_Pre_emptionCapability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Pre_emptionVulnerability                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   not_pre_emptable = 0,
   pre_emptable = 1
} Pre_emptionVulnerability_Root;

typedef OSUINT32 Pre_emptionVulnerability;

EXTERN int asn1PE_Pre_emptionVulnerability (ASN1CTXT* pctxt, Pre_emptionVulnerability value);

EXTERN int asn1PD_Pre_emptionVulnerability (ASN1CTXT* pctxt, Pre_emptionVulnerability* pvalue);

EXTERN void asn1Print_Pre_emptionVulnerability
   (const char* name, Pre_emptionVulnerability* pvalue);

EXTERN Pre_emptionVulnerability* asn1Test_Pre_emptionVulnerability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AllocationRetentionPriority                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN AllocationRetentionPriority {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityLevel priorityLevel;
   Pre_emptionCapability pre_emptionCapability;
   Pre_emptionVulnerability pre_emptionVulnerability;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} AllocationRetentionPriority;

EXTERN int asn1PE_AllocationRetentionPriority (ASN1CTXT* pctxt, AllocationRetentionPriority* pvalue);

EXTERN int asn1PD_AllocationRetentionPriority (ASN1CTXT* pctxt, AllocationRetentionPriority* pvalue);

EXTERN void asn1Print_AllocationRetentionPriority
   (const char* name, AllocationRetentionPriority* pvalue);

EXTERN AllocationRetentionPriority* asn1Test_AllocationRetentionPriority
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FrameHandlingPriority                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT8 FrameHandlingPriority;

EXTERN int asn1PE_FrameHandlingPriority (ASN1CTXT* pctxt, FrameHandlingPriority value);

EXTERN int asn1PD_FrameHandlingPriority (ASN1CTXT* pctxt, FrameHandlingPriority* pvalue);

EXTERN void asn1Print_FrameHandlingPriority
   (const char* name, FrameHandlingPriority* pvalue);

EXTERN FrameHandlingPriority* asn1Test_FrameHandlingPriority
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransportBearerRequestIndicator                           */
/*                                                            */
/**************************************************************/

typedef enum {
   bearerRequested_1 = 0,
   bearerNotRequested = 1
} TransportBearerRequestIndicator_Root;

typedef OSUINT32 TransportBearerRequestIndicator;

EXTERN int asn1PE_TransportBearerRequestIndicator (ASN1CTXT* pctxt, TransportBearerRequestIndicator value);

EXTERN int asn1PD_TransportBearerRequestIndicator (ASN1CTXT* pctxt, TransportBearerRequestIndicator* pvalue);

EXTERN void asn1Print_TransportBearerRequestIndicator
   (const char* name, TransportBearerRequestIndicator* pvalue);

EXTERN TransportBearerRequestIndicator* asn1Test_TransportBearerRequestIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  USCH_ID                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 USCH_ID;

EXTERN int asn1PE_USCH_ID (ASN1CTXT* pctxt, USCH_ID value);

EXTERN int asn1PD_USCH_ID (ASN1CTXT* pctxt, USCH_ID* pvalue);

EXTERN void asn1Print_USCH_ID
   (const char* name, USCH_ID* pvalue);

EXTERN USCH_ID* asn1Test_USCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PUSCH_ID                                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PUSCH_ID;

EXTERN int asn1PE_PUSCH_ID (ASN1CTXT* pctxt, PUSCH_ID value);

EXTERN int asn1PD_PUSCH_ID (ASN1CTXT* pctxt, PUSCH_ID* pvalue);

EXTERN void asn1Print_PUSCH_ID
   (const char* name, PUSCH_ID* pvalue);

EXTERN PUSCH_ID* asn1Test_PUSCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SICH_ID                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SICH_ID;

EXTERN int asn1PE_HS_SICH_ID (ASN1CTXT* pctxt, HS_SICH_ID value);

EXTERN int asn1PD_HS_SICH_ID (ASN1CTXT* pctxt, HS_SICH_ID* pvalue);

EXTERN void asn1Print_HS_SICH_ID
   (const char* name, HS_SICH_ID* pvalue);

EXTERN HS_SICH_ID* asn1Test_HS_SICH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SIR_Value                                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SIR_Value;

EXTERN int asn1PE_SIR_Value (ASN1CTXT* pctxt, SIR_Value value);

EXTERN int asn1PD_SIR_Value (ASN1CTXT* pctxt, SIR_Value* pvalue);

EXTERN void asn1Print_SIR_Value
   (const char* name, SIR_Value* pvalue);

EXTERN SIR_Value* asn1Test_SIR_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SIR_Error_Value                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SIR_Error_Value;

EXTERN int asn1PE_SIR_Error_Value (ASN1CTXT* pctxt, SIR_Error_Value value);

EXTERN int asn1PD_SIR_Error_Value (ASN1CTXT* pctxt, SIR_Error_Value* pvalue);

EXTERN void asn1Print_SIR_Error_Value
   (const char* name, SIR_Error_Value* pvalue);

EXTERN SIR_Error_Value* asn1Test_SIR_Error_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmitted_Code_Power_Value                              */
/*                                                            */
/**************************************************************/

typedef OSUINT8 Transmitted_Code_Power_Value;

EXTERN int asn1PE_Transmitted_Code_Power_Value (ASN1CTXT* pctxt, Transmitted_Code_Power_Value value);

EXTERN int asn1PD_Transmitted_Code_Power_Value (ASN1CTXT* pctxt, Transmitted_Code_Power_Value* pvalue);

EXTERN void asn1Print_Transmitted_Code_Power_Value
   (const char* name, Transmitted_Code_Power_Value* pvalue);

EXTERN Transmitted_Code_Power_Value* asn1Test_Transmitted_Code_Power_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RSCP_Value                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RSCP_Value;

EXTERN int asn1PE_RSCP_Value (ASN1CTXT* pctxt, RSCP_Value value);

EXTERN int asn1PD_RSCP_Value (ASN1CTXT* pctxt, RSCP_Value* pvalue);

EXTERN void asn1Print_RSCP_Value
   (const char* name, RSCP_Value* pvalue);

EXTERN RSCP_Value* asn1Test_RSCP_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Rx_Timing_Deviation_Value                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Rx_Timing_Deviation_Value;

EXTERN int asn1PE_Rx_Timing_Deviation_Value (ASN1CTXT* pctxt, Rx_Timing_Deviation_Value value);

EXTERN int asn1PD_Rx_Timing_Deviation_Value (ASN1CTXT* pctxt, Rx_Timing_Deviation_Value* pvalue);

EXTERN void asn1Print_Rx_Timing_Deviation_Value
   (const char* name, Rx_Timing_Deviation_Value* pvalue);

EXTERN Rx_Timing_Deviation_Value* asn1Test_Rx_Timing_Deviation_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Round_Trip_Time_Value                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Round_Trip_Time_Value;

EXTERN int asn1PE_Round_Trip_Time_Value (ASN1CTXT* pctxt, Round_Trip_Time_Value value);

EXTERN int asn1PD_Round_Trip_Time_Value (ASN1CTXT* pctxt, Round_Trip_Time_Value* pvalue);

EXTERN void asn1Print_Round_Trip_Time_Value
   (const char* name, Round_Trip_Time_Value* pvalue);

EXTERN Round_Trip_Time_Value* asn1Test_Round_Trip_Time_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Extension_DedicatedMeasurementValue                       */
/*                                                            */
/**************************************************************/

typedef ProtocolIE_Single_Container Extension_DedicatedMeasurementValue;

EXTERN int asn1PE_Extension_DedicatedMeasurementValue (ASN1CTXT* pctxt, Extension_DedicatedMeasurementValue* pvalue);

EXTERN int asn1PD_Extension_DedicatedMeasurementValue (ASN1CTXT* pctxt, Extension_DedicatedMeasurementValue* pvalue);

EXTERN void asn1Print_Extension_DedicatedMeasurementValue
   (const char* name, Extension_DedicatedMeasurementValue* pvalue);

EXTERN Extension_DedicatedMeasurementValue* asn1Test_Extension_DedicatedMeasurementValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DedicatedMeasurementValue                                 */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_DedicatedMeasurementValue_sIR_Value 1
#define T_DedicatedMeasurementValue_sIR_ErrorValue 2
#define T_DedicatedMeasurementValue_transmittedCodePowerValue 3
#define T_DedicatedMeasurementValue_rSCP 4
#define T_DedicatedMeasurementValue_rxTimingDeviationValue 5
#define T_DedicatedMeasurementValue_roundTripTime 6
#define T_DedicatedMeasurementValue_extension_DedicatedMeasurementValue 7
#define T_DedicatedMeasurementValue_extElem1 8

typedef struct EXTERN DedicatedMeasurementValue {
   int t;
   union {
      /* t = 1 */
      SIR_Value sIR_Value;
      /* t = 2 */
      SIR_Error_Value sIR_ErrorValue;
      /* t = 3 */
      Transmitted_Code_Power_Value transmittedCodePowerValue;
      /* t = 4 */
      RSCP_Value rSCP;
      /* t = 5 */
      Rx_Timing_Deviation_Value rxTimingDeviationValue;
      /* t = 6 */
      Round_Trip_Time_Value roundTripTime;
      /* t = 7 */
      Extension_DedicatedMeasurementValue *extension_DedicatedMeasurementValue;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} DedicatedMeasurementValue;

EXTERN int asn1PE_DedicatedMeasurementValue (ASN1CTXT* pctxt, DedicatedMeasurementValue* pvalue);

EXTERN int asn1PD_DedicatedMeasurementValue (ASN1CTXT* pctxt, DedicatedMeasurementValue* pvalue);

EXTERN void asn1Print_DedicatedMeasurementValue
   (const char* name, DedicatedMeasurementValue* pvalue);

EXTERN DedicatedMeasurementValue* asn1Test_DedicatedMeasurementValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CFN                                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CFN;

EXTERN int asn1PE_CFN (ASN1CTXT* pctxt, CFN value);

EXTERN int asn1PD_CFN (ASN1CTXT* pctxt, CFN* pvalue);

EXTERN void asn1Print_CFN
   (const char* name, CFN* pvalue);

EXTERN CFN* asn1Test_CFN
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DedicatedMeasurementAvailable                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DedicatedMeasurementAvailable {
   struct {
      unsigned cFNPresent : 1;
      unsigned ie_ExtensionsPresent : 1;
   } m;
   DedicatedMeasurementValue dedicatedmeasurementValue;
   CFN cFN;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} DedicatedMeasurementAvailable;

EXTERN int asn1PE_DedicatedMeasurementAvailable (ASN1CTXT* pctxt, DedicatedMeasurementAvailable* pvalue);

EXTERN int asn1PD_DedicatedMeasurementAvailable (ASN1CTXT* pctxt, DedicatedMeasurementAvailable* pvalue);

EXTERN void asn1Print_DedicatedMeasurementAvailable
   (const char* name, DedicatedMeasurementAvailable* pvalue);

EXTERN DedicatedMeasurementAvailable* asn1Test_DedicatedMeasurementAvailable
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DedicatedMeasurementnotAvailable                          */
/*                                                            */
/**************************************************************/

EXTERN int asn1PE_DedicatedMeasurementnotAvailable_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PE_DedicatedMeasurementnotAvailable(pctxt) \
asn1PE_DedicatedMeasurementnotAvailable_(pctxt, NULL)

EXTERN int asn1PD_DedicatedMeasurementnotAvailable_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PD_DedicatedMeasurementnotAvailable(pctxt) \
asn1PD_DedicatedMeasurementnotAvailable_(pctxt, NULL)

EXTERN void asn1Print_DedicatedMeasurementnotAvailable_
   (const char* name, void* pvalue);
#define asn1Print_DedicatedMeasurementnotAvailable(name) \
asn1Print_DedicatedMeasurementnotAvailable_(name, NULL)

/**************************************************************/
/*                                                            */
/*  DedicatedMeasurementValueInformation                      */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_DedicatedMeasurementValueInformation_measurementAvailable 1
#define T_DedicatedMeasurementValueInformation_measurementnotAvailable 2

typedef struct EXTERN DedicatedMeasurementValueInformation {
   int t;
   union {
      /* t = 1 */
      DedicatedMeasurementAvailable *measurementAvailable;
      /* t = 2 */
   } u;
} DedicatedMeasurementValueInformation;

EXTERN int asn1PE_DedicatedMeasurementValueInformation (ASN1CTXT* pctxt, DedicatedMeasurementValueInformation* pvalue);

EXTERN int asn1PD_DedicatedMeasurementValueInformation (ASN1CTXT* pctxt, DedicatedMeasurementValueInformation* pvalue);

EXTERN void asn1Print_DedicatedMeasurementValueInformation
   (const char* name, DedicatedMeasurementValueInformation* pvalue);

EXTERN DedicatedMeasurementValueInformation* asn1Test_DedicatedMeasurementValueInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_PDSCH_Start_code_number                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_PDSCH_Start_code_number;

EXTERN int asn1PE_HS_PDSCH_Start_code_number (ASN1CTXT* pctxt, HS_PDSCH_Start_code_number value);

EXTERN int asn1PD_HS_PDSCH_Start_code_number (ASN1CTXT* pctxt, HS_PDSCH_Start_code_number* pvalue);

EXTERN void asn1Print_HS_PDSCH_Start_code_number
   (const char* name, HS_PDSCH_Start_code_number* pvalue);

EXTERN HS_PDSCH_Start_code_number* asn1Test_HS_PDSCH_Start_code_number
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_PDSCH_FDD_Code_Information                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_PDSCH_FDD_Code_Information {
   struct {
      unsigned hS_PDSCH_Start_code_numberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT8 number_of_HS_PDSCH_codes;
   HS_PDSCH_Start_code_number hS_PDSCH_Start_code_number;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_PDSCH_FDD_Code_Information;

EXTERN int asn1PE_HS_PDSCH_FDD_Code_Information (ASN1CTXT* pctxt, HS_PDSCH_FDD_Code_Information* pvalue);

EXTERN int asn1PD_HS_PDSCH_FDD_Code_Information (ASN1CTXT* pctxt, HS_PDSCH_FDD_Code_Information* pvalue);

EXTERN void asn1Print_HS_PDSCH_FDD_Code_Information
   (const char* name, HS_PDSCH_FDD_Code_Information* pvalue);

EXTERN HS_PDSCH_FDD_Code_Information* asn1Test_HS_PDSCH_FDD_Code_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SCCH_FDD_Code_Information_Item                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SCCH_FDD_Code_Information_Item;

EXTERN int asn1PE_HS_SCCH_FDD_Code_Information_Item (ASN1CTXT* pctxt, HS_SCCH_FDD_Code_Information_Item value);

EXTERN int asn1PD_HS_SCCH_FDD_Code_Information_Item (ASN1CTXT* pctxt, HS_SCCH_FDD_Code_Information_Item* pvalue);

EXTERN void asn1Print_HS_SCCH_FDD_Code_Information_Item
   (const char* name, HS_SCCH_FDD_Code_Information_Item* pvalue);

EXTERN HS_SCCH_FDD_Code_Information_Item* asn1Test_HS_SCCH_FDD_Code_Information_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SCCH_FDD_Code_List                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_SCCH_FDD_Code_List {
   OSUINT32 n;
   HS_SCCH_FDD_Code_Information_Item elem[32];
} HS_SCCH_FDD_Code_List;

EXTERN int asn1PE_HS_SCCH_FDD_Code_List (ASN1CTXT* pctxt, HS_SCCH_FDD_Code_List* pvalue);

EXTERN int asn1PD_HS_SCCH_FDD_Code_List (ASN1CTXT* pctxt, HS_SCCH_FDD_Code_List* pvalue);

EXTERN void asn1Print_HS_SCCH_FDD_Code_List
   (const char* name, HS_SCCH_FDD_Code_List* pvalue);

EXTERN HS_SCCH_FDD_Code_List* asn1Test_HS_SCCH_FDD_Code_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SCCH_FDD_Code_Information                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_HS_SCCH_FDD_Code_Information_replace 1
#define T_HS_SCCH_FDD_Code_Information_remove_ 2
#define T_HS_SCCH_FDD_Code_Information_extElem1 3

typedef struct EXTERN HS_SCCH_FDD_Code_Information {
   int t;
   union {
      /* t = 1 */
      HS_SCCH_FDD_Code_List *replace;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} HS_SCCH_FDD_Code_Information;

EXTERN int asn1PE_HS_SCCH_FDD_Code_Information (ASN1CTXT* pctxt, HS_SCCH_FDD_Code_Information* pvalue);

EXTERN int asn1PD_HS_SCCH_FDD_Code_Information (ASN1CTXT* pctxt, HS_SCCH_FDD_Code_Information* pvalue);

EXTERN void asn1Print_HS_SCCH_FDD_Code_Information
   (const char* name, HS_SCCH_FDD_Code_Information* pvalue);

EXTERN HS_SCCH_FDD_Code_Information* asn1Test_HS_SCCH_FDD_Code_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDSCHSet_ID                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PDSCHSet_ID;

EXTERN int asn1PE_PDSCHSet_ID (ASN1CTXT* pctxt, PDSCHSet_ID value);

EXTERN int asn1PD_PDSCHSet_ID (ASN1CTXT* pctxt, PDSCHSet_ID* pvalue);

EXTERN void asn1Print_PDSCHSet_ID
   (const char* name, PDSCHSet_ID* pvalue);

EXTERN PDSCHSet_ID* asn1Test_PDSCHSet_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDSCH_ID                                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PDSCH_ID;

EXTERN int asn1PE_PDSCH_ID (ASN1CTXT* pctxt, PDSCH_ID value);

EXTERN int asn1PD_PDSCH_ID (ASN1CTXT* pctxt, PDSCH_ID* pvalue);

EXTERN void asn1Print_PDSCH_ID
   (const char* name, PDSCH_ID* pvalue);

EXTERN PDSCH_ID* asn1Test_PDSCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PUSCHSet_ID                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PUSCHSet_ID;

EXTERN int asn1PE_PUSCHSet_ID (ASN1CTXT* pctxt, PUSCHSet_ID value);

EXTERN int asn1PD_PUSCHSet_ID (ASN1CTXT* pctxt, PUSCHSet_ID* pvalue);

EXTERN void asn1Print_PUSCHSet_ID
   (const char* name, PUSCHSet_ID* pvalue);

EXTERN PUSCHSet_ID* asn1Test_PUSCHSet_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaximumTransmissionPower                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT16 MaximumTransmissionPower;

EXTERN int asn1PE_MaximumTransmissionPower (ASN1CTXT* pctxt, MaximumTransmissionPower value);

EXTERN int asn1PD_MaximumTransmissionPower (ASN1CTXT* pctxt, MaximumTransmissionPower* pvalue);

EXTERN void asn1Print_MaximumTransmissionPower
   (const char* name, MaximumTransmissionPower* pvalue);

EXTERN MaximumTransmissionPower* asn1Test_MaximumTransmissionPower
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SCCH_ID                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SCCH_ID;

EXTERN int asn1PE_HS_SCCH_ID (ASN1CTXT* pctxt, HS_SCCH_ID value);

EXTERN int asn1PD_HS_SCCH_ID (ASN1CTXT* pctxt, HS_SCCH_ID* pvalue);

EXTERN void asn1Print_HS_SCCH_ID
   (const char* name, HS_SCCH_ID* pvalue);

EXTERN HS_SCCH_ID* asn1Test_HS_SCCH_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CRNC_CommunicationContextID                               */
/*                                                            */
/**************************************************************/

typedef OSUINT32 CRNC_CommunicationContextID;

EXTERN int asn1PE_CRNC_CommunicationContextID (ASN1CTXT* pctxt, CRNC_CommunicationContextID value);

EXTERN int asn1PD_CRNC_CommunicationContextID (ASN1CTXT* pctxt, CRNC_CommunicationContextID* pvalue);

EXTERN void asn1Print_CRNC_CommunicationContextID
   (const char* name, CRNC_CommunicationContextID* pvalue);

EXTERN CRNC_CommunicationContextID* asn1Test_CRNC_CommunicationContextID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NodeB_CommunicationContextID                              */
/*                                                            */
/**************************************************************/

typedef OSUINT32 NodeB_CommunicationContextID;

EXTERN int asn1PE_NodeB_CommunicationContextID (ASN1CTXT* pctxt, NodeB_CommunicationContextID value);

EXTERN int asn1PD_NodeB_CommunicationContextID (ASN1CTXT* pctxt, NodeB_CommunicationContextID* pvalue);

EXTERN void asn1Print_NodeB_CommunicationContextID
   (const char* name, NodeB_CommunicationContextID* pvalue);

EXTERN NodeB_CommunicationContextID* asn1Test_NodeB_CommunicationContextID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPSTOW                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT32 GPSTOW;

EXTERN int asn1PE_GPSTOW (ASN1CTXT* pctxt, GPSTOW value);

EXTERN int asn1PD_GPSTOW (ASN1CTXT* pctxt, GPSTOW* pvalue);

EXTERN void asn1Print_GPSTOW
   (const char* name, GPSTOW* pvalue);

EXTERN GPSTOW* asn1Test_GPSTOW
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Status_Health                                         */
/*                                                            */
/**************************************************************/

typedef enum {
   udre_scale_1dot0 = 0,
   udre_scale_0dot75 = 1,
   udre_scale_0dot5 = 2,
   udre_scale_0dot3 = 3,
   udre_scale_0dot1 = 4,
   no_data = 5,
   invalid_data = 6
} GPS_Status_Health_Root;

typedef OSUINT32 GPS_Status_Health;

EXTERN int asn1PE_GPS_Status_Health (ASN1CTXT* pctxt, GPS_Status_Health value);

EXTERN int asn1PD_GPS_Status_Health (ASN1CTXT* pctxt, GPS_Status_Health* pvalue);

EXTERN void asn1Print_GPS_Status_Health
   (const char* name, GPS_Status_Health* pvalue);

EXTERN GPS_Status_Health* asn1Test_GPS_Status_Health
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_ID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SAT_ID;

EXTERN int asn1PE_SAT_ID (ASN1CTXT* pctxt, SAT_ID value);

EXTERN int asn1PD_SAT_ID (ASN1CTXT* pctxt, SAT_ID* pvalue);

EXTERN void asn1Print_SAT_ID
   (const char* name, SAT_ID* pvalue);

EXTERN SAT_ID* asn1Test_SAT_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_DGPSCorrections_Item_iode_dgps                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_DGPSCorrections_Item_iode_dgps {
   OSUINT32  numbits;
   OSOCTET data[1];
} SAT_Info_DGPSCorrections_Item_iode_dgps;

EXTERN int asn1PE_SAT_Info_DGPSCorrections_Item_iode_dgps (ASN1CTXT* pctxt, SAT_Info_DGPSCorrections_Item_iode_dgps* pvalue);

EXTERN int asn1PD_SAT_Info_DGPSCorrections_Item_iode_dgps (ASN1CTXT* pctxt, SAT_Info_DGPSCorrections_Item_iode_dgps* pvalue);

EXTERN void asn1Print_SAT_Info_DGPSCorrections_Item_iode_dgps
   (const char* name, SAT_Info_DGPSCorrections_Item_iode_dgps* pvalue);

EXTERN SAT_Info_DGPSCorrections_Item_iode_dgps* asn1Test_SAT_Info_DGPSCorrections_Item_iode_dgps
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UDRE                                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   udre_minusequal_one_m = 0,
   udre_betweenoneandfour_m = 1,
   udre_betweenfourandeight_m = 2,
   udre_greaterequaleight_m = 3
} UDRE_Root;

typedef OSUINT32 UDRE;

EXTERN int asn1PE_UDRE (ASN1CTXT* pctxt, UDRE value);

EXTERN int asn1PD_UDRE (ASN1CTXT* pctxt, UDRE* pvalue);

EXTERN void asn1Print_UDRE
   (const char* name, UDRE* pvalue);

EXTERN UDRE* asn1Test_UDRE
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PRC                                                       */
/*                                                            */
/**************************************************************/

typedef OSINT16 PRC;

EXTERN int asn1PE_PRC (ASN1CTXT* pctxt, PRC value);

EXTERN int asn1PD_PRC (ASN1CTXT* pctxt, PRC* pvalue);

EXTERN void asn1Print_PRC
   (const char* name, PRC* pvalue);

EXTERN PRC* asn1Test_PRC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Range_Correction_Rate                                     */
/*                                                            */
/**************************************************************/

typedef OSINT8 Range_Correction_Rate;

EXTERN int asn1PE_Range_Correction_Rate (ASN1CTXT* pctxt, Range_Correction_Rate value);

EXTERN int asn1PD_Range_Correction_Rate (ASN1CTXT* pctxt, Range_Correction_Rate* pvalue);

EXTERN void asn1Print_Range_Correction_Rate
   (const char* name, Range_Correction_Rate* pvalue);

EXTERN Range_Correction_Rate* asn1Test_Range_Correction_Rate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_DGPSCorrections_Item                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_DGPSCorrections_Item {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   SAT_ID sat_id;
   SAT_Info_DGPSCorrections_Item_iode_dgps iode_dgps;
   UDRE udre;
   PRC prc;
   Range_Correction_Rate range_correction_rate;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} SAT_Info_DGPSCorrections_Item;

EXTERN int asn1PE_SAT_Info_DGPSCorrections_Item (ASN1CTXT* pctxt, SAT_Info_DGPSCorrections_Item* pvalue);

EXTERN int asn1PD_SAT_Info_DGPSCorrections_Item (ASN1CTXT* pctxt, SAT_Info_DGPSCorrections_Item* pvalue);

EXTERN void asn1Print_SAT_Info_DGPSCorrections_Item
   (const char* name, SAT_Info_DGPSCorrections_Item* pvalue);

EXTERN SAT_Info_DGPSCorrections_Item* asn1Test_SAT_Info_DGPSCorrections_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_DGPSCorrections                                  */
/*                                                            */
/**************************************************************/

/* List of SAT_Info_DGPSCorrections_Item */
typedef Asn1RTDList SAT_Info_DGPSCorrections;

EXTERN int asn1PE_SAT_Info_DGPSCorrections (ASN1CTXT* pctxt, SAT_Info_DGPSCorrections* pvalue);

EXTERN int asn1PD_SAT_Info_DGPSCorrections (ASN1CTXT* pctxt, SAT_Info_DGPSCorrections* pvalue);

EXTERN void asn1Print_SAT_Info_DGPSCorrections
   (const char* name, SAT_Info_DGPSCorrections* pvalue);

EXTERN SAT_Info_DGPSCorrections* asn1Test_SAT_Info_DGPSCorrections
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DGPSCorrections                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DGPSCorrections {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   GPSTOW gpstow;
   GPS_Status_Health status_health;
   SAT_Info_DGPSCorrections satelliteinfo;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} DGPSCorrections;

EXTERN int asn1PE_DGPSCorrections (ASN1CTXT* pctxt, DGPSCorrections* pvalue);

EXTERN int asn1PD_DGPSCorrections (ASN1CTXT* pctxt, DGPSCorrections* pvalue);

EXTERN void asn1Print_DGPSCorrections
   (const char* name, DGPSCorrections* pvalue);

EXTERN DGPSCorrections* asn1Test_DGPSCorrections
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_tlm_message_nav                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_tlm_message_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_tlm_message_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_tlm_message_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_tlm_message_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_tlm_message_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_tlm_message_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_tlm_message_nav
   (const char* name, GPS_NavandRecovery_Item_tlm_message_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_tlm_message_nav* asn1Test_GPS_NavandRecovery_Item_tlm_message_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_tlm_revd_c_nav                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_tlm_revd_c_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_tlm_revd_c_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_tlm_revd_c_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_tlm_revd_c_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_tlm_revd_c_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_tlm_revd_c_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_tlm_revd_c_nav
   (const char* name, GPS_NavandRecovery_Item_tlm_revd_c_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_tlm_revd_c_nav* asn1Test_GPS_NavandRecovery_Item_tlm_revd_c_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_ho_word_nav                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_ho_word_nav {
   OSUINT32  numbits;
   OSOCTET data[3];
} GPS_NavandRecovery_Item_ho_word_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_ho_word_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_ho_word_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_ho_word_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_ho_word_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_ho_word_nav
   (const char* name, GPS_NavandRecovery_Item_ho_word_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_ho_word_nav* asn1Test_GPS_NavandRecovery_Item_ho_word_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_w_n_nav                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_w_n_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_w_n_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_w_n_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_w_n_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_w_n_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_w_n_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_w_n_nav
   (const char* name, GPS_NavandRecovery_Item_w_n_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_w_n_nav* asn1Test_GPS_NavandRecovery_Item_w_n_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_ca_or_p_on_l2_nav                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_ca_or_p_on_l2_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_ca_or_p_on_l2_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_ca_or_p_on_l2_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_ca_or_p_on_l2_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_ca_or_p_on_l2_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_ca_or_p_on_l2_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_ca_or_p_on_l2_nav
   (const char* name, GPS_NavandRecovery_Item_ca_or_p_on_l2_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_ca_or_p_on_l2_nav* asn1Test_GPS_NavandRecovery_Item_ca_or_p_on_l2_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_user_range_accuracy_index_nav     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_user_range_accuracy_index_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_user_range_accuracy_index_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_user_range_accuracy_index_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_user_range_accuracy_index_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_user_range_accuracy_index_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_user_range_accuracy_index_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_user_range_accuracy_index_nav
   (const char* name, GPS_NavandRecovery_Item_user_range_accuracy_index_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_user_range_accuracy_index_nav* asn1Test_GPS_NavandRecovery_Item_user_range_accuracy_index_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_sv_health_nav                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_sv_health_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_sv_health_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_sv_health_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_sv_health_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_sv_health_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_sv_health_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_sv_health_nav
   (const char* name, GPS_NavandRecovery_Item_sv_health_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_sv_health_nav* asn1Test_GPS_NavandRecovery_Item_sv_health_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_iodc_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_iodc_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_iodc_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_iodc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_iodc_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_iodc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_iodc_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_iodc_nav
   (const char* name, GPS_NavandRecovery_Item_iodc_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_iodc_nav* asn1Test_GPS_NavandRecovery_Item_iodc_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_l2_p_dataflag_nav                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_l2_p_dataflag_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_l2_p_dataflag_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_l2_p_dataflag_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_l2_p_dataflag_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_l2_p_dataflag_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_l2_p_dataflag_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_l2_p_dataflag_nav
   (const char* name, GPS_NavandRecovery_Item_l2_p_dataflag_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_l2_p_dataflag_nav* asn1Test_GPS_NavandRecovery_Item_l2_p_dataflag_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_sf1_reserved_nav                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_sf1_reserved_nav {
   OSUINT32  numbits;
   OSOCTET data[11];
} GPS_NavandRecovery_Item_sf1_reserved_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_sf1_reserved_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_sf1_reserved_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_sf1_reserved_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_sf1_reserved_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_sf1_reserved_nav
   (const char* name, GPS_NavandRecovery_Item_sf1_reserved_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_sf1_reserved_nav* asn1Test_GPS_NavandRecovery_Item_sf1_reserved_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_t_gd_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_t_gd_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_t_gd_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_t_gd_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_t_gd_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_t_gd_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_t_gd_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_t_gd_nav
   (const char* name, GPS_NavandRecovery_Item_t_gd_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_t_gd_nav* asn1Test_GPS_NavandRecovery_Item_t_gd_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_t_oc_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_t_oc_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_t_oc_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_t_oc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_t_oc_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_t_oc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_t_oc_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_t_oc_nav
   (const char* name, GPS_NavandRecovery_Item_t_oc_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_t_oc_nav* asn1Test_GPS_NavandRecovery_Item_t_oc_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_a_f_2_nav                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_a_f_2_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_a_f_2_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_a_f_2_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_f_2_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_a_f_2_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_f_2_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_a_f_2_nav
   (const char* name, GPS_NavandRecovery_Item_a_f_2_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_a_f_2_nav* asn1Test_GPS_NavandRecovery_Item_a_f_2_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_a_f_1_nav                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_a_f_1_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_a_f_1_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_a_f_1_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_f_1_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_a_f_1_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_f_1_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_a_f_1_nav
   (const char* name, GPS_NavandRecovery_Item_a_f_1_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_a_f_1_nav* asn1Test_GPS_NavandRecovery_Item_a_f_1_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_a_f_zero_nav                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_a_f_zero_nav {
   OSUINT32  numbits;
   OSOCTET data[3];
} GPS_NavandRecovery_Item_a_f_zero_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_a_f_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_f_zero_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_a_f_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_f_zero_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_a_f_zero_nav
   (const char* name, GPS_NavandRecovery_Item_a_f_zero_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_a_f_zero_nav* asn1Test_GPS_NavandRecovery_Item_a_f_zero_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_c_rs_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_c_rs_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_c_rs_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_c_rs_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_rs_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_c_rs_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_rs_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_c_rs_nav
   (const char* name, GPS_NavandRecovery_Item_c_rs_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_c_rs_nav* asn1Test_GPS_NavandRecovery_Item_c_rs_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_delta_n_nav                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_delta_n_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_delta_n_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_delta_n_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_delta_n_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_delta_n_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_delta_n_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_delta_n_nav
   (const char* name, GPS_NavandRecovery_Item_delta_n_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_delta_n_nav* asn1Test_GPS_NavandRecovery_Item_delta_n_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_m_zero_nav                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_m_zero_nav {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_NavandRecovery_Item_m_zero_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_m_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_m_zero_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_m_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_m_zero_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_m_zero_nav
   (const char* name, GPS_NavandRecovery_Item_m_zero_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_m_zero_nav* asn1Test_GPS_NavandRecovery_Item_m_zero_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_c_uc_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_c_uc_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_c_uc_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_c_uc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_uc_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_c_uc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_uc_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_c_uc_nav
   (const char* name, GPS_NavandRecovery_Item_c_uc_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_c_uc_nav* asn1Test_GPS_NavandRecovery_Item_c_uc_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_gps_e_nav                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_gps_e_nav {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_NavandRecovery_Item_gps_e_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_gps_e_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_gps_e_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_gps_e_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_gps_e_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_gps_e_nav
   (const char* name, GPS_NavandRecovery_Item_gps_e_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_gps_e_nav* asn1Test_GPS_NavandRecovery_Item_gps_e_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_c_us_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_c_us_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_c_us_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_c_us_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_us_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_c_us_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_us_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_c_us_nav
   (const char* name, GPS_NavandRecovery_Item_c_us_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_c_us_nav* asn1Test_GPS_NavandRecovery_Item_c_us_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_a_sqrt_nav                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_a_sqrt_nav {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_NavandRecovery_Item_a_sqrt_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_a_sqrt_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_sqrt_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_a_sqrt_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_a_sqrt_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_a_sqrt_nav
   (const char* name, GPS_NavandRecovery_Item_a_sqrt_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_a_sqrt_nav* asn1Test_GPS_NavandRecovery_Item_a_sqrt_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_t_oe_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_t_oe_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_t_oe_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_t_oe_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_t_oe_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_t_oe_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_t_oe_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_t_oe_nav
   (const char* name, GPS_NavandRecovery_Item_t_oe_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_t_oe_nav* asn1Test_GPS_NavandRecovery_Item_t_oe_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_fit_interval_flag_nav             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_fit_interval_flag_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_fit_interval_flag_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_fit_interval_flag_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_fit_interval_flag_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_fit_interval_flag_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_fit_interval_flag_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_fit_interval_flag_nav
   (const char* name, GPS_NavandRecovery_Item_fit_interval_flag_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_fit_interval_flag_nav* asn1Test_GPS_NavandRecovery_Item_fit_interval_flag_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_aodo_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_aodo_nav {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_NavandRecovery_Item_aodo_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_aodo_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_aodo_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_aodo_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_aodo_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_aodo_nav
   (const char* name, GPS_NavandRecovery_Item_aodo_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_aodo_nav* asn1Test_GPS_NavandRecovery_Item_aodo_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_c_ic_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_c_ic_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_c_ic_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_c_ic_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_ic_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_c_ic_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_ic_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_c_ic_nav
   (const char* name, GPS_NavandRecovery_Item_c_ic_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_c_ic_nav* asn1Test_GPS_NavandRecovery_Item_c_ic_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_omega_zero_nav                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_omega_zero_nav {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_NavandRecovery_Item_omega_zero_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_omega_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_omega_zero_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_omega_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_omega_zero_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_omega_zero_nav
   (const char* name, GPS_NavandRecovery_Item_omega_zero_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_omega_zero_nav* asn1Test_GPS_NavandRecovery_Item_omega_zero_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_c_is_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_c_is_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_c_is_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_c_is_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_is_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_c_is_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_is_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_c_is_nav
   (const char* name, GPS_NavandRecovery_Item_c_is_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_c_is_nav* asn1Test_GPS_NavandRecovery_Item_c_is_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_i_zero_nav                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_i_zero_nav {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_NavandRecovery_Item_i_zero_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_i_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_i_zero_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_i_zero_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_i_zero_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_i_zero_nav
   (const char* name, GPS_NavandRecovery_Item_i_zero_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_i_zero_nav* asn1Test_GPS_NavandRecovery_Item_i_zero_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_c_rc_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_c_rc_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_c_rc_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_c_rc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_rc_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_c_rc_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_c_rc_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_c_rc_nav
   (const char* name, GPS_NavandRecovery_Item_c_rc_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_c_rc_nav* asn1Test_GPS_NavandRecovery_Item_c_rc_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_gps_omega_nav                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_gps_omega_nav {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_NavandRecovery_Item_gps_omega_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_gps_omega_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_gps_omega_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_gps_omega_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_gps_omega_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_gps_omega_nav
   (const char* name, GPS_NavandRecovery_Item_gps_omega_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_gps_omega_nav* asn1Test_GPS_NavandRecovery_Item_gps_omega_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_omegadot_nav                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_omegadot_nav {
   OSUINT32  numbits;
   OSOCTET data[3];
} GPS_NavandRecovery_Item_omegadot_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_omegadot_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_omegadot_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_omegadot_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_omegadot_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_omegadot_nav
   (const char* name, GPS_NavandRecovery_Item_omegadot_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_omegadot_nav* asn1Test_GPS_NavandRecovery_Item_omegadot_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_idot_nav                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_idot_nav {
   OSUINT32  numbits;
   OSOCTET data[2];
} GPS_NavandRecovery_Item_idot_nav;

EXTERN int asn1PE_GPS_NavandRecovery_Item_idot_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_idot_nav* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_idot_nav (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_idot_nav* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_idot_nav
   (const char* name, GPS_NavandRecovery_Item_idot_nav* pvalue);

EXTERN GPS_NavandRecovery_Item_idot_nav* asn1Test_GPS_NavandRecovery_Item_idot_nav
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item_spare_zero_fill                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item_spare_zero_fill {
   OSUINT32  numbits;
   OSOCTET data[3];
} GPS_NavandRecovery_Item_spare_zero_fill;

EXTERN int asn1PE_GPS_NavandRecovery_Item_spare_zero_fill (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_spare_zero_fill* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item_spare_zero_fill (ASN1CTXT* pctxt, GPS_NavandRecovery_Item_spare_zero_fill* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item_spare_zero_fill
   (const char* name, GPS_NavandRecovery_Item_spare_zero_fill* pvalue);

EXTERN GPS_NavandRecovery_Item_spare_zero_fill* asn1Test_GPS_NavandRecovery_Item_spare_zero_fill
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavandRecovery_Item                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_NavandRecovery_Item {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   OSUINT32 tx_tow_nav;
   SAT_ID sat_id_nav;
   GPS_NavandRecovery_Item_tlm_message_nav tlm_message_nav;
   GPS_NavandRecovery_Item_tlm_revd_c_nav tlm_revd_c_nav;
   GPS_NavandRecovery_Item_ho_word_nav ho_word_nav;
   GPS_NavandRecovery_Item_w_n_nav w_n_nav;
   GPS_NavandRecovery_Item_ca_or_p_on_l2_nav ca_or_p_on_l2_nav;
   GPS_NavandRecovery_Item_user_range_accuracy_index_nav user_range_accuracy_index_nav;
   GPS_NavandRecovery_Item_sv_health_nav sv_health_nav;
   GPS_NavandRecovery_Item_iodc_nav iodc_nav;
   GPS_NavandRecovery_Item_l2_p_dataflag_nav l2_p_dataflag_nav;
   GPS_NavandRecovery_Item_sf1_reserved_nav sf1_reserved_nav;
   GPS_NavandRecovery_Item_t_gd_nav t_gd_nav;
   GPS_NavandRecovery_Item_t_oc_nav t_oc_nav;
   GPS_NavandRecovery_Item_a_f_2_nav a_f_2_nav;
   GPS_NavandRecovery_Item_a_f_1_nav a_f_1_nav;
   GPS_NavandRecovery_Item_a_f_zero_nav a_f_zero_nav;
   GPS_NavandRecovery_Item_c_rs_nav c_rs_nav;
   GPS_NavandRecovery_Item_delta_n_nav delta_n_nav;
   GPS_NavandRecovery_Item_m_zero_nav m_zero_nav;
   GPS_NavandRecovery_Item_c_uc_nav c_uc_nav;
   GPS_NavandRecovery_Item_gps_e_nav gps_e_nav;
   GPS_NavandRecovery_Item_c_us_nav c_us_nav;
   GPS_NavandRecovery_Item_a_sqrt_nav a_sqrt_nav;
   GPS_NavandRecovery_Item_t_oe_nav t_oe_nav;
   GPS_NavandRecovery_Item_fit_interval_flag_nav fit_interval_flag_nav;
   GPS_NavandRecovery_Item_aodo_nav aodo_nav;
   GPS_NavandRecovery_Item_c_ic_nav c_ic_nav;
   GPS_NavandRecovery_Item_omega_zero_nav omega_zero_nav;
   GPS_NavandRecovery_Item_c_is_nav c_is_nav;
   GPS_NavandRecovery_Item_i_zero_nav i_zero_nav;
   GPS_NavandRecovery_Item_c_rc_nav c_rc_nav;
   GPS_NavandRecovery_Item_gps_omega_nav gps_omega_nav;
   GPS_NavandRecovery_Item_omegadot_nav omegadot_nav;
   GPS_NavandRecovery_Item_idot_nav idot_nav;
   GPS_NavandRecovery_Item_spare_zero_fill spare_zero_fill;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} GPS_NavandRecovery_Item;

EXTERN int asn1PE_GPS_NavandRecovery_Item (ASN1CTXT* pctxt, GPS_NavandRecovery_Item* pvalue);

EXTERN int asn1PD_GPS_NavandRecovery_Item (ASN1CTXT* pctxt, GPS_NavandRecovery_Item* pvalue);

EXTERN void asn1Print_GPS_NavandRecovery_Item
   (const char* name, GPS_NavandRecovery_Item* pvalue);

EXTERN GPS_NavandRecovery_Item* asn1Test_GPS_NavandRecovery_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_NavigationModel_and_TimeRecovery                      */
/*                                                            */
/**************************************************************/

/* List of GPS_NavandRecovery_Item */
typedef Asn1RTDList GPS_NavigationModel_and_TimeRecovery;

EXTERN int asn1PE_GPS_NavigationModel_and_TimeRecovery (ASN1CTXT* pctxt, GPS_NavigationModel_and_TimeRecovery* pvalue);

EXTERN int asn1PD_GPS_NavigationModel_and_TimeRecovery (ASN1CTXT* pctxt, GPS_NavigationModel_and_TimeRecovery* pvalue);

EXTERN void asn1Print_GPS_NavigationModel_and_TimeRecovery
   (const char* name, GPS_NavigationModel_and_TimeRecovery* pvalue);

EXTERN GPS_NavigationModel_and_TimeRecovery* asn1Test_GPS_NavigationModel_and_TimeRecovery
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_alpha_zero_ionos                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_alpha_zero_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_alpha_zero_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_alpha_zero_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_zero_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_alpha_zero_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_zero_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_alpha_zero_ionos
   (const char* name, GPS_Ionospheric_Model_alpha_zero_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_alpha_zero_ionos* asn1Test_GPS_Ionospheric_Model_alpha_zero_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_alpha_one_ionos                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_alpha_one_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_alpha_one_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_alpha_one_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_one_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_alpha_one_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_one_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_alpha_one_ionos
   (const char* name, GPS_Ionospheric_Model_alpha_one_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_alpha_one_ionos* asn1Test_GPS_Ionospheric_Model_alpha_one_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_alpha_two_ionos                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_alpha_two_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_alpha_two_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_alpha_two_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_two_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_alpha_two_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_two_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_alpha_two_ionos
   (const char* name, GPS_Ionospheric_Model_alpha_two_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_alpha_two_ionos* asn1Test_GPS_Ionospheric_Model_alpha_two_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_alpha_three_ionos                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_alpha_three_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_alpha_three_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_alpha_three_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_three_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_alpha_three_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_alpha_three_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_alpha_three_ionos
   (const char* name, GPS_Ionospheric_Model_alpha_three_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_alpha_three_ionos* asn1Test_GPS_Ionospheric_Model_alpha_three_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_beta_zero_ionos                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_beta_zero_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_beta_zero_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_beta_zero_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_zero_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_beta_zero_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_zero_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_beta_zero_ionos
   (const char* name, GPS_Ionospheric_Model_beta_zero_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_beta_zero_ionos* asn1Test_GPS_Ionospheric_Model_beta_zero_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_beta_one_ionos                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_beta_one_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_beta_one_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_beta_one_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_one_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_beta_one_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_one_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_beta_one_ionos
   (const char* name, GPS_Ionospheric_Model_beta_one_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_beta_one_ionos* asn1Test_GPS_Ionospheric_Model_beta_one_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_beta_two_ionos                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_beta_two_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_beta_two_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_beta_two_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_two_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_beta_two_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_two_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_beta_two_ionos
   (const char* name, GPS_Ionospheric_Model_beta_two_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_beta_two_ionos* asn1Test_GPS_Ionospheric_Model_beta_two_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model_beta_three_ionos                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model_beta_three_ionos {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Ionospheric_Model_beta_three_ionos;

EXTERN int asn1PE_GPS_Ionospheric_Model_beta_three_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_three_ionos* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model_beta_three_ionos (ASN1CTXT* pctxt, GPS_Ionospheric_Model_beta_three_ionos* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model_beta_three_ionos
   (const char* name, GPS_Ionospheric_Model_beta_three_ionos* pvalue);

EXTERN GPS_Ionospheric_Model_beta_three_ionos* asn1Test_GPS_Ionospheric_Model_beta_three_ionos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Ionospheric_Model                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Ionospheric_Model {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   GPS_Ionospheric_Model_alpha_zero_ionos alpha_zero_ionos;
   GPS_Ionospheric_Model_alpha_one_ionos alpha_one_ionos;
   GPS_Ionospheric_Model_alpha_two_ionos alpha_two_ionos;
   GPS_Ionospheric_Model_alpha_three_ionos alpha_three_ionos;
   GPS_Ionospheric_Model_beta_zero_ionos beta_zero_ionos;
   GPS_Ionospheric_Model_beta_one_ionos beta_one_ionos;
   GPS_Ionospheric_Model_beta_two_ionos beta_two_ionos;
   GPS_Ionospheric_Model_beta_three_ionos beta_three_ionos;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} GPS_Ionospheric_Model;

EXTERN int asn1PE_GPS_Ionospheric_Model (ASN1CTXT* pctxt, GPS_Ionospheric_Model* pvalue);

EXTERN int asn1PD_GPS_Ionospheric_Model (ASN1CTXT* pctxt, GPS_Ionospheric_Model* pvalue);

EXTERN void asn1Print_GPS_Ionospheric_Model
   (const char* name, GPS_Ionospheric_Model* pvalue);

EXTERN GPS_Ionospheric_Model* asn1Test_GPS_Ionospheric_Model
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_a_one_utc                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_a_one_utc {
   OSUINT32  numbits;
   OSOCTET data[3];
} GPS_UTC_Model_a_one_utc;

EXTERN int asn1PE_GPS_UTC_Model_a_one_utc (ASN1CTXT* pctxt, GPS_UTC_Model_a_one_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_a_one_utc (ASN1CTXT* pctxt, GPS_UTC_Model_a_one_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_a_one_utc
   (const char* name, GPS_UTC_Model_a_one_utc* pvalue);

EXTERN GPS_UTC_Model_a_one_utc* asn1Test_GPS_UTC_Model_a_one_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_a_zero_utc                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_a_zero_utc {
   OSUINT32  numbits;
   OSOCTET data[4];
} GPS_UTC_Model_a_zero_utc;

EXTERN int asn1PE_GPS_UTC_Model_a_zero_utc (ASN1CTXT* pctxt, GPS_UTC_Model_a_zero_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_a_zero_utc (ASN1CTXT* pctxt, GPS_UTC_Model_a_zero_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_a_zero_utc
   (const char* name, GPS_UTC_Model_a_zero_utc* pvalue);

EXTERN GPS_UTC_Model_a_zero_utc* asn1Test_GPS_UTC_Model_a_zero_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_t_ot_utc                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_t_ot_utc {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_UTC_Model_t_ot_utc;

EXTERN int asn1PE_GPS_UTC_Model_t_ot_utc (ASN1CTXT* pctxt, GPS_UTC_Model_t_ot_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_t_ot_utc (ASN1CTXT* pctxt, GPS_UTC_Model_t_ot_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_t_ot_utc
   (const char* name, GPS_UTC_Model_t_ot_utc* pvalue);

EXTERN GPS_UTC_Model_t_ot_utc* asn1Test_GPS_UTC_Model_t_ot_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_delta_t_ls_utc                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_delta_t_ls_utc {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_UTC_Model_delta_t_ls_utc;

EXTERN int asn1PE_GPS_UTC_Model_delta_t_ls_utc (ASN1CTXT* pctxt, GPS_UTC_Model_delta_t_ls_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_delta_t_ls_utc (ASN1CTXT* pctxt, GPS_UTC_Model_delta_t_ls_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_delta_t_ls_utc
   (const char* name, GPS_UTC_Model_delta_t_ls_utc* pvalue);

EXTERN GPS_UTC_Model_delta_t_ls_utc* asn1Test_GPS_UTC_Model_delta_t_ls_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_w_n_t_utc                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_w_n_t_utc {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_UTC_Model_w_n_t_utc;

EXTERN int asn1PE_GPS_UTC_Model_w_n_t_utc (ASN1CTXT* pctxt, GPS_UTC_Model_w_n_t_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_w_n_t_utc (ASN1CTXT* pctxt, GPS_UTC_Model_w_n_t_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_w_n_t_utc
   (const char* name, GPS_UTC_Model_w_n_t_utc* pvalue);

EXTERN GPS_UTC_Model_w_n_t_utc* asn1Test_GPS_UTC_Model_w_n_t_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_w_n_lsf_utc                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_w_n_lsf_utc {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_UTC_Model_w_n_lsf_utc;

EXTERN int asn1PE_GPS_UTC_Model_w_n_lsf_utc (ASN1CTXT* pctxt, GPS_UTC_Model_w_n_lsf_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_w_n_lsf_utc (ASN1CTXT* pctxt, GPS_UTC_Model_w_n_lsf_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_w_n_lsf_utc
   (const char* name, GPS_UTC_Model_w_n_lsf_utc* pvalue);

EXTERN GPS_UTC_Model_w_n_lsf_utc* asn1Test_GPS_UTC_Model_w_n_lsf_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_dn_utc                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_dn_utc {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_UTC_Model_dn_utc;

EXTERN int asn1PE_GPS_UTC_Model_dn_utc (ASN1CTXT* pctxt, GPS_UTC_Model_dn_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_dn_utc (ASN1CTXT* pctxt, GPS_UTC_Model_dn_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_dn_utc
   (const char* name, GPS_UTC_Model_dn_utc* pvalue);

EXTERN GPS_UTC_Model_dn_utc* asn1Test_GPS_UTC_Model_dn_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model_delta_t_lsf_utc                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model_delta_t_lsf_utc {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_UTC_Model_delta_t_lsf_utc;

EXTERN int asn1PE_GPS_UTC_Model_delta_t_lsf_utc (ASN1CTXT* pctxt, GPS_UTC_Model_delta_t_lsf_utc* pvalue);

EXTERN int asn1PD_GPS_UTC_Model_delta_t_lsf_utc (ASN1CTXT* pctxt, GPS_UTC_Model_delta_t_lsf_utc* pvalue);

EXTERN void asn1Print_GPS_UTC_Model_delta_t_lsf_utc
   (const char* name, GPS_UTC_Model_delta_t_lsf_utc* pvalue);

EXTERN GPS_UTC_Model_delta_t_lsf_utc* asn1Test_GPS_UTC_Model_delta_t_lsf_utc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_UTC_Model                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_UTC_Model {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   GPS_UTC_Model_a_one_utc a_one_utc;
   GPS_UTC_Model_a_zero_utc a_zero_utc;
   GPS_UTC_Model_t_ot_utc t_ot_utc;
   GPS_UTC_Model_delta_t_ls_utc delta_t_ls_utc;
   GPS_UTC_Model_w_n_t_utc w_n_t_utc;
   GPS_UTC_Model_w_n_lsf_utc w_n_lsf_utc;
   GPS_UTC_Model_dn_utc dn_utc;
   GPS_UTC_Model_delta_t_lsf_utc delta_t_lsf_utc;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} GPS_UTC_Model;

EXTERN int asn1PE_GPS_UTC_Model (ASN1CTXT* pctxt, GPS_UTC_Model* pvalue);

EXTERN int asn1PD_GPS_UTC_Model (ASN1CTXT* pctxt, GPS_UTC_Model* pvalue);

EXTERN void asn1Print_GPS_UTC_Model
   (const char* name, GPS_UTC_Model* pvalue);

EXTERN GPS_UTC_Model* asn1Test_GPS_UTC_Model
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Almanac_wna_alm                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Almanac_wna_alm {
   OSUINT32  numbits;
   OSOCTET data[1];
} GPS_Almanac_wna_alm;

EXTERN int asn1PE_GPS_Almanac_wna_alm (ASN1CTXT* pctxt, GPS_Almanac_wna_alm* pvalue);

EXTERN int asn1PD_GPS_Almanac_wna_alm (ASN1CTXT* pctxt, GPS_Almanac_wna_alm* pvalue);

EXTERN void asn1Print_GPS_Almanac_wna_alm
   (const char* name, GPS_Almanac_wna_alm* pvalue);

EXTERN GPS_Almanac_wna_alm* asn1Test_GPS_Almanac_wna_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DATA_ID                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DATA_ID;

EXTERN int asn1PE_DATA_ID (ASN1CTXT* pctxt, DATA_ID value);

EXTERN int asn1PD_DATA_ID (ASN1CTXT* pctxt, DATA_ID* pvalue);

EXTERN void asn1Print_DATA_ID
   (const char* name, DATA_ID* pvalue);

EXTERN DATA_ID* asn1Test_DATA_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_e_alm                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_e_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_Item_gps_e_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_e_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_e_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_e_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_e_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_e_alm
   (const char* name, SAT_Info_Almanac_Item_gps_e_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_e_alm* asn1Test_SAT_Info_Almanac_Item_gps_e_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_toa_alm                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_toa_alm {
   OSUINT32  numbits;
   OSOCTET data[1];
} SAT_Info_Almanac_Item_gps_toa_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_toa_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_toa_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_toa_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_toa_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_toa_alm
   (const char* name, SAT_Info_Almanac_Item_gps_toa_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_toa_alm* asn1Test_SAT_Info_Almanac_Item_gps_toa_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_delta_I_alm                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_delta_I_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_Item_gps_delta_I_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_delta_I_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_delta_I_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_delta_I_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_delta_I_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_delta_I_alm
   (const char* name, SAT_Info_Almanac_Item_gps_delta_I_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_delta_I_alm* asn1Test_SAT_Info_Almanac_Item_gps_delta_I_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_omegadot_alm                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_omegadot_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_Item_omegadot_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_omegadot_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_omegadot_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_omegadot_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_omegadot_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_omegadot_alm
   (const char* name, SAT_Info_Almanac_Item_omegadot_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_omegadot_alm* asn1Test_SAT_Info_Almanac_Item_omegadot_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_svhealth_alm                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_svhealth_alm {
   OSUINT32  numbits;
   OSOCTET data[1];
} SAT_Info_Almanac_Item_svhealth_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_svhealth_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_svhealth_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_svhealth_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_svhealth_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_svhealth_alm
   (const char* name, SAT_Info_Almanac_Item_svhealth_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_svhealth_alm* asn1Test_SAT_Info_Almanac_Item_svhealth_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_a_sqrt_alm                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_a_sqrt_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_Item_gps_a_sqrt_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_a_sqrt_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_a_sqrt_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_a_sqrt_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_a_sqrt_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_a_sqrt_alm
   (const char* name, SAT_Info_Almanac_Item_gps_a_sqrt_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_a_sqrt_alm* asn1Test_SAT_Info_Almanac_Item_gps_a_sqrt_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_omegazero_alm                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_omegazero_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_Item_omegazero_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_omegazero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_omegazero_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_omegazero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_omegazero_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_omegazero_alm
   (const char* name, SAT_Info_Almanac_Item_omegazero_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_omegazero_alm* asn1Test_SAT_Info_Almanac_Item_omegazero_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_m_zero_alm                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_m_zero_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_Item_m_zero_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_m_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_m_zero_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_m_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_m_zero_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_m_zero_alm
   (const char* name, SAT_Info_Almanac_Item_m_zero_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_m_zero_alm* asn1Test_SAT_Info_Almanac_Item_m_zero_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_omega_alm                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_omega_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_Item_gps_omega_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_omega_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_omega_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_omega_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_omega_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_omega_alm
   (const char* name, SAT_Info_Almanac_Item_gps_omega_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_omega_alm* asn1Test_SAT_Info_Almanac_Item_gps_omega_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_af_zero_alm                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_af_zero_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_Item_gps_af_zero_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_af_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_af_zero_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_af_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_af_zero_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_af_zero_alm
   (const char* name, SAT_Info_Almanac_Item_gps_af_zero_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_af_zero_alm* asn1Test_SAT_Info_Almanac_Item_gps_af_zero_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item_gps_af_one_alm                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item_gps_af_one_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_Item_gps_af_one_alm;

EXTERN int asn1PE_SAT_Info_Almanac_Item_gps_af_one_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_af_one_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item_gps_af_one_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_Item_gps_af_one_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item_gps_af_one_alm
   (const char* name, SAT_Info_Almanac_Item_gps_af_one_alm* pvalue);

EXTERN SAT_Info_Almanac_Item_gps_af_one_alm* asn1Test_SAT_Info_Almanac_Item_gps_af_one_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_Item                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_Item {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   DATA_ID data_id;
   SAT_ID sat_id;
   SAT_Info_Almanac_Item_gps_e_alm gps_e_alm;
   SAT_Info_Almanac_Item_gps_toa_alm gps_toa_alm;
   SAT_Info_Almanac_Item_gps_delta_I_alm gps_delta_I_alm;
   SAT_Info_Almanac_Item_omegadot_alm omegadot_alm;
   SAT_Info_Almanac_Item_svhealth_alm svhealth_alm;
   SAT_Info_Almanac_Item_gps_a_sqrt_alm gps_a_sqrt_alm;
   SAT_Info_Almanac_Item_omegazero_alm omegazero_alm;
   SAT_Info_Almanac_Item_m_zero_alm m_zero_alm;
   SAT_Info_Almanac_Item_gps_omega_alm gps_omega_alm;
   SAT_Info_Almanac_Item_gps_af_zero_alm gps_af_zero_alm;
   SAT_Info_Almanac_Item_gps_af_one_alm gps_af_one_alm;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} SAT_Info_Almanac_Item;

EXTERN int asn1PE_SAT_Info_Almanac_Item (ASN1CTXT* pctxt, SAT_Info_Almanac_Item* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_Item (ASN1CTXT* pctxt, SAT_Info_Almanac_Item* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_Item
   (const char* name, SAT_Info_Almanac_Item* pvalue);

EXTERN SAT_Info_Almanac_Item* asn1Test_SAT_Info_Almanac_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac                                          */
/*                                                            */
/**************************************************************/

/* List of SAT_Info_Almanac_Item */
typedef Asn1RTDList SAT_Info_Almanac;

EXTERN int asn1PE_SAT_Info_Almanac (ASN1CTXT* pctxt, SAT_Info_Almanac* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac (ASN1CTXT* pctxt, SAT_Info_Almanac* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac
   (const char* name, SAT_Info_Almanac* pvalue);

EXTERN SAT_Info_Almanac* asn1Test_SAT_Info_Almanac
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Almanac_sVGlobalHealth_alm                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Almanac_sVGlobalHealth_alm {
   OSUINT32  numbits;
   OSOCTET data[46];
} GPS_Almanac_sVGlobalHealth_alm;

EXTERN int asn1PE_GPS_Almanac_sVGlobalHealth_alm (ASN1CTXT* pctxt, GPS_Almanac_sVGlobalHealth_alm* pvalue);

EXTERN int asn1PD_GPS_Almanac_sVGlobalHealth_alm (ASN1CTXT* pctxt, GPS_Almanac_sVGlobalHealth_alm* pvalue);

EXTERN void asn1Print_GPS_Almanac_sVGlobalHealth_alm
   (const char* name, GPS_Almanac_sVGlobalHealth_alm* pvalue);

EXTERN GPS_Almanac_sVGlobalHealth_alm* asn1Test_GPS_Almanac_sVGlobalHealth_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Almanac                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Almanac {
   struct {
      unsigned sVGlobalHealth_almPresent : 1;
      unsigned ie_ExtensionsPresent : 1;
   } m;
   GPS_Almanac_wna_alm wna_alm;
   SAT_Info_Almanac sat_info_almanac;
   GPS_Almanac_sVGlobalHealth_alm sVGlobalHealth_alm;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} GPS_Almanac;

EXTERN int asn1PE_GPS_Almanac (ASN1CTXT* pctxt, GPS_Almanac* pvalue);

EXTERN int asn1PD_GPS_Almanac (ASN1CTXT* pctxt, GPS_Almanac* pvalue);

EXTERN void asn1Print_GPS_Almanac
   (const char* name, GPS_Almanac* pvalue);

EXTERN GPS_Almanac* asn1Test_GPS_Almanac
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_RealTime_Integrity_Item                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_RealTime_Integrity_Item {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   SAT_ID bad_sat_id;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} SAT_Info_RealTime_Integrity_Item;

EXTERN int asn1PE_SAT_Info_RealTime_Integrity_Item (ASN1CTXT* pctxt, SAT_Info_RealTime_Integrity_Item* pvalue);

EXTERN int asn1PD_SAT_Info_RealTime_Integrity_Item (ASN1CTXT* pctxt, SAT_Info_RealTime_Integrity_Item* pvalue);

EXTERN void asn1Print_SAT_Info_RealTime_Integrity_Item
   (const char* name, SAT_Info_RealTime_Integrity_Item* pvalue);

EXTERN SAT_Info_RealTime_Integrity_Item* asn1Test_SAT_Info_RealTime_Integrity_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SATInfo_RealTime_Integrity                                */
/*                                                            */
/**************************************************************/

/* List of SAT_Info_RealTime_Integrity_Item */
typedef Asn1RTDList SATInfo_RealTime_Integrity;

EXTERN int asn1PE_SATInfo_RealTime_Integrity (ASN1CTXT* pctxt, SATInfo_RealTime_Integrity* pvalue);

EXTERN int asn1PD_SATInfo_RealTime_Integrity (ASN1CTXT* pctxt, SATInfo_RealTime_Integrity* pvalue);

EXTERN void asn1Print_SATInfo_RealTime_Integrity
   (const char* name, SATInfo_RealTime_Integrity* pvalue);

EXTERN SATInfo_RealTime_Integrity* asn1Test_SATInfo_RealTime_Integrity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPSBadSat_Info_RealTime_Integrity                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPSBadSat_Info_RealTime_Integrity {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   SATInfo_RealTime_Integrity sat_info;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} GPSBadSat_Info_RealTime_Integrity;

EXTERN int asn1PE_GPSBadSat_Info_RealTime_Integrity (ASN1CTXT* pctxt, GPSBadSat_Info_RealTime_Integrity* pvalue);

EXTERN int asn1PD_GPSBadSat_Info_RealTime_Integrity (ASN1CTXT* pctxt, GPSBadSat_Info_RealTime_Integrity* pvalue);

EXTERN void asn1Print_GPSBadSat_Info_RealTime_Integrity
   (const char* name, GPSBadSat_Info_RealTime_Integrity* pvalue);

EXTERN GPSBadSat_Info_RealTime_Integrity* asn1Test_GPSBadSat_Info_RealTime_Integrity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_RealTime_Integrity                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_GPS_RealTime_Integrity_bad_satellites 1
#define T_GPS_RealTime_Integrity_no_bad_satellites 2

typedef struct EXTERN GPS_RealTime_Integrity {
   int t;
   union {
      /* t = 1 */
      GPSBadSat_Info_RealTime_Integrity *bad_satellites;
      /* t = 2 */
   } u;
} GPS_RealTime_Integrity;

EXTERN int asn1PE_GPS_RealTime_Integrity (ASN1CTXT* pctxt, GPS_RealTime_Integrity* pvalue);

EXTERN int asn1PD_GPS_RealTime_Integrity (ASN1CTXT* pctxt, GPS_RealTime_Integrity* pvalue);

EXTERN void asn1Print_GPS_RealTime_Integrity
   (const char* name, GPS_RealTime_Integrity* pvalue);

EXTERN GPS_RealTime_Integrity* asn1Test_GPS_RealTime_Integrity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_RX_POS_latitudeSign                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   north = 0,
   south = 1
} GPS_RX_POS_latitudeSign_Root;

typedef OSUINT32 GPS_RX_POS_latitudeSign;

EXTERN int asn1PE_GPS_RX_POS_latitudeSign (ASN1CTXT* pctxt, GPS_RX_POS_latitudeSign value);

EXTERN int asn1PD_GPS_RX_POS_latitudeSign (ASN1CTXT* pctxt, GPS_RX_POS_latitudeSign* pvalue);

EXTERN void asn1Print_GPS_RX_POS_latitudeSign
   (const char* name, GPS_RX_POS_latitudeSign* pvalue);

EXTERN GPS_RX_POS_latitudeSign* asn1Test_GPS_RX_POS_latitudeSign
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_RX_POS_directionOfAltitude                            */
/*                                                            */
/**************************************************************/

typedef enum {
   height = 0,
   depth = 1
} GPS_RX_POS_directionOfAltitude_Root;

typedef OSUINT32 GPS_RX_POS_directionOfAltitude;

EXTERN int asn1PE_GPS_RX_POS_directionOfAltitude (ASN1CTXT* pctxt, GPS_RX_POS_directionOfAltitude value);

EXTERN int asn1PD_GPS_RX_POS_directionOfAltitude (ASN1CTXT* pctxt, GPS_RX_POS_directionOfAltitude* pvalue);

EXTERN void asn1Print_GPS_RX_POS_directionOfAltitude
   (const char* name, GPS_RX_POS_directionOfAltitude* pvalue);

EXTERN GPS_RX_POS_directionOfAltitude* asn1Test_GPS_RX_POS_directionOfAltitude
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_RX_POS                                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_RX_POS {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GPS_RX_POS_latitudeSign latitudeSign;
   OSUINT32 latitude;
   OSINT32 longitude;
   GPS_RX_POS_directionOfAltitude directionOfAltitude;
   OSUINT16 altitude;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} GPS_RX_POS;

EXTERN int asn1PE_GPS_RX_POS (ASN1CTXT* pctxt, GPS_RX_POS* pvalue);

EXTERN int asn1PD_GPS_RX_POS (ASN1CTXT* pctxt, GPS_RX_POS* pvalue);

EXTERN void asn1Print_GPS_RX_POS
   (const char* name, GPS_RX_POS* pvalue);

EXTERN GPS_RX_POS* asn1Test_GPS_RX_POS
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestedDataValue                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RequestedDataValue {
   struct {
      unsigned dgps_correctionsPresent : 1;
      unsigned gps_navandrecoveryPresent : 1;
      unsigned gps_ionos_modelPresent : 1;
      unsigned gps_utc_modelPresent : 1;
      unsigned gps_almanacPresent : 1;
      unsigned gps_rt_integrityPresent : 1;
      unsigned gpsrxposPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DGPSCorrections dgps_corrections;
   GPS_NavigationModel_and_TimeRecovery gps_navandrecovery;
   GPS_Ionospheric_Model gps_ionos_model;
   GPS_UTC_Model gps_utc_model;
   GPS_Almanac gps_almanac;
   GPS_RealTime_Integrity gps_rt_integrity;
   GPS_RX_POS gpsrxpos;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} RequestedDataValue;

EXTERN int asn1PE_RequestedDataValue (ASN1CTXT* pctxt, RequestedDataValue* pvalue);

EXTERN int asn1PD_RequestedDataValue (ASN1CTXT* pctxt, RequestedDataValue* pvalue);

EXTERN void asn1Print_RequestedDataValue
   (const char* name, RequestedDataValue* pvalue);

EXTERN RequestedDataValue* asn1Test_RequestedDataValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationAvailable                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InformationAvailable {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   RequestedDataValue requesteddataValue;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} InformationAvailable;

EXTERN int asn1PE_InformationAvailable (ASN1CTXT* pctxt, InformationAvailable* pvalue);

EXTERN int asn1PD_InformationAvailable (ASN1CTXT* pctxt, InformationAvailable* pvalue);

EXTERN void asn1Print_InformationAvailable
   (const char* name, InformationAvailable* pvalue);

EXTERN InformationAvailable* asn1Test_InformationAvailable
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationnotAvailable                                   */
/*                                                            */
/**************************************************************/

EXTERN int asn1PE_InformationnotAvailable_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PE_InformationnotAvailable(pctxt) \
asn1PE_InformationnotAvailable_(pctxt, NULL)

EXTERN int asn1PD_InformationnotAvailable_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PD_InformationnotAvailable(pctxt) \
asn1PD_InformationnotAvailable_(pctxt, NULL)

EXTERN void asn1Print_InformationnotAvailable_
   (const char* name, void* pvalue);
#define asn1Print_InformationnotAvailable(name) \
asn1Print_InformationnotAvailable_(name, NULL)

/**************************************************************/
/*                                                            */
/*  RequestedDataValueInformation                             */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_RequestedDataValueInformation_informationAvailable 1
#define T_RequestedDataValueInformation_informationnotAvailable 2

typedef struct EXTERN RequestedDataValueInformation {
   int t;
   union {
      /* t = 1 */
      InformationAvailable *informationAvailable;
      /* t = 2 */
   } u;
} RequestedDataValueInformation;

EXTERN int asn1PE_RequestedDataValueInformation (ASN1CTXT* pctxt, RequestedDataValueInformation* pvalue);

EXTERN int asn1PD_RequestedDataValueInformation (ASN1CTXT* pctxt, RequestedDataValueInformation* pvalue);

EXTERN void asn1Print_RequestedDataValueInformation
   (const char* name, RequestedDataValueInformation* pvalue);

EXTERN RequestedDataValueInformation* asn1Test_RequestedDataValueInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CSBTransmissionID                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT16 CSBTransmissionID;

EXTERN int asn1PE_CSBTransmissionID (ASN1CTXT* pctxt, CSBTransmissionID value);

EXTERN int asn1PD_CSBTransmissionID (ASN1CTXT* pctxt, CSBTransmissionID* pvalue);

EXTERN void asn1Print_CSBTransmissionID
   (const char* name, CSBTransmissionID* pvalue);

EXTERN CSBTransmissionID* asn1Test_CSBTransmissionID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFN                                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT16 SFN;

EXTERN int asn1PE_SFN (ASN1CTXT* pctxt, SFN value);

EXTERN int asn1PD_SFN (ASN1CTXT* pctxt, SFN* pvalue);

EXTERN void asn1Print_SFN
   (const char* name, SFN* pvalue);

EXTERN SFN* asn1Test_SFN
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstCode                                         */
/*                                                            */
/**************************************************************/

typedef OSINT32 CellSyncBurstCode;

EXTERN int asn1PE_CellSyncBurstCode (ASN1CTXT* pctxt, CellSyncBurstCode value);

EXTERN int asn1PD_CellSyncBurstCode (ASN1CTXT* pctxt, CellSyncBurstCode* pvalue);

EXTERN void asn1Print_CellSyncBurstCode
   (const char* name, CellSyncBurstCode* pvalue);

EXTERN CellSyncBurstCode* asn1Test_CellSyncBurstCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstCodeShift                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CellSyncBurstCodeShift;

EXTERN int asn1PE_CellSyncBurstCodeShift (ASN1CTXT* pctxt, CellSyncBurstCodeShift value);

EXTERN int asn1PD_CellSyncBurstCodeShift (ASN1CTXT* pctxt, CellSyncBurstCodeShift* pvalue);

EXTERN void asn1Print_CellSyncBurstCodeShift
   (const char* name, CellSyncBurstCodeShift* pvalue);

EXTERN CellSyncBurstCodeShift* asn1Test_CellSyncBurstCodeShift
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CSBMeasurementID                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT16 CSBMeasurementID;

EXTERN int asn1PE_CSBMeasurementID (ASN1CTXT* pctxt, CSBMeasurementID value);

EXTERN int asn1PD_CSBMeasurementID (ASN1CTXT* pctxt, CSBMeasurementID* pvalue);

EXTERN void asn1Print_CSBMeasurementID
   (const char* name, CSBMeasurementID* pvalue);

EXTERN CSBMeasurementID* asn1Test_CSBMeasurementID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportType                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   initialPhase = 0,
   steadyStatePhase = 1,
   lateEntrantCell = 2,
   frequencyAcquisition = 3
} SynchronisationReportType_Root;

typedef OSUINT32 SynchronisationReportType;

EXTERN int asn1PE_SynchronisationReportType (ASN1CTXT* pctxt, SynchronisationReportType value);

EXTERN int asn1PD_SynchronisationReportType (ASN1CTXT* pctxt, SynchronisationReportType* pvalue);

EXTERN void asn1Print_SynchronisationReportType
   (const char* name, SynchronisationReportType* pvalue);

EXTERN SynchronisationReportType* asn1Test_SynchronisationReportType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportCharacteristicsType                  */
/*                                                            */
/**************************************************************/

typedef enum {
   frameRelated = 0,
   sFNperiodRelated = 1,
   cycleLengthRelated = 2,
   thresholdExceeding = 3,
   frequencyAcquisitionCompleted = 4
} SynchronisationReportCharacteristicsType_Root;

typedef OSUINT32 SynchronisationReportCharacteristicsType;

EXTERN int asn1PE_SynchronisationReportCharacteristicsType (ASN1CTXT* pctxt, SynchronisationReportCharacteristicsType value);

EXTERN int asn1PD_SynchronisationReportCharacteristicsType (ASN1CTXT* pctxt, SynchronisationReportCharacteristicsType* pvalue);

EXTERN void asn1Print_SynchronisationReportCharacteristicsType
   (const char* name, SynchronisationReportCharacteristicsType* pvalue);

EXTERN SynchronisationReportCharacteristicsType* asn1Test_SynchronisationReportCharacteristicsType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SyncFrameNumber                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SyncFrameNumber;

EXTERN int asn1PE_SyncFrameNumber (ASN1CTXT* pctxt, SyncFrameNumber value);

EXTERN int asn1PD_SyncFrameNumber (ASN1CTXT* pctxt, SyncFrameNumber* pvalue);

EXTERN void asn1Print_SyncFrameNumber
   (const char* name, SyncFrameNumber* pvalue);

EXTERN SyncFrameNumber* asn1Test_SyncFrameNumber
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstTiming                                       */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_CellSyncBurstTiming_initialPhase 1
#define T_CellSyncBurstTiming_steadyStatePhase 2

typedef struct EXTERN CellSyncBurstTiming {
   int t;
   union {
      /* t = 1 */
      OSINT32 initialPhase;
      /* t = 2 */
      OSINT32 steadyStatePhase;
   } u;
} CellSyncBurstTiming;

EXTERN int asn1PE_CellSyncBurstTiming (ASN1CTXT* pctxt, CellSyncBurstTiming* pvalue);

EXTERN int asn1PD_CellSyncBurstTiming (ASN1CTXT* pctxt, CellSyncBurstTiming* pvalue);

EXTERN void asn1Print_CellSyncBurstTiming
   (const char* name, CellSyncBurstTiming* pvalue);

EXTERN CellSyncBurstTiming* asn1Test_CellSyncBurstTiming
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstTimingThreshold                              */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CellSyncBurstTimingThreshold;

EXTERN int asn1PE_CellSyncBurstTimingThreshold (ASN1CTXT* pctxt, CellSyncBurstTimingThreshold value);

EXTERN int asn1PD_CellSyncBurstTimingThreshold (ASN1CTXT* pctxt, CellSyncBurstTimingThreshold* pvalue);

EXTERN void asn1Print_CellSyncBurstTimingThreshold
   (const char* name, CellSyncBurstTimingThreshold* pvalue);

EXTERN CellSyncBurstTimingThreshold* asn1Test_CellSyncBurstTimingThreshold
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportCharactCellSyncBurstInfoItem         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SynchronisationReportCharactCellSyncBurstInfoItem {
   struct {
      unsigned cellSyncBurstTimingPresent : 1;
      unsigned cellSyncBurstTimingThresholdPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellSyncBurstCode cellSyncBurstCode;
   CellSyncBurstCodeShift cellSyncBurstCodeShift;
   CellSyncBurstTiming cellSyncBurstTiming;
   CellSyncBurstTimingThreshold cellSyncBurstTimingThreshold;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SynchronisationReportCharactCellSyncBurstInfoItem;

EXTERN int asn1PE_SynchronisationReportCharactCellSyncBurstInfoItem (ASN1CTXT* pctxt, SynchronisationReportCharactCellSyncBurstInfoItem* pvalue);

EXTERN int asn1PD_SynchronisationReportCharactCellSyncBurstInfoItem (ASN1CTXT* pctxt, SynchronisationReportCharactCellSyncBurstInfoItem* pvalue);

EXTERN void asn1Print_SynchronisationReportCharactCellSyncBurstInfoItem
   (const char* name, SynchronisationReportCharactCellSyncBurstInfoItem* pvalue);

EXTERN SynchronisationReportCharactCellSyncBurstInfoItem* asn1Test_SynchronisationReportCharactCellSyncBurstInfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportCharactThreInfoItem_cellSyncBurstIn  */
/*                                                            */
/**************************************************************/

/* List of SynchronisationReportCharactCellSyncBurstInfoItem */
typedef Asn1RTDList SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation;

EXTERN int asn1PE_SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation (ASN1CTXT* pctxt, SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation* pvalue);

EXTERN int asn1PD_SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation (ASN1CTXT* pctxt, SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation* pvalue);

EXTERN void asn1Print_SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation
   (const char* name, SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation* pvalue);

EXTERN SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation* asn1Test_SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportCharactThreInfoItem                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SynchronisationReportCharactThreInfoItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SyncFrameNumber syncFrameNumber;
   SynchronisationReportCharactThreInfoItem_cellSyncBurstInformation cellSyncBurstInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SynchronisationReportCharactThreInfoItem;

EXTERN int asn1PE_SynchronisationReportCharactThreInfoItem (ASN1CTXT* pctxt, SynchronisationReportCharactThreInfoItem* pvalue);

EXTERN int asn1PD_SynchronisationReportCharactThreInfoItem (ASN1CTXT* pctxt, SynchronisationReportCharactThreInfoItem* pvalue);

EXTERN void asn1Print_SynchronisationReportCharactThreInfoItem
   (const char* name, SynchronisationReportCharactThreInfoItem* pvalue);

EXTERN SynchronisationReportCharactThreInfoItem* asn1Test_SynchronisationReportCharactThreInfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportCharactThreExc                       */
/*                                                            */
/**************************************************************/

/* List of SynchronisationReportCharactThreInfoItem */
typedef Asn1RTDList SynchronisationReportCharactThreExc;

EXTERN int asn1PE_SynchronisationReportCharactThreExc (ASN1CTXT* pctxt, SynchronisationReportCharactThreExc* pvalue);

EXTERN int asn1PD_SynchronisationReportCharactThreExc (ASN1CTXT* pctxt, SynchronisationReportCharactThreExc* pvalue);

EXTERN void asn1Print_SynchronisationReportCharactThreExc
   (const char* name, SynchronisationReportCharactThreExc* pvalue);

EXTERN SynchronisationReportCharactThreExc* asn1Test_SynchronisationReportCharactThreExc
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationReportCharacteristics                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SynchronisationReportCharacteristics {
   struct {
      unsigned synchronisationReportCharactThreExcPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SynchronisationReportCharacteristicsType synchronisationReportCharacteristicsType;
   SynchronisationReportCharactThreExc synchronisationReportCharactThreExc;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SynchronisationReportCharacteristics;

EXTERN int asn1PE_SynchronisationReportCharacteristics (ASN1CTXT* pctxt, SynchronisationReportCharacteristics* pvalue);

EXTERN int asn1PD_SynchronisationReportCharacteristics (ASN1CTXT* pctxt, SynchronisationReportCharacteristics* pvalue);

EXTERN void asn1Print_SynchronisationReportCharacteristics
   (const char* name, SynchronisationReportCharacteristics* pvalue);

EXTERN SynchronisationReportCharacteristics* asn1Test_SynchronisationReportCharacteristics
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UARFCN                                                    */
/*                                                            */
/**************************************************************/

typedef OSINT32 UARFCN;

EXTERN int asn1PE_UARFCN (ASN1CTXT* pctxt, UARFCN value);

EXTERN int asn1PD_UARFCN (ASN1CTXT* pctxt, UARFCN* pvalue);

EXTERN void asn1Print_UARFCN
   (const char* name, UARFCN* pvalue);

EXTERN UARFCN* asn1Test_UARFCN
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SYNCDlCodeId                                              */
/*                                                            */
/**************************************************************/

typedef OSINT32 SYNCDlCodeId;

EXTERN int asn1PE_SYNCDlCodeId (ASN1CTXT* pctxt, SYNCDlCodeId value);

EXTERN int asn1PD_SYNCDlCodeId (ASN1CTXT* pctxt, SYNCDlCodeId* pvalue);

EXTERN void asn1Print_SYNCDlCodeId
   (const char* name, SYNCDlCodeId* pvalue);

EXTERN SYNCDlCodeId* asn1Test_SYNCDlCodeId
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimingAdjustmentValueLCR                                  */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TimingAdjustmentValueLCR_initialPhase 1
#define T_TimingAdjustmentValueLCR_steadyStatePhase 2

typedef struct EXTERN TimingAdjustmentValueLCR {
   int t;
   union {
      /* t = 1 */
      OSINT32 initialPhase;
      /* t = 2 */
      OSINT32 steadyStatePhase;
   } u;
} TimingAdjustmentValueLCR;

EXTERN int asn1PE_TimingAdjustmentValueLCR (ASN1CTXT* pctxt, TimingAdjustmentValueLCR* pvalue);

EXTERN int asn1PD_TimingAdjustmentValueLCR (ASN1CTXT* pctxt, TimingAdjustmentValueLCR* pvalue);

EXTERN void asn1Print_TimingAdjustmentValueLCR
   (const char* name, TimingAdjustmentValueLCR* pvalue);

EXTERN TimingAdjustmentValueLCR* asn1Test_TimingAdjustmentValueLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FrameAdjustmentValue                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT16 FrameAdjustmentValue;

EXTERN int asn1PE_FrameAdjustmentValue (ASN1CTXT* pctxt, FrameAdjustmentValue value);

EXTERN int asn1PD_FrameAdjustmentValue (ASN1CTXT* pctxt, FrameAdjustmentValue* pvalue);

EXTERN void asn1Print_FrameAdjustmentValue
   (const char* name, FrameAdjustmentValue* pvalue);

EXTERN FrameAdjustmentValue* asn1Test_FrameAdjustmentValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimingAdjustmentValue                                     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TimingAdjustmentValue_initialPhase 1
#define T_TimingAdjustmentValue_steadyStatePhase 2

typedef struct EXTERN TimingAdjustmentValue {
   int t;
   union {
      /* t = 1 */
      OSINT32 initialPhase;
      /* t = 2 */
      OSINT32 steadyStatePhase;
   } u;
} TimingAdjustmentValue;

EXTERN int asn1PE_TimingAdjustmentValue (ASN1CTXT* pctxt, TimingAdjustmentValue* pvalue);

EXTERN int asn1PD_TimingAdjustmentValue (ASN1CTXT* pctxt, TimingAdjustmentValue* pvalue);

EXTERN void asn1Print_TimingAdjustmentValue
   (const char* name, TimingAdjustmentValue* pvalue);

EXTERN TimingAdjustmentValue* asn1Test_TimingAdjustmentValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstSIR                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 CellSyncBurstSIR;

EXTERN int asn1PE_CellSyncBurstSIR (ASN1CTXT* pctxt, CellSyncBurstSIR value);

EXTERN int asn1PD_CellSyncBurstSIR (ASN1CTXT* pctxt, CellSyncBurstSIR* pvalue);

EXTERN void asn1Print_CellSyncBurstSIR
   (const char* name, CellSyncBurstSIR* pvalue);

EXTERN CellSyncBurstSIR* asn1Test_CellSyncBurstSIR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstTimingLCR                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_CellSyncBurstTimingLCR_initialPhase 1
#define T_CellSyncBurstTimingLCR_steadyStatePhase 2

typedef struct EXTERN CellSyncBurstTimingLCR {
   int t;
   union {
      /* t = 1 */
      OSINT32 initialPhase;
      /* t = 2 */
      OSINT32 steadyStatePhase;
   } u;
} CellSyncBurstTimingLCR;

EXTERN int asn1PE_CellSyncBurstTimingLCR (ASN1CTXT* pctxt, CellSyncBurstTimingLCR* pvalue);

EXTERN int asn1PD_CellSyncBurstTimingLCR (ASN1CTXT* pctxt, CellSyncBurstTimingLCR* pvalue);

EXTERN void asn1Print_CellSyncBurstTimingLCR
   (const char* name, CellSyncBurstTimingLCR* pvalue);

EXTERN CellSyncBurstTimingLCR* asn1Test_CellSyncBurstTimingLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_ID                                        */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HSDSCH_MACdFlow_ID;

EXTERN int asn1PE_HSDSCH_MACdFlow_ID (ASN1CTXT* pctxt, HSDSCH_MACdFlow_ID value);

EXTERN int asn1PD_HSDSCH_MACdFlow_ID (ASN1CTXT* pctxt, HSDSCH_MACdFlow_ID* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_ID
   (const char* name, HSDSCH_MACdFlow_ID* pvalue);

EXTERN HSDSCH_MACdFlow_ID* asn1Test_HSDSCH_MACdFlow_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Execution_Type                                            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_Execution_Type_synchronised   1
#define T_Execution_Type_unsynchronised 2

typedef struct EXTERN Execution_Type {
   int t;
   union {
      /* t = 1 */
      CFN synchronised;
      /* t = 2 */
   } u;
} Execution_Type;

EXTERN int asn1PE_Execution_Type (ASN1CTXT* pctxt, Execution_Type* pvalue);

EXTERN int asn1PD_Execution_Type (ASN1CTXT* pctxt, Execution_Type* pvalue);

EXTERN void asn1Print_Execution_Type
   (const char* name, Execution_Type* pvalue);

EXTERN Execution_Type* asn1Test_Execution_Type
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Activate_Info                                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Activate_Info {
   struct {
      unsigned firstRLS_IndicatorPresent : 1;
      unsigned propagation_delayPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Execution_Type activation_type;
   DL_Power initial_dl_tx_power;
   FirstRLS_Indicator firstRLS_Indicator;
   PropagationDelay propagation_delay;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Activate_Info;

EXTERN int asn1PE_Activate_Info (ASN1CTXT* pctxt, Activate_Info* pvalue);

EXTERN int asn1PD_Activate_Info (ASN1CTXT* pctxt, Activate_Info* pvalue);

EXTERN void asn1Print_Activate_Info
   (const char* name, Activate_Info* pvalue);

EXTERN Activate_Info* asn1Test_Activate_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Deactivate_Info                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Deactivate_Info {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Execution_Type deactivation_type;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Deactivate_Info;

EXTERN int asn1PE_Deactivate_Info (ASN1CTXT* pctxt, Deactivate_Info* pvalue);

EXTERN int asn1PD_Deactivate_Info (ASN1CTXT* pctxt, Deactivate_Info* pvalue);

EXTERN void asn1Print_Deactivate_Info
   (const char* name, Deactivate_Info* pvalue);

EXTERN Deactivate_Info* asn1Test_Deactivate_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DelayedActivationUpdate                                   */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_DelayedActivationUpdate_activate 1
#define T_DelayedActivationUpdate_deactivate 2

typedef struct EXTERN DelayedActivationUpdate {
   int t;
   union {
      /* t = 1 */
      Activate_Info *activate;
      /* t = 2 */
      Deactivate_Info *deactivate;
   } u;
} DelayedActivationUpdate;

EXTERN int asn1PE_DelayedActivationUpdate (ASN1CTXT* pctxt, DelayedActivationUpdate* pvalue);

EXTERN int asn1PD_DelayedActivationUpdate (ASN1CTXT* pctxt, DelayedActivationUpdate* pvalue);

EXTERN void asn1Print_DelayedActivationUpdate
   (const char* name, DelayedActivationUpdate* pvalue);

EXTERN DelayedActivationUpdate* asn1Test_DelayedActivationUpdate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AckNack_RepetitionFactor                                  */
/*                                                            */
/**************************************************************/

typedef OSINT32 AckNack_RepetitionFactor;

EXTERN int asn1PE_AckNack_RepetitionFactor (ASN1CTXT* pctxt, AckNack_RepetitionFactor value);

EXTERN int asn1PD_AckNack_RepetitionFactor (ASN1CTXT* pctxt, AckNack_RepetitionFactor* pvalue);

EXTERN void asn1Print_AckNack_RepetitionFactor
   (const char* name, AckNack_RepetitionFactor* pvalue);

EXTERN AckNack_RepetitionFactor* asn1Test_AckNack_RepetitionFactor
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Ack_Power_Offset                                          */
/*                                                            */
/**************************************************************/

typedef OSINT32 Ack_Power_Offset;

EXTERN int asn1PE_Ack_Power_Offset (ASN1CTXT* pctxt, Ack_Power_Offset value);

EXTERN int asn1PD_Ack_Power_Offset (ASN1CTXT* pctxt, Ack_Power_Offset* pvalue);

EXTERN void asn1Print_Ack_Power_Offset
   (const char* name, Ack_Power_Offset* pvalue);

EXTERN Ack_Power_Offset* asn1Test_Ack_Power_Offset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AOA_LCR                                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT16 AOA_LCR;

EXTERN int asn1PE_AOA_LCR (ASN1CTXT* pctxt, AOA_LCR value);

EXTERN int asn1PD_AOA_LCR (ASN1CTXT* pctxt, AOA_LCR* pvalue);

EXTERN void asn1Print_AOA_LCR
   (const char* name, AOA_LCR* pvalue);

EXTERN AOA_LCR* asn1Test_AOA_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AOA_LCR_Accuracy_Class                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   a = 0,
   b = 1,
   c = 2,
   d = 3,
   e = 4,
   f = 5,
   g = 6,
   h = 7
} AOA_LCR_Accuracy_Class_Root;

typedef OSUINT32 AOA_LCR_Accuracy_Class;

EXTERN int asn1PE_AOA_LCR_Accuracy_Class (ASN1CTXT* pctxt, AOA_LCR_Accuracy_Class value);

EXTERN int asn1PD_AOA_LCR_Accuracy_Class (ASN1CTXT* pctxt, AOA_LCR_Accuracy_Class* pvalue);

EXTERN void asn1Print_AOA_LCR_Accuracy_Class
   (const char* name, AOA_LCR_Accuracy_Class* pvalue);

EXTERN AOA_LCR_Accuracy_Class* asn1Test_AOA_LCR_Accuracy_Class
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BCCH_ModificationTime                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 BCCH_ModificationTime;

EXTERN int asn1PE_BCCH_ModificationTime (ASN1CTXT* pctxt, BCCH_ModificationTime value);

EXTERN int asn1PD_BCCH_ModificationTime (ASN1CTXT* pctxt, BCCH_ModificationTime* pvalue);

EXTERN void asn1Print_BCCH_ModificationTime
   (const char* name, BCCH_ModificationTime* pvalue);

EXTERN BCCH_ModificationTime* asn1Test_BCCH_ModificationTime
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BlockingPriorityIndicator                                 */
/*                                                            */
/**************************************************************/

typedef enum {
   high = 0,
   normal = 1,
   low = 2
} BlockingPriorityIndicator_Root;

typedef OSUINT32 BlockingPriorityIndicator;

EXTERN int asn1PE_BlockingPriorityIndicator (ASN1CTXT* pctxt, BlockingPriorityIndicator value);

EXTERN int asn1PD_BlockingPriorityIndicator (ASN1CTXT* pctxt, BlockingPriorityIndicator* pvalue);

EXTERN void asn1Print_BlockingPriorityIndicator
   (const char* name, BlockingPriorityIndicator* pvalue);

EXTERN BlockingPriorityIndicator* asn1Test_BlockingPriorityIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BundlingModeIndicator                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   bundling = 0,
   no_bundling = 1
} BundlingModeIndicator_Root;

typedef OSUINT32 BundlingModeIndicator;

EXTERN int asn1PE_BundlingModeIndicator (ASN1CTXT* pctxt, BundlingModeIndicator value);

EXTERN int asn1PD_BundlingModeIndicator (ASN1CTXT* pctxt, BundlingModeIndicator* pvalue);

EXTERN void asn1Print_BundlingModeIndicator
   (const char* name, BundlingModeIndicator* pvalue);

EXTERN BundlingModeIndicator* asn1Test_BundlingModeIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellParameterID                                           */
/*                                                            */
/**************************************************************/

typedef OSINT32 CellParameterID;

EXTERN int asn1PE_CellParameterID (ASN1CTXT* pctxt, CellParameterID value);

EXTERN int asn1PD_CellParameterID (ASN1CTXT* pctxt, CellParameterID* pvalue);

EXTERN void asn1Print_CellParameterID
   (const char* name, CellParameterID* pvalue);

EXTERN CellParameterID* asn1Test_CellParameterID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellSyncBurstRepetitionPeriod                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 CellSyncBurstRepetitionPeriod;

EXTERN int asn1PE_CellSyncBurstRepetitionPeriod (ASN1CTXT* pctxt, CellSyncBurstRepetitionPeriod value);

EXTERN int asn1PD_CellSyncBurstRepetitionPeriod (ASN1CTXT* pctxt, CellSyncBurstRepetitionPeriod* pvalue);

EXTERN void asn1Print_CellSyncBurstRepetitionPeriod
   (const char* name, CellSyncBurstRepetitionPeriod* pvalue);

EXTERN CellSyncBurstRepetitionPeriod* asn1Test_CellSyncBurstRepetitionPeriod
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Closedlooptimingadjustmentmode                            */
/*                                                            */
/**************************************************************/

typedef enum {
   adj_1_slot = 0,
   adj_2_slot = 1
} Closedlooptimingadjustmentmode_Root;

typedef OSUINT32 Closedlooptimingadjustmentmode;

EXTERN int asn1PE_Closedlooptimingadjustmentmode (ASN1CTXT* pctxt, Closedlooptimingadjustmentmode value);

EXTERN int asn1PD_Closedlooptimingadjustmentmode (ASN1CTXT* pctxt, Closedlooptimingadjustmentmode* pvalue);

EXTERN void asn1Print_Closedlooptimingadjustmentmode
   (const char* name, Closedlooptimingadjustmentmode* pvalue);

EXTERN Closedlooptimingadjustmentmode* asn1Test_Closedlooptimingadjustmentmode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonMeasurementType                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   received_total_wide_band_power = 0,
   transmitted_carrier_power = 1,
   acknowledged_prach_preambles = 2,
   ul_timeslot_iscp = 3,
   notUsed_1_acknowledged_PCPCH_access_preambles = 4,
   notUsed_2_detected_PCPCH_access_preambles = 5
} CommonMeasurementType_Root;

typedef enum {
   uTRAN_GPS_Timing_of_Cell_Frames_for_UE_Positioning = 6,
   sFN_SFN_Observed_Time_Difference = 7,
   transmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmission = 8,
   hS_DSCH_Required_Power = 9,
   hS_DSCH_Provided_Bit_Rate = 10,
   received_total_wide_band_power_for_cellPortion = 11,
   transmitted_carrier_power_for_cellPortion = 12,
   transmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmission_for_cellPortion = 13,
   upPTS_Interference = 14,
   dLTransmissionBranchLoad = 15,
   hS_DSCH_Required_Power_for_cell_portion = 16,
   hS_DSCH_Provided_Bit_Rate_for_cell_portion = 17,
   e_DCH_Provided_Bit_Rate = 18
} CommonMeasurementType_Ext;

typedef OSUINT32 CommonMeasurementType;

EXTERN int asn1PE_CommonMeasurementType (ASN1CTXT* pctxt, CommonMeasurementType value);

EXTERN int asn1PD_CommonMeasurementType (ASN1CTXT* pctxt, CommonMeasurementType* pvalue);

EXTERN void asn1Print_CommonMeasurementType
   (const char* name, CommonMeasurementType* pvalue);

EXTERN CommonMeasurementType* asn1Test_CommonMeasurementType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Compressed_Mode_Deactivation_Flag                         */
/*                                                            */
/**************************************************************/

typedef enum {
   deactivate = 0,
   maintain_Active = 1
} Compressed_Mode_Deactivation_Flag_Root;

typedef OSUINT32 Compressed_Mode_Deactivation_Flag;

EXTERN int asn1PE_Compressed_Mode_Deactivation_Flag (ASN1CTXT* pctxt, Compressed_Mode_Deactivation_Flag value);

EXTERN int asn1PD_Compressed_Mode_Deactivation_Flag (ASN1CTXT* pctxt, Compressed_Mode_Deactivation_Flag* pvalue);

EXTERN void asn1Print_Compressed_Mode_Deactivation_Flag
   (const char* name, Compressed_Mode_Deactivation_Flag* pvalue);

EXTERN Compressed_Mode_Deactivation_Flag* asn1Test_Compressed_Mode_Deactivation_Flag
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ConstantValue                                             */
/*                                                            */
/**************************************************************/

typedef OSINT32 ConstantValue;

EXTERN int asn1PE_ConstantValue (ASN1CTXT* pctxt, ConstantValue value);

EXTERN int asn1PD_ConstantValue (ASN1CTXT* pctxt, ConstantValue* pvalue);

EXTERN void asn1Print_ConstantValue
   (const char* name, ConstantValue* pvalue);

EXTERN ConstantValue* asn1Test_ConstantValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CQI_Feedback_Cycle                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   v0_1 = 0,
   v2 = 1,
   v4 = 2,
   v8 = 3,
   v10 = 4,
   v20 = 5,
   v40 = 6,
   v80 = 7,
   v160 = 8
} CQI_Feedback_Cycle_Root;

typedef OSUINT32 CQI_Feedback_Cycle;

EXTERN int asn1PE_CQI_Feedback_Cycle (ASN1CTXT* pctxt, CQI_Feedback_Cycle value);

EXTERN int asn1PD_CQI_Feedback_Cycle (ASN1CTXT* pctxt, CQI_Feedback_Cycle* pvalue);

EXTERN void asn1Print_CQI_Feedback_Cycle
   (const char* name, CQI_Feedback_Cycle* pvalue);

EXTERN CQI_Feedback_Cycle* asn1Test_CQI_Feedback_Cycle
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CQI_Power_Offset                                          */
/*                                                            */
/**************************************************************/

typedef OSINT32 CQI_Power_Offset;

EXTERN int asn1PE_CQI_Power_Offset (ASN1CTXT* pctxt, CQI_Power_Offset value);

EXTERN int asn1PD_CQI_Power_Offset (ASN1CTXT* pctxt, CQI_Power_Offset* pvalue);

EXTERN void asn1Print_CQI_Power_Offset
   (const char* name, CQI_Power_Offset* pvalue);

EXTERN CQI_Power_Offset* asn1Test_CQI_Power_Offset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CQI_RepetitionFactor                                      */
/*                                                            */
/**************************************************************/

typedef OSINT32 CQI_RepetitionFactor;

EXTERN int asn1PE_CQI_RepetitionFactor (ASN1CTXT* pctxt, CQI_RepetitionFactor value);

EXTERN int asn1PD_CQI_RepetitionFactor (ASN1CTXT* pctxt, CQI_RepetitionFactor* pvalue);

EXTERN void asn1Print_CQI_RepetitionFactor
   (const char* name, CQI_RepetitionFactor* pvalue);

EXTERN CQI_RepetitionFactor* asn1Test_CQI_RepetitionFactor
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DedicatedMeasurementType                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   sir = 0,
   sir_error = 1,
   transmitted_code_power = 2,
   rscp = 3,
   rx_timing_deviation = 4,
   round_trip_time = 5
} DedicatedMeasurementType_Root;

typedef enum {
   rx_timing_deviation_LCR = 6,
   angle_Of_Arrival_LCR = 7,
   hs_sich_quality = 8,
   best_Cell_Portions = 9
} DedicatedMeasurementType_Ext;

typedef OSUINT32 DedicatedMeasurementType;

EXTERN int asn1PE_DedicatedMeasurementType (ASN1CTXT* pctxt, DedicatedMeasurementType value);

EXTERN int asn1PD_DedicatedMeasurementType (ASN1CTXT* pctxt, DedicatedMeasurementType* pvalue);

EXTERN void asn1Print_DedicatedMeasurementType
   (const char* name, DedicatedMeasurementType* pvalue);

EXTERN DedicatedMeasurementType* asn1Test_DedicatedMeasurementType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DeltaSIR                                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 DeltaSIR;

EXTERN int asn1PE_DeltaSIR (ASN1CTXT* pctxt, DeltaSIR value);

EXTERN int asn1PD_DeltaSIR (ASN1CTXT* pctxt, DeltaSIR* pvalue);

EXTERN void asn1Print_DeltaSIR
   (const char* name, DeltaSIR* pvalue);

EXTERN DeltaSIR* asn1Test_DeltaSIR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DiscardTimer                                              */
/*                                                            */
/**************************************************************/

typedef enum {
   v20_1 = 0,
   v40_1 = 1,
   v60 = 2,
   v80_1 = 3,
   v100 = 4,
   v120 = 5,
   v140 = 6,
   v160_1 = 7,
   v180 = 8,
   v200 = 9,
   v250 = 10,
   v300 = 11,
   v400 = 12,
   v500 = 13,
   v750 = 14,
   v1000 = 15,
   v1250 = 16,
   v1500 = 17,
   v1750 = 18,
   v2000 = 19,
   v2500 = 20,
   v3000 = 21,
   v3500 = 22,
   v4000 = 23,
   v4500 = 24,
   v5000 = 25,
   v7500 = 26
} DiscardTimer_Root;

typedef OSUINT32 DiscardTimer;

EXTERN int asn1PE_DiscardTimer (ASN1CTXT* pctxt, DiscardTimer value);

EXTERN int asn1PD_DiscardTimer (ASN1CTXT* pctxt, DiscardTimer* pvalue);

EXTERN void asn1Print_DiscardTimer
   (const char* name, DiscardTimer* pvalue);

EXTERN DiscardTimer* asn1Test_DiscardTimer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_DPCH_TimingAdjustment                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   timing_advance = 0,
   timing_delay = 1
} DL_DPCH_TimingAdjustment_Root;

typedef OSUINT32 DL_DPCH_TimingAdjustment;

EXTERN int asn1PE_DL_DPCH_TimingAdjustment (ASN1CTXT* pctxt, DL_DPCH_TimingAdjustment value);

EXTERN int asn1PD_DL_DPCH_TimingAdjustment (ASN1CTXT* pctxt, DL_DPCH_TimingAdjustment* pvalue);

EXTERN void asn1Print_DL_DPCH_TimingAdjustment
   (const char* name, DL_DPCH_TimingAdjustment* pvalue);

EXTERN DL_DPCH_TimingAdjustment* asn1Test_DL_DPCH_TimingAdjustment
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_FrameType                                              */
/*                                                            */
/**************************************************************/

typedef enum {
   typeA = 0,
   typeB = 1
} DL_FrameType_Root;

typedef OSUINT32 DL_FrameType;

EXTERN int asn1PE_DL_FrameType (ASN1CTXT* pctxt, DL_FrameType value);

EXTERN int asn1PD_DL_FrameType (ASN1CTXT* pctxt, DL_FrameType* pvalue);

EXTERN void asn1Print_DL_FrameType
   (const char* name, DL_FrameType* pvalue);

EXTERN DL_FrameType* asn1Test_DL_FrameType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_PowerBalancing_ActivationIndicator                     */
/*                                                            */
/**************************************************************/

typedef enum {
   dL_PowerBalancing_Activated = 0
} DL_PowerBalancing_ActivationIndicator_Root;

typedef OSUINT32 DL_PowerBalancing_ActivationIndicator;

EXTERN int asn1PE_DL_PowerBalancing_ActivationIndicator (ASN1CTXT* pctxt, DL_PowerBalancing_ActivationIndicator value);

EXTERN int asn1PD_DL_PowerBalancing_ActivationIndicator (ASN1CTXT* pctxt, DL_PowerBalancing_ActivationIndicator* pvalue);

EXTERN void asn1Print_DL_PowerBalancing_ActivationIndicator
   (const char* name, DL_PowerBalancing_ActivationIndicator* pvalue);

EXTERN DL_PowerBalancing_ActivationIndicator* asn1Test_DL_PowerBalancing_ActivationIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_PowerBalancing_UpdatedIndicator                        */
/*                                                            */
/**************************************************************/

typedef enum {
   dL_PowerBalancing_Updated = 0
} DL_PowerBalancing_UpdatedIndicator_Root;

typedef OSUINT32 DL_PowerBalancing_UpdatedIndicator;

EXTERN int asn1PE_DL_PowerBalancing_UpdatedIndicator (ASN1CTXT* pctxt, DL_PowerBalancing_UpdatedIndicator value);

EXTERN int asn1PD_DL_PowerBalancing_UpdatedIndicator (ASN1CTXT* pctxt, DL_PowerBalancing_UpdatedIndicator* pvalue);

EXTERN void asn1Print_DL_PowerBalancing_UpdatedIndicator
   (const char* name, DL_PowerBalancing_UpdatedIndicator* pvalue);

EXTERN DL_PowerBalancing_UpdatedIndicator* asn1Test_DL_PowerBalancing_UpdatedIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TPC_Pattern01Count                                     */
/*                                                            */
/**************************************************************/

typedef OSINT32 DL_TPC_Pattern01Count;

EXTERN int asn1PE_DL_TPC_Pattern01Count (ASN1CTXT* pctxt, DL_TPC_Pattern01Count value);

EXTERN int asn1PD_DL_TPC_Pattern01Count (ASN1CTXT* pctxt, DL_TPC_Pattern01Count* pvalue);

EXTERN void asn1Print_DL_TPC_Pattern01Count
   (const char* name, DL_TPC_Pattern01Count* pvalue);

EXTERN DL_TPC_Pattern01Count* asn1Test_DL_TPC_Pattern01Count
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DLTransmissionBranchLoadValue                             */
/*                                                            */
/**************************************************************/

typedef OSINT32 DLTransmissionBranchLoadValue;

EXTERN int asn1PE_DLTransmissionBranchLoadValue (ASN1CTXT* pctxt, DLTransmissionBranchLoadValue value);

EXTERN int asn1PD_DLTransmissionBranchLoadValue (ASN1CTXT* pctxt, DLTransmissionBranchLoadValue* pvalue);

EXTERN void asn1Print_DLTransmissionBranchLoadValue
   (const char* name, DLTransmissionBranchLoadValue* pvalue);

EXTERN DLTransmissionBranchLoadValue* asn1Test_DLTransmissionBranchLoadValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Downlink_Compressed_Mode_Method                           */
/*                                                            */
/**************************************************************/

typedef enum {
   not_Used_puncturing = 0,
   sFdiv2 = 1,
   higher_layer_scheduling = 2
} Downlink_Compressed_Mode_Method_Root;

typedef OSUINT32 Downlink_Compressed_Mode_Method;

EXTERN int asn1PE_Downlink_Compressed_Mode_Method (ASN1CTXT* pctxt, Downlink_Compressed_Mode_Method value);

EXTERN int asn1PD_Downlink_Compressed_Mode_Method (ASN1CTXT* pctxt, Downlink_Compressed_Mode_Method* pvalue);

EXTERN void asn1Print_Downlink_Compressed_Mode_Method
   (const char* name, Downlink_Compressed_Mode_Method* pvalue);

EXTERN Downlink_Compressed_Mode_Method* asn1Test_Downlink_Compressed_Mode_Method
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DPC_Mode                                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   mode0 = 0,
   mode1 = 1
} DPC_Mode_Root;

typedef OSUINT32 DPC_Mode;

EXTERN int asn1PE_DPC_Mode (ASN1CTXT* pctxt, DPC_Mode value);

EXTERN int asn1PD_DPC_Mode (ASN1CTXT* pctxt, DPC_Mode* pvalue);

EXTERN void asn1Print_DPC_Mode
   (const char* name, DPC_Mode* pvalue);

EXTERN DPC_Mode* asn1Test_DPC_Mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DsField                                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DsField {
   OSUINT32  numbits;
   OSOCTET data[1];
} DsField;

EXTERN int asn1PE_DsField (ASN1CTXT* pctxt, DsField* pvalue);

EXTERN int asn1PD_DsField (ASN1CTXT* pctxt, DsField* pvalue);

EXTERN void asn1Print_DsField
   (const char* name, DsField* pvalue);

EXTERN DsField* asn1Test_DsField
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_AGCH_FDD_Code_Information_Item                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_AGCH_FDD_Code_Information_Item;

EXTERN int asn1PE_E_AGCH_FDD_Code_Information_Item (ASN1CTXT* pctxt, E_AGCH_FDD_Code_Information_Item value);

EXTERN int asn1PD_E_AGCH_FDD_Code_Information_Item (ASN1CTXT* pctxt, E_AGCH_FDD_Code_Information_Item* pvalue);

EXTERN void asn1Print_E_AGCH_FDD_Code_Information_Item
   (const char* name, E_AGCH_FDD_Code_Information_Item* pvalue);

EXTERN E_AGCH_FDD_Code_Information_Item* asn1Test_E_AGCH_FDD_Code_Information_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_Capability                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   e_DCH_capable = 0,
   e_DCH_non_capable = 1
} E_DCH_Capability_Root;

typedef OSUINT32 E_DCH_Capability;

EXTERN int asn1PE_E_DCH_Capability (ASN1CTXT* pctxt, E_DCH_Capability value);

EXTERN int asn1PD_E_DCH_Capability (ASN1CTXT* pctxt, E_DCH_Capability* pvalue);

EXTERN void asn1Print_E_DCH_Capability
   (const char* name, E_DCH_Capability* pvalue);

EXTERN E_DCH_Capability* asn1Test_E_DCH_Capability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_DDI_Value                                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_DCH_DDI_Value;

EXTERN int asn1PE_E_DCH_DDI_Value (ASN1CTXT* pctxt, E_DCH_DDI_Value value);

EXTERN int asn1PD_E_DCH_DDI_Value (ASN1CTXT* pctxt, E_DCH_DDI_Value* pvalue);

EXTERN void asn1Print_E_DCH_DDI_Value
   (const char* name, E_DCH_DDI_Value* pvalue);

EXTERN E_DCH_DDI_Value* asn1Test_E_DCH_DDI_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_HARQ_PO_FDD                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_DCH_HARQ_PO_FDD;

EXTERN int asn1PE_E_DCH_HARQ_PO_FDD (ASN1CTXT* pctxt, E_DCH_HARQ_PO_FDD value);

EXTERN int asn1PD_E_DCH_HARQ_PO_FDD (ASN1CTXT* pctxt, E_DCH_HARQ_PO_FDD* pvalue);

EXTERN void asn1Print_E_DCH_HARQ_PO_FDD
   (const char* name, E_DCH_HARQ_PO_FDD* pvalue);

EXTERN E_DCH_HARQ_PO_FDD* asn1Test_E_DCH_HARQ_PO_FDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_ID                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_DCH_MACdFlow_ID;

EXTERN int asn1PE_E_DCH_MACdFlow_ID (ASN1CTXT* pctxt, E_DCH_MACdFlow_ID value);

EXTERN int asn1PD_E_DCH_MACdFlow_ID (ASN1CTXT* pctxt, E_DCH_MACdFlow_ID* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_ID
   (const char* name, E_DCH_MACdFlow_ID* pvalue);

EXTERN E_DCH_MACdFlow_ID* asn1Test_E_DCH_MACdFlow_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Multiplexing_List                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_MACdFlow_Multiplexing_List {
   OSUINT32  numbits;
   OSOCTET data[1];
} E_DCH_MACdFlow_Multiplexing_List;

EXTERN int asn1PE_E_DCH_MACdFlow_Multiplexing_List (ASN1CTXT* pctxt, E_DCH_MACdFlow_Multiplexing_List* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Multiplexing_List (ASN1CTXT* pctxt, E_DCH_MACdFlow_Multiplexing_List* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Multiplexing_List
   (const char* name, E_DCH_MACdFlow_Multiplexing_List* pvalue);

EXTERN E_DCH_MACdFlow_Multiplexing_List* asn1Test_E_DCH_MACdFlow_Multiplexing_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCHProvidedBitRateValue                                 */
/*                                                            */
/**************************************************************/

typedef OSINT32 E_DCHProvidedBitRateValue;

EXTERN int asn1PE_E_DCHProvidedBitRateValue (ASN1CTXT* pctxt, E_DCHProvidedBitRateValue value);

EXTERN int asn1PD_E_DCHProvidedBitRateValue (ASN1CTXT* pctxt, E_DCHProvidedBitRateValue* pvalue);

EXTERN void asn1Print_E_DCHProvidedBitRateValue
   (const char* name, E_DCHProvidedBitRateValue* pvalue);

EXTERN E_DCHProvidedBitRateValue* asn1Test_E_DCHProvidedBitRateValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Maximum_Target_ReceivedTotalWideBandPower                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Maximum_Target_ReceivedTotalWideBandPower;

EXTERN int asn1PE_Maximum_Target_ReceivedTotalWideBandPower (ASN1CTXT* pctxt, Maximum_Target_ReceivedTotalWideBandPower value);

EXTERN int asn1PD_Maximum_Target_ReceivedTotalWideBandPower (ASN1CTXT* pctxt, Maximum_Target_ReceivedTotalWideBandPower* pvalue);

EXTERN void asn1Print_Maximum_Target_ReceivedTotalWideBandPower
   (const char* name, Maximum_Target_ReceivedTotalWideBandPower* pvalue);

EXTERN Maximum_Target_ReceivedTotalWideBandPower* asn1Test_Maximum_Target_ReceivedTotalWideBandPower
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_RL_Indication                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   e_DCH = 0,
   non_e_DCH = 1
} E_DCH_RL_Indication_Root;

typedef OSUINT32 E_DCH_RL_Indication;

EXTERN int asn1PE_E_DCH_RL_Indication (ASN1CTXT* pctxt, E_DCH_RL_Indication value);

EXTERN int asn1PD_E_DCH_RL_Indication (ASN1CTXT* pctxt, E_DCH_RL_Indication* pvalue);

EXTERN void asn1Print_E_DCH_RL_Indication
   (const char* name, E_DCH_RL_Indication* pvalue);

EXTERN E_DCH_RL_Indication* asn1Test_E_DCH_RL_Indication
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_HICH_Signature_Sequence                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_HICH_Signature_Sequence;

EXTERN int asn1PE_E_HICH_Signature_Sequence (ASN1CTXT* pctxt, E_HICH_Signature_Sequence value);

EXTERN int asn1PD_E_HICH_Signature_Sequence (ASN1CTXT* pctxt, E_HICH_Signature_Sequence* pvalue);

EXTERN void asn1Print_E_HICH_Signature_Sequence
   (const char* name, E_HICH_Signature_Sequence* pvalue);

EXTERN E_HICH_Signature_Sequence* asn1Test_E_HICH_Signature_Sequence
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  End_Of_Audit_Sequence_Indicator                           */
/*                                                            */
/**************************************************************/

typedef enum {
   end_of_audit_sequence = 0,
   not_end_of_audit_sequence = 1
} End_Of_Audit_Sequence_Indicator_Root;

typedef OSUINT32 End_Of_Audit_Sequence_Indicator;

EXTERN int asn1PE_End_Of_Audit_Sequence_Indicator (ASN1CTXT* pctxt, End_Of_Audit_Sequence_Indicator value);

EXTERN int asn1PD_End_Of_Audit_Sequence_Indicator (ASN1CTXT* pctxt, End_Of_Audit_Sequence_Indicator* pvalue);

EXTERN void asn1Print_End_Of_Audit_Sequence_Indicator
   (const char* name, End_Of_Audit_Sequence_Indicator* pvalue);

EXTERN End_Of_Audit_Sequence_Indicator* asn1Test_End_Of_Audit_Sequence_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_RGCH_E_HICH_FDD_Code_Information_Item                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_RGCH_E_HICH_FDD_Code_Information_Item;

EXTERN int asn1PE_E_RGCH_E_HICH_FDD_Code_Information_Item (ASN1CTXT* pctxt, E_RGCH_E_HICH_FDD_Code_Information_Item value);

EXTERN int asn1PD_E_RGCH_E_HICH_FDD_Code_Information_Item (ASN1CTXT* pctxt, E_RGCH_E_HICH_FDD_Code_Information_Item* pvalue);

EXTERN void asn1Print_E_RGCH_E_HICH_FDD_Code_Information_Item
   (const char* name, E_RGCH_E_HICH_FDD_Code_Information_Item* pvalue);

EXTERN E_RGCH_E_HICH_FDD_Code_Information_Item* asn1Test_E_RGCH_E_HICH_FDD_Code_Information_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_RGCH_Signature_Sequence                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 E_RGCH_Signature_Sequence;

EXTERN int asn1PE_E_RGCH_Signature_Sequence (ASN1CTXT* pctxt, E_RGCH_Signature_Sequence value);

EXTERN int asn1PD_E_RGCH_Signature_Sequence (ASN1CTXT* pctxt, E_RGCH_Signature_Sequence* pvalue);

EXTERN void asn1Print_E_RGCH_Signature_Sequence
   (const char* name, E_RGCH_Signature_Sequence* pvalue);

EXTERN E_RGCH_Signature_Sequence* asn1Test_E_RGCH_Signature_Sequence
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_RNTI                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT16 E_RNTI;

EXTERN int asn1PE_E_RNTI (ASN1CTXT* pctxt, E_RNTI value);

EXTERN int asn1PD_E_RNTI (ASN1CTXT* pctxt, E_RNTI* pvalue);

EXTERN void asn1Print_E_RNTI
   (const char* name, E_RNTI* pvalue);

EXTERN E_RNTI* asn1Test_E_RNTI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_S_CCPCH_FrameOffset                                   */
/*                                                            */
/**************************************************************/

typedef enum {
   v1_1 = 0,
   v2_1 = 1,
   v4_1 = 2
} FDD_S_CCPCH_FrameOffset_Root;

typedef OSUINT32 FDD_S_CCPCH_FrameOffset;

EXTERN int asn1PE_FDD_S_CCPCH_FrameOffset (ASN1CTXT* pctxt, FDD_S_CCPCH_FrameOffset value);

EXTERN int asn1PD_FDD_S_CCPCH_FrameOffset (ASN1CTXT* pctxt, FDD_S_CCPCH_FrameOffset* pvalue);

EXTERN void asn1Print_FDD_S_CCPCH_FrameOffset
   (const char* name, FDD_S_CCPCH_FrameOffset* pvalue);

EXTERN FDD_S_CCPCH_FrameOffset* asn1Test_FDD_S_CCPCH_FrameOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FNReportingIndicator                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   fN_reporting_required = 0,
   fN_reporting_not_required = 1
} FNReportingIndicator_Root;

typedef OSUINT32 FNReportingIndicator;

EXTERN int asn1PE_FNReportingIndicator (ASN1CTXT* pctxt, FNReportingIndicator value);

EXTERN int asn1PD_FNReportingIndicator (ASN1CTXT* pctxt, FNReportingIndicator* pvalue);

EXTERN void asn1Print_FNReportingIndicator
   (const char* name, FNReportingIndicator* pvalue);

EXTERN FNReportingIndicator* asn1Test_FNReportingIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GapLength                                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 GapLength;

EXTERN int asn1PE_GapLength (ASN1CTXT* pctxt, GapLength value);

EXTERN int asn1PD_GapLength (ASN1CTXT* pctxt, GapLength* pvalue);

EXTERN void asn1Print_GapLength
   (const char* name, GapLength* pvalue);

EXTERN GapLength* asn1Test_GapLength
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GapDuration                                               */
/*                                                            */
/**************************************************************/

typedef OSINT32 GapDuration;

EXTERN int asn1PE_GapDuration (ASN1CTXT* pctxt, GapDuration value);

EXTERN int asn1PD_GapDuration (ASN1CTXT* pctxt, GapDuration* pvalue);

EXTERN void asn1Print_GapDuration
   (const char* name, GapDuration* pvalue);

EXTERN GapDuration* asn1Test_GapDuration
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GenericTrafficCategory                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GenericTrafficCategory {
   OSUINT32  numbits;
   OSOCTET data[1];
} GenericTrafficCategory;

EXTERN int asn1PE_GenericTrafficCategory (ASN1CTXT* pctxt, GenericTrafficCategory* pvalue);

EXTERN int asn1PD_GenericTrafficCategory (ASN1CTXT* pctxt, GenericTrafficCategory* pvalue);

EXTERN void asn1Print_GenericTrafficCategory
   (const char* name, GenericTrafficCategory* pvalue);

EXTERN GenericTrafficCategory* asn1Test_GenericTrafficCategory
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Information_Item                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   gps_navigation_model_and_time_recovery = 0,
   gps_ionospheric_model = 1,
   gps_utc_model = 2,
   gps_almanac = 3,
   gps_rt_integrity = 4
} GPS_Information_Item_Root;

typedef OSUINT32 GPS_Information_Item;

EXTERN int asn1PE_GPS_Information_Item (ASN1CTXT* pctxt, GPS_Information_Item value);

EXTERN int asn1PD_GPS_Information_Item (ASN1CTXT* pctxt, GPS_Information_Item* pvalue);

EXTERN void asn1Print_GPS_Information_Item
   (const char* name, GPS_Information_Item* pvalue);

EXTERN GPS_Information_Item* asn1Test_GPS_Information_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_Preamble_Mode                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   mode0_1 = 0,
   mode1_1 = 1
} HARQ_Preamble_Mode_Root;

typedef OSUINT32 HARQ_Preamble_Mode;

EXTERN int asn1PE_HARQ_Preamble_Mode (ASN1CTXT* pctxt, HARQ_Preamble_Mode value);

EXTERN int asn1PD_HARQ_Preamble_Mode (ASN1CTXT* pctxt, HARQ_Preamble_Mode* pvalue);

EXTERN void asn1Print_HARQ_Preamble_Mode
   (const char* name, HARQ_Preamble_Mode* pvalue);

EXTERN HARQ_Preamble_Mode* asn1Test_HARQ_Preamble_Mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_Process_Allocation_2ms_EDCH                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HARQ_Process_Allocation_2ms_EDCH {
   OSUINT32  numbits;
   OSOCTET data[1];
} HARQ_Process_Allocation_2ms_EDCH;

EXTERN int asn1PE_HARQ_Process_Allocation_2ms_EDCH (ASN1CTXT* pctxt, HARQ_Process_Allocation_2ms_EDCH* pvalue);

EXTERN int asn1PD_HARQ_Process_Allocation_2ms_EDCH (ASN1CTXT* pctxt, HARQ_Process_Allocation_2ms_EDCH* pvalue);

EXTERN void asn1Print_HARQ_Process_Allocation_2ms_EDCH
   (const char* name, HARQ_Process_Allocation_2ms_EDCH* pvalue);

EXTERN HARQ_Process_Allocation_2ms_EDCH* asn1Test_HARQ_Process_Allocation_2ms_EDCH
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_Preamble_Mode_Activation_Indicator                   */
/*                                                            */
/**************************************************************/

typedef enum {
   harqPreambleModeActivated = 0
} HARQ_Preamble_Mode_Activation_Indicator_Root;

typedef OSUINT32 HARQ_Preamble_Mode_Activation_Indicator;

EXTERN int asn1PE_HARQ_Preamble_Mode_Activation_Indicator (ASN1CTXT* pctxt, HARQ_Preamble_Mode_Activation_Indicator value);

EXTERN int asn1PD_HARQ_Preamble_Mode_Activation_Indicator (ASN1CTXT* pctxt, HARQ_Preamble_Mode_Activation_Indicator* pvalue);

EXTERN void asn1Print_HARQ_Preamble_Mode_Activation_Indicator
   (const char* name, HARQ_Preamble_Mode_Activation_Indicator* pvalue);

EXTERN HARQ_Preamble_Mode_Activation_Indicator* asn1Test_HARQ_Preamble_Mode_Activation_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDPA_Capability                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   hsdpa_capable = 0,
   hsdpa_non_capable = 1
} HSDPA_Capability_Root;

typedef OSUINT32 HSDPA_Capability;

EXTERN int asn1PE_HSDPA_Capability (ASN1CTXT* pctxt, HSDPA_Capability value);

EXTERN int asn1PD_HSDPA_Capability (ASN1CTXT* pctxt, HSDPA_Capability* pvalue);

EXTERN void asn1Print_HSDPA_Capability
   (const char* name, HSDPA_Capability* pvalue);

EXTERN HSDPA_Capability* asn1Test_HSDPA_Capability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHProvidedBitRateValue                               */
/*                                                            */
/**************************************************************/

typedef OSINT32 HS_DSCHProvidedBitRateValue;

EXTERN int asn1PE_HS_DSCHProvidedBitRateValue (ASN1CTXT* pctxt, HS_DSCHProvidedBitRateValue value);

EXTERN int asn1PD_HS_DSCHProvidedBitRateValue (ASN1CTXT* pctxt, HS_DSCHProvidedBitRateValue* pvalue);

EXTERN void asn1Print_HS_DSCHProvidedBitRateValue
   (const char* name, HS_DSCHProvidedBitRateValue* pvalue);

EXTERN HS_DSCHProvidedBitRateValue* asn1Test_HS_DSCHProvidedBitRateValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPowerValue                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT16 HS_DSCHRequiredPowerValue;

EXTERN int asn1PE_HS_DSCHRequiredPowerValue (ASN1CTXT* pctxt, HS_DSCHRequiredPowerValue value);

EXTERN int asn1PD_HS_DSCHRequiredPowerValue (ASN1CTXT* pctxt, HS_DSCHRequiredPowerValue* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPowerValue
   (const char* name, HS_DSCHRequiredPowerValue* pvalue);

EXTERN HS_DSCHRequiredPowerValue* asn1Test_HS_DSCHRequiredPowerValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPowerPerUEWeight                           */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_DSCHRequiredPowerPerUEWeight;

EXTERN int asn1PE_HS_DSCHRequiredPowerPerUEWeight (ASN1CTXT* pctxt, HS_DSCHRequiredPowerPerUEWeight value);

EXTERN int asn1PD_HS_DSCHRequiredPowerPerUEWeight (ASN1CTXT* pctxt, HS_DSCHRequiredPowerPerUEWeight* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPowerPerUEWeight
   (const char* name, HS_DSCHRequiredPowerPerUEWeight* pvalue);

EXTERN HS_DSCHRequiredPowerPerUEWeight* asn1Test_HS_DSCHRequiredPowerPerUEWeight
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_PowerOffset                                        */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HSSCCH_PowerOffset;

EXTERN int asn1PE_HSSCCH_PowerOffset (ASN1CTXT* pctxt, HSSCCH_PowerOffset value);

EXTERN int asn1PD_HSSCCH_PowerOffset (ASN1CTXT* pctxt, HSSCCH_PowerOffset* pvalue);

EXTERN void asn1Print_HSSCCH_PowerOffset
   (const char* name, HSSCCH_PowerOffset* pvalue);

EXTERN HSSCCH_PowerOffset* asn1Test_HSSCCH_PowerOffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_InitialWindowSize                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HSDSCH_InitialWindowSize;

EXTERN int asn1PE_HSDSCH_InitialWindowSize (ASN1CTXT* pctxt, HSDSCH_InitialWindowSize value);

EXTERN int asn1PD_HSDSCH_InitialWindowSize (ASN1CTXT* pctxt, HSDSCH_InitialWindowSize* pvalue);

EXTERN void asn1Print_HSDSCH_InitialWindowSize
   (const char* name, HSDSCH_InitialWindowSize* pvalue);

EXTERN HSDSCH_InitialWindowSize* asn1Test_HSDSCH_InitialWindowSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SICH_failed                                            */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SICH_failed;

EXTERN int asn1PE_HS_SICH_failed (ASN1CTXT* pctxt, HS_SICH_failed value);

EXTERN int asn1PD_HS_SICH_failed (ASN1CTXT* pctxt, HS_SICH_failed* pvalue);

EXTERN void asn1Print_HS_SICH_failed
   (const char* name, HS_SICH_failed* pvalue);

EXTERN HS_SICH_failed* asn1Test_HS_SICH_failed
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SICH_missed                                            */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SICH_missed;

EXTERN int asn1PE_HS_SICH_missed (ASN1CTXT* pctxt, HS_SICH_missed value);

EXTERN int asn1PD_HS_SICH_missed (ASN1CTXT* pctxt, HS_SICH_missed* pvalue);

EXTERN void asn1Print_HS_SICH_missed
   (const char* name, HS_SICH_missed* pvalue);

EXTERN HS_SICH_missed* asn1Test_HS_SICH_missed
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SICH_total                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SICH_total;

EXTERN int asn1PE_HS_SICH_total (ASN1CTXT* pctxt, HS_SICH_total value);

EXTERN int asn1PD_HS_SICH_total (ASN1CTXT* pctxt, HS_SICH_total* pvalue);

EXTERN void asn1Print_HS_SICH_total
   (const char* name, HS_SICH_total* pvalue);

EXTERN HS_SICH_total* asn1Test_HS_SICH_total
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SICH_Reception_Quality_Measurement_Value               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 HS_SICH_Reception_Quality_Measurement_Value;

EXTERN int asn1PE_HS_SICH_Reception_Quality_Measurement_Value (ASN1CTXT* pctxt, HS_SICH_Reception_Quality_Measurement_Value value);

EXTERN int asn1PD_HS_SICH_Reception_Quality_Measurement_Value (ASN1CTXT* pctxt, HS_SICH_Reception_Quality_Measurement_Value* pvalue);

EXTERN void asn1Print_HS_SICH_Reception_Quality_Measurement_Value
   (const char* name, HS_SICH_Reception_Quality_Measurement_Value* pvalue);

EXTERN HS_SICH_Reception_Quality_Measurement_Value* asn1Test_HS_SICH_Reception_Quality_Measurement_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_RNTI                                               */
/*                                                            */
/**************************************************************/

typedef OSUINT16 HSDSCH_RNTI;

EXTERN int asn1PE_HSDSCH_RNTI (ASN1CTXT* pctxt, HSDSCH_RNTI value);

EXTERN int asn1PD_HSDSCH_RNTI (ASN1CTXT* pctxt, HSDSCH_RNTI* pvalue);

EXTERN void asn1Print_HSDSCH_RNTI
   (const char* name, HSDSCH_RNTI* pvalue);

EXTERN HSDSCH_RNTI* asn1Test_HSDSCH_RNTI
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_CodeChangeIndicator                                */
/*                                                            */
/**************************************************************/

typedef enum {
   hsSCCHCodeChangeNeeded = 0
} HSSCCH_CodeChangeIndicator_Root;

typedef OSUINT32 HSSCCH_CodeChangeIndicator;

EXTERN int asn1PE_HSSCCH_CodeChangeIndicator (ASN1CTXT* pctxt, HSSCCH_CodeChangeIndicator value);

EXTERN int asn1PD_HSSCCH_CodeChangeIndicator (ASN1CTXT* pctxt, HSSCCH_CodeChangeIndicator* pvalue);

EXTERN void asn1Print_HSSCCH_CodeChangeIndicator
   (const char* name, HSSCCH_CodeChangeIndicator* pvalue);

EXTERN HSSCCH_CodeChangeIndicator* asn1Test_HSSCCH_CodeChangeIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Code_Change_Grant                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   changeGranted = 0
} HSSCCH_Code_Change_Grant_Root;

typedef OSUINT32 HSSCCH_Code_Change_Grant;

EXTERN int asn1PE_HSSCCH_Code_Change_Grant (ASN1CTXT* pctxt, HSSCCH_Code_Change_Grant value);

EXTERN int asn1PD_HSSCCH_Code_Change_Grant (ASN1CTXT* pctxt, HSSCCH_Code_Change_Grant* pvalue);

EXTERN void asn1Print_HSSCCH_Code_Change_Grant
   (const char* name, HSSCCH_Code_Change_Grant* pvalue);

EXTERN HSSCCH_Code_Change_Grant* asn1Test_HSSCCH_Code_Change_Grant
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationExchangeID                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT32 InformationExchangeID;

EXTERN int asn1PE_InformationExchangeID (ASN1CTXT* pctxt, InformationExchangeID value);

EXTERN int asn1PD_InformationExchangeID (ASN1CTXT* pctxt, InformationExchangeID* pvalue);

EXTERN void asn1Print_InformationExchangeID
   (const char* name, InformationExchangeID* pvalue);

EXTERN InformationExchangeID* asn1Test_InformationExchangeID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Information_Type_Item                                     */
/*                                                            */
/**************************************************************/

typedef enum {
   gpsinformation = 0,
   dgpscorrections = 1,
   gpsrxpos = 2
} Information_Type_Item_Root;

typedef OSUINT32 Information_Type_Item;

EXTERN int asn1PE_Information_Type_Item (ASN1CTXT* pctxt, Information_Type_Item value);

EXTERN int asn1PD_Information_Type_Item (ASN1CTXT* pctxt, Information_Type_Item* pvalue);

EXTERN void asn1Print_Information_Type_Item
   (const char* name, Information_Type_Item* pvalue);

EXTERN Information_Type_Item* asn1Test_Information_Type_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Initial_DL_DPCH_TimingAdjustment_Allowed                  */
/*                                                            */
/**************************************************************/

typedef enum {
   initial_DL_DPCH_TimingAdjustment_Allowed = 0
} Initial_DL_DPCH_TimingAdjustment_Allowed_Root;

typedef OSUINT32 Initial_DL_DPCH_TimingAdjustment_Allowed;

EXTERN int asn1PE_Initial_DL_DPCH_TimingAdjustment_Allowed (ASN1CTXT* pctxt, Initial_DL_DPCH_TimingAdjustment_Allowed value);

EXTERN int asn1PD_Initial_DL_DPCH_TimingAdjustment_Allowed (ASN1CTXT* pctxt, Initial_DL_DPCH_TimingAdjustment_Allowed* pvalue);

EXTERN void asn1Print_Initial_DL_DPCH_TimingAdjustment_Allowed
   (const char* name, Initial_DL_DPCH_TimingAdjustment_Allowed* pvalue);

EXTERN Initial_DL_DPCH_TimingAdjustment_Allowed* asn1Test_Initial_DL_DPCH_TimingAdjustment_Allowed
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MACdPDU_Size                                              */
/*                                                            */
/**************************************************************/

typedef OSINT32 MACdPDU_Size;

EXTERN int asn1PE_MACdPDU_Size (ASN1CTXT* pctxt, MACdPDU_Size value);

EXTERN int asn1PD_MACdPDU_Size (ASN1CTXT* pctxt, MACdPDU_Size* pvalue);

EXTERN void asn1Print_MACdPDU_Size
   (const char* name, MACdPDU_Size* pvalue);

EXTERN MACdPDU_Size* asn1Test_MACdPDU_Size
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MACesGuaranteedBitRate                                    */
/*                                                            */
/**************************************************************/

typedef OSINT32 MACesGuaranteedBitRate;

EXTERN int asn1PE_MACesGuaranteedBitRate (ASN1CTXT* pctxt, MACesGuaranteedBitRate value);

EXTERN int asn1PD_MACesGuaranteedBitRate (ASN1CTXT* pctxt, MACesGuaranteedBitRate* pvalue);

EXTERN void asn1Print_MACesGuaranteedBitRate
   (const char* name, MACesGuaranteedBitRate* pvalue);

EXTERN MACesGuaranteedBitRate* asn1Test_MACesGuaranteedBitRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MAChsGuaranteedBitRate                                    */
/*                                                            */
/**************************************************************/

typedef OSINT32 MAChsGuaranteedBitRate;

EXTERN int asn1PE_MAChsGuaranteedBitRate (ASN1CTXT* pctxt, MAChsGuaranteedBitRate value);

EXTERN int asn1PD_MAChsGuaranteedBitRate (ASN1CTXT* pctxt, MAChsGuaranteedBitRate* pvalue);

EXTERN void asn1Print_MAChsGuaranteedBitRate
   (const char* name, MAChsGuaranteedBitRate* pvalue);

EXTERN MAChsGuaranteedBitRate* asn1Test_MAChsGuaranteedBitRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MAChsReorderingBufferSize_for_RLC_UM                      */
/*                                                            */
/**************************************************************/

typedef OSINT32 MAChsReorderingBufferSize_for_RLC_UM;

EXTERN int asn1PE_MAChsReorderingBufferSize_for_RLC_UM (ASN1CTXT* pctxt, MAChsReorderingBufferSize_for_RLC_UM value);

EXTERN int asn1PD_MAChsReorderingBufferSize_for_RLC_UM (ASN1CTXT* pctxt, MAChsReorderingBufferSize_for_RLC_UM* pvalue);

EXTERN void asn1Print_MAChsReorderingBufferSize_for_RLC_UM
   (const char* name, MAChsReorderingBufferSize_for_RLC_UM* pvalue);

EXTERN MAChsReorderingBufferSize_for_RLC_UM* asn1Test_MAChsReorderingBufferSize_for_RLC_UM
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MAC_hsWindowSize                                          */
/*                                                            */
/**************************************************************/

typedef enum {
   v4_2 = 0,
   v6 = 1,
   v8_1 = 2,
   v12 = 3,
   v16 = 4,
   v24 = 5,
   v32 = 6
} MAC_hsWindowSize_Root;

typedef OSUINT32 MAC_hsWindowSize;

EXTERN int asn1PE_MAC_hsWindowSize (ASN1CTXT* pctxt, MAC_hsWindowSize value);

EXTERN int asn1PD_MAC_hsWindowSize (ASN1CTXT* pctxt, MAC_hsWindowSize* pvalue);

EXTERN void asn1Print_MAC_hsWindowSize
   (const char* name, MAC_hsWindowSize* pvalue);

EXTERN MAC_hsWindowSize* asn1Test_MAC_hsWindowSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Max_Bits_MACe_PDU_non_scheduled                           */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Max_Bits_MACe_PDU_non_scheduled;

EXTERN int asn1PE_Max_Bits_MACe_PDU_non_scheduled (ASN1CTXT* pctxt, Max_Bits_MACe_PDU_non_scheduled value);

EXTERN int asn1PD_Max_Bits_MACe_PDU_non_scheduled (ASN1CTXT* pctxt, Max_Bits_MACe_PDU_non_scheduled* pvalue);

EXTERN void asn1Print_Max_Bits_MACe_PDU_non_scheduled
   (const char* name, Max_Bits_MACe_PDU_non_scheduled* pvalue);

EXTERN Max_Bits_MACe_PDU_non_scheduled* asn1Test_Max_Bits_MACe_PDU_non_scheduled
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Maximum_Number_of_Retransmissions_For_E_DCH               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 Maximum_Number_of_Retransmissions_For_E_DCH;

EXTERN int asn1PE_Maximum_Number_of_Retransmissions_For_E_DCH (ASN1CTXT* pctxt, Maximum_Number_of_Retransmissions_For_E_DCH value);

EXTERN int asn1PD_Maximum_Number_of_Retransmissions_For_E_DCH (ASN1CTXT* pctxt, Maximum_Number_of_Retransmissions_For_E_DCH* pvalue);

EXTERN void asn1Print_Maximum_Number_of_Retransmissions_For_E_DCH
   (const char* name, Maximum_Number_of_Retransmissions_For_E_DCH* pvalue);

EXTERN Maximum_Number_of_Retransmissions_For_E_DCH* asn1Test_Maximum_Number_of_Retransmissions_For_E_DCH
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Maximum_Allowed_UE_UL_Tx_Power                            */
/*                                                            */
/**************************************************************/

typedef OSINT32 Maximum_Allowed_UE_UL_Tx_Power;

EXTERN int asn1PE_Maximum_Allowed_UE_UL_Tx_Power (ASN1CTXT* pctxt, Maximum_Allowed_UE_UL_Tx_Power value);

EXTERN int asn1PD_Maximum_Allowed_UE_UL_Tx_Power (ASN1CTXT* pctxt, Maximum_Allowed_UE_UL_Tx_Power* pvalue);

EXTERN void asn1Print_Maximum_Allowed_UE_UL_Tx_Power
   (const char* name, Maximum_Allowed_UE_UL_Tx_Power* pvalue);

EXTERN Maximum_Allowed_UE_UL_Tx_Power* asn1Test_Maximum_Allowed_UE_UL_Tx_Power
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MeasurementFilterCoefficient                              */
/*                                                            */
/**************************************************************/

typedef enum {
   k0 = 0,
   k1 = 1,
   k2 = 2,
   k3 = 3,
   k4 = 4,
   k5 = 5,
   k6 = 6,
   k7 = 7,
   k8 = 8,
   k9 = 9,
   k11 = 10,
   k13 = 11,
   k15 = 12,
   k17 = 13,
   k19 = 14
} MeasurementFilterCoefficient_Root;

typedef OSUINT32 MeasurementFilterCoefficient;

EXTERN int asn1PE_MeasurementFilterCoefficient (ASN1CTXT* pctxt, MeasurementFilterCoefficient value);

EXTERN int asn1PD_MeasurementFilterCoefficient (ASN1CTXT* pctxt, MeasurementFilterCoefficient* pvalue);

EXTERN void asn1Print_MeasurementFilterCoefficient
   (const char* name, MeasurementFilterCoefficient* pvalue);

EXTERN MeasurementFilterCoefficient* asn1Test_MeasurementFilterCoefficient
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MeasurementID                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT32 MeasurementID;

EXTERN int asn1PE_MeasurementID (ASN1CTXT* pctxt, MeasurementID value);

EXTERN int asn1PD_MeasurementID (ASN1CTXT* pctxt, MeasurementID* pvalue);

EXTERN void asn1Print_MeasurementID
   (const char* name, MeasurementID* pvalue);

EXTERN MeasurementID* asn1Test_MeasurementID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Measurement_Power_Offset                                  */
/*                                                            */
/**************************************************************/

typedef OSINT8 Measurement_Power_Offset;

EXTERN int asn1PE_Measurement_Power_Offset (ASN1CTXT* pctxt, Measurement_Power_Offset value);

EXTERN int asn1PD_Measurement_Power_Offset (ASN1CTXT* pctxt, Measurement_Power_Offset* pvalue);

EXTERN void asn1Print_Measurement_Power_Offset
   (const char* name, Measurement_Power_Offset* pvalue);

EXTERN Measurement_Power_Offset* asn1Test_Measurement_Power_Offset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MeasurementRecoveryBehavior                               */
/*                                                            */
/**************************************************************/

EXTERN int asn1PE_MeasurementRecoveryBehavior_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PE_MeasurementRecoveryBehavior(pctxt) \
asn1PE_MeasurementRecoveryBehavior_(pctxt, NULL)

EXTERN int asn1PD_MeasurementRecoveryBehavior_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PD_MeasurementRecoveryBehavior(pctxt) \
asn1PD_MeasurementRecoveryBehavior_(pctxt, NULL)

EXTERN void asn1Print_MeasurementRecoveryBehavior_
   (const char* name, void* pvalue);
#define asn1Print_MeasurementRecoveryBehavior(name) \
asn1Print_MeasurementRecoveryBehavior_(name, NULL)

/**************************************************************/
/*                                                            */
/*  MeasurementRecoveryReportingIndicator                     */
/*                                                            */
/**************************************************************/

EXTERN int asn1PE_MeasurementRecoveryReportingIndicator_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PE_MeasurementRecoveryReportingIndicator(pctxt) \
asn1PE_MeasurementRecoveryReportingIndicator_(pctxt, NULL)

EXTERN int asn1PD_MeasurementRecoveryReportingIndicator_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PD_MeasurementRecoveryReportingIndicator(pctxt) \
asn1PD_MeasurementRecoveryReportingIndicator_(pctxt, NULL)

EXTERN void asn1Print_MeasurementRecoveryReportingIndicator_
   (const char* name, void* pvalue);
#define asn1Print_MeasurementRecoveryReportingIndicator(name) \
asn1Print_MeasurementRecoveryReportingIndicator_(name, NULL)

/**************************************************************/
/*                                                            */
/*  MeasurementRecoverySupportIndicator                       */
/*                                                            */
/**************************************************************/

EXTERN int asn1PE_MeasurementRecoverySupportIndicator_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PE_MeasurementRecoverySupportIndicator(pctxt) \
asn1PE_MeasurementRecoverySupportIndicator_(pctxt, NULL)

EXTERN int asn1PD_MeasurementRecoverySupportIndicator_ (ASN1CTXT* pctxt, void* pvalue);
#define asn1PD_MeasurementRecoverySupportIndicator(pctxt) \
asn1PD_MeasurementRecoverySupportIndicator_(pctxt, NULL)

EXTERN void asn1Print_MeasurementRecoverySupportIndicator_
   (const char* name, void* pvalue);
#define asn1Print_MeasurementRecoverySupportIndicator(name) \
asn1Print_MeasurementRecoverySupportIndicator_(name, NULL)

/**************************************************************/
/*                                                            */
/*  MICH_CFN                                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT16 MICH_CFN;

EXTERN int asn1PE_MICH_CFN (ASN1CTXT* pctxt, MICH_CFN value);

EXTERN int asn1PD_MICH_CFN (ASN1CTXT* pctxt, MICH_CFN* pvalue);

EXTERN void asn1Print_MICH_CFN
   (const char* name, MICH_CFN* pvalue);

EXTERN MICH_CFN* asn1Test_MICH_CFN
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Modification_Period                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   v5120 = 0,
   v10240 = 1
} Modification_Period_Root;

typedef OSUINT32 Modification_Period;

EXTERN int asn1PE_Modification_Period (ASN1CTXT* pctxt, Modification_Period value);

EXTERN int asn1PD_Modification_Period (ASN1CTXT* pctxt, Modification_Period* pvalue);

EXTERN void asn1Print_Modification_Period
   (const char* name, Modification_Period* pvalue);

EXTERN Modification_Period* asn1Test_Modification_Period
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Nack_Power_Offset                                         */
/*                                                            */
/**************************************************************/

typedef OSINT32 Nack_Power_Offset;

EXTERN int asn1PE_Nack_Power_Offset (ASN1CTXT* pctxt, Nack_Power_Offset value);

EXTERN int asn1PD_Nack_Power_Offset (ASN1CTXT* pctxt, Nack_Power_Offset* pvalue);

EXTERN void asn1Print_Nack_Power_Offset
   (const char* name, Nack_Power_Offset* pvalue);

EXTERN Nack_Power_Offset* asn1Test_Nack_Power_Offset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NCyclesPerSFNperiod                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   v1_2 = 0,
   v2_3 = 1,
   v4_7 = 2,
   v8_6 = 3
} NCyclesPerSFNperiod_Root;

typedef enum {
   v16_5 = 4,
   v32_3 = 5,
   v64_2 = 6
} NCyclesPerSFNperiod_Ext;

typedef OSUINT32 NCyclesPerSFNperiod;

EXTERN int asn1PE_NCyclesPerSFNperiod (ASN1CTXT* pctxt, NCyclesPerSFNperiod value);

EXTERN int asn1PD_NCyclesPerSFNperiod (ASN1CTXT* pctxt, NCyclesPerSFNperiod* pvalue);

EXTERN void asn1Print_NCyclesPerSFNperiod
   (const char* name, NCyclesPerSFNperiod* pvalue);

EXTERN NCyclesPerSFNperiod* asn1Test_NCyclesPerSFNperiod
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NRepetitionsPerCyclePeriod                                */
/*                                                            */
/**************************************************************/

typedef OSUINT8 NRepetitionsPerCyclePeriod;

EXTERN int asn1PE_NRepetitionsPerCyclePeriod (ASN1CTXT* pctxt, NRepetitionsPerCyclePeriod value);

EXTERN int asn1PD_NRepetitionsPerCyclePeriod (ASN1CTXT* pctxt, NRepetitionsPerCyclePeriod* pvalue);

EXTERN void asn1Print_NRepetitionsPerCyclePeriod
   (const char* name, NRepetitionsPerCyclePeriod* pvalue);

EXTERN NRepetitionsPerCyclePeriod* asn1Test_NRepetitionsPerCyclePeriod
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Extension_neighbouringCellMeasurementInformation          */
/*                                                            */
/**************************************************************/

typedef ProtocolIE_Single_Container Extension_neighbouringCellMeasurementInformation;

EXTERN int asn1PE_Extension_neighbouringCellMeasurementInformation (ASN1CTXT* pctxt, Extension_neighbouringCellMeasurementInformation* pvalue);

EXTERN int asn1PD_Extension_neighbouringCellMeasurementInformation (ASN1CTXT* pctxt, Extension_neighbouringCellMeasurementInformation* pvalue);

EXTERN void asn1Print_Extension_neighbouringCellMeasurementInformation
   (const char* name, Extension_neighbouringCellMeasurementInformation* pvalue);

EXTERN Extension_neighbouringCellMeasurementInformation* asn1Test_Extension_neighbouringCellMeasurementInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Notification_Indicator                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Notification_Indicator;

EXTERN int asn1PE_Notification_Indicator (ASN1CTXT* pctxt, Notification_Indicator value);

EXTERN int asn1PD_Notification_Indicator (ASN1CTXT* pctxt, Notification_Indicator* pvalue);

EXTERN void asn1Print_Notification_Indicator
   (const char* name, Notification_Indicator* pvalue);

EXTERN Notification_Indicator* asn1Test_Notification_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NumberOfReportedCellPortions                              */
/*                                                            */
/**************************************************************/

typedef OSINT32 NumberOfReportedCellPortions;

EXTERN int asn1PE_NumberOfReportedCellPortions (ASN1CTXT* pctxt, NumberOfReportedCellPortions value);

EXTERN int asn1PD_NumberOfReportedCellPortions (ASN1CTXT* pctxt, NumberOfReportedCellPortions* pvalue);

EXTERN void asn1Print_NumberOfReportedCellPortions
   (const char* name, NumberOfReportedCellPortions* pvalue);

EXTERN NumberOfReportedCellPortions* asn1Test_NumberOfReportedCellPortions
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NSubCyclesPerCyclePeriod                                  */
/*                                                            */
/**************************************************************/

typedef OSINT32 NSubCyclesPerCyclePeriod;

EXTERN int asn1PE_NSubCyclesPerCyclePeriod (ASN1CTXT* pctxt, NSubCyclesPerCyclePeriod value);

EXTERN int asn1PD_NSubCyclesPerCyclePeriod (ASN1CTXT* pctxt, NSubCyclesPerCyclePeriod* pvalue);

EXTERN void asn1Print_NSubCyclesPerCyclePeriod
   (const char* name, NSubCyclesPerCyclePeriod* pvalue);

EXTERN NSubCyclesPerCyclePeriod* asn1Test_NSubCyclesPerCyclePeriod
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PayloadCRC_PresenceIndicator                              */
/*                                                            */
/**************************************************************/

typedef enum {
   cRC_Included = 0,
   cRC_NotIncluded = 1
} PayloadCRC_PresenceIndicator_Root;

typedef OSUINT32 PayloadCRC_PresenceIndicator;

EXTERN int asn1PE_PayloadCRC_PresenceIndicator (ASN1CTXT* pctxt, PayloadCRC_PresenceIndicator value);

EXTERN int asn1PD_PayloadCRC_PresenceIndicator (ASN1CTXT* pctxt, PayloadCRC_PresenceIndicator* pvalue);

EXTERN void asn1Print_PayloadCRC_PresenceIndicator
   (const char* name, PayloadCRC_PresenceIndicator* pvalue);

EXTERN PayloadCRC_PresenceIndicator* asn1Test_PayloadCRC_PresenceIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PowerAdjustmentType                                       */
/*                                                            */
/**************************************************************/

typedef enum {
   none_1 = 0,
   common = 1,
   individual = 2
} PowerAdjustmentType_Root;

typedef OSUINT32 PowerAdjustmentType;

EXTERN int asn1PE_PowerAdjustmentType (ASN1CTXT* pctxt, PowerAdjustmentType value);

EXTERN int asn1PD_PowerAdjustmentType (ASN1CTXT* pctxt, PowerAdjustmentType* pvalue);

EXTERN void asn1Print_PowerAdjustmentType
   (const char* name, PowerAdjustmentType* pvalue);

EXTERN PowerAdjustmentType* asn1Test_PowerAdjustmentType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PRCDeviation                                              */
/*                                                            */
/**************************************************************/

typedef enum {
   one = 0,
   two = 1,
   five = 2,
   ten = 3
} PRCDeviation_Root;

typedef OSUINT32 PRCDeviation;

EXTERN int asn1PE_PRCDeviation (ASN1CTXT* pctxt, PRCDeviation value);

EXTERN int asn1PD_PRCDeviation (ASN1CTXT* pctxt, PRCDeviation* pvalue);

EXTERN void asn1Print_PRCDeviation
   (const char* name, PRCDeviation* pvalue);

EXTERN PRCDeviation* asn1Test_PRCDeviation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PredictedSFNSFNDeviationLimit                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 PredictedSFNSFNDeviationLimit;

EXTERN int asn1PE_PredictedSFNSFNDeviationLimit (ASN1CTXT* pctxt, PredictedSFNSFNDeviationLimit value);

EXTERN int asn1PD_PredictedSFNSFNDeviationLimit (ASN1CTXT* pctxt, PredictedSFNSFNDeviationLimit* pvalue);

EXTERN void asn1Print_PredictedSFNSFNDeviationLimit
   (const char* name, PredictedSFNSFNDeviationLimit* pvalue);

EXTERN PredictedSFNSFNDeviationLimit* asn1Test_PredictedSFNSFNDeviationLimit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PredictedTUTRANGPSDeviationLimit                          */
/*                                                            */
/**************************************************************/

typedef OSUINT16 PredictedTUTRANGPSDeviationLimit;

EXTERN int asn1PE_PredictedTUTRANGPSDeviationLimit (ASN1CTXT* pctxt, PredictedTUTRANGPSDeviationLimit value);

EXTERN int asn1PD_PredictedTUTRANGPSDeviationLimit (ASN1CTXT* pctxt, PredictedTUTRANGPSDeviationLimit* pvalue);

EXTERN void asn1Print_PredictedTUTRANGPSDeviationLimit
   (const char* name, PredictedTUTRANGPSDeviationLimit* pvalue);

EXTERN PredictedTUTRANGPSDeviationLimit* asn1Test_PredictedTUTRANGPSDeviationLimit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Primary_CPICH_Usage_for_Channel_Estimation                */
/*                                                            */
/**************************************************************/

typedef enum {
   primary_CPICH_may_be_used = 0,
   primary_CPICH_shall_not_be_used = 1
} Primary_CPICH_Usage_for_Channel_Estimation_Root;

typedef OSUINT32 Primary_CPICH_Usage_for_Channel_Estimation;

EXTERN int asn1PE_Primary_CPICH_Usage_for_Channel_Estimation (ASN1CTXT* pctxt, Primary_CPICH_Usage_for_Channel_Estimation value);

EXTERN int asn1PD_Primary_CPICH_Usage_for_Channel_Estimation (ASN1CTXT* pctxt, Primary_CPICH_Usage_for_Channel_Estimation* pvalue);

EXTERN void asn1Print_Primary_CPICH_Usage_for_Channel_Estimation
   (const char* name, Primary_CPICH_Usage_for_Channel_Estimation* pvalue);

EXTERN Primary_CPICH_Usage_for_Channel_Estimation* asn1Test_Primary_CPICH_Usage_for_Channel_Estimation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PrimaryScramblingCode                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 PrimaryScramblingCode;

EXTERN int asn1PE_PrimaryScramblingCode (ASN1CTXT* pctxt, PrimaryScramblingCode value);

EXTERN int asn1PD_PrimaryScramblingCode (ASN1CTXT* pctxt, PrimaryScramblingCode* pvalue);

EXTERN void asn1Print_PrimaryScramblingCode
   (const char* name, PrimaryScramblingCode* pvalue);

EXTERN PrimaryScramblingCode* asn1Test_PrimaryScramblingCode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_Id                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PriorityQueue_Id;

EXTERN int asn1PE_PriorityQueue_Id (ASN1CTXT* pctxt, PriorityQueue_Id value);

EXTERN int asn1PD_PriorityQueue_Id (ASN1CTXT* pctxt, PriorityQueue_Id* pvalue);

EXTERN void asn1Print_PriorityQueue_Id
   (const char* name, PriorityQueue_Id* pvalue);

EXTERN PriorityQueue_Id* asn1Test_PriorityQueue_Id
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PrimaryCCPCH_RSCP                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 PrimaryCCPCH_RSCP;

EXTERN int asn1PE_PrimaryCCPCH_RSCP (ASN1CTXT* pctxt, PrimaryCCPCH_RSCP value);

EXTERN int asn1PD_PrimaryCCPCH_RSCP (ASN1CTXT* pctxt, PrimaryCCPCH_RSCP* pvalue);

EXTERN void asn1Print_PrimaryCCPCH_RSCP
   (const char* name, PrimaryCCPCH_RSCP* pvalue);

EXTERN PrimaryCCPCH_RSCP* asn1Test_PrimaryCCPCH_RSCP
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PrimaryCCPCH_RSCP_Delta                                   */
/*                                                            */
/**************************************************************/

typedef OSINT32 PrimaryCCPCH_RSCP_Delta;

EXTERN int asn1PE_PrimaryCCPCH_RSCP_Delta (ASN1CTXT* pctxt, PrimaryCCPCH_RSCP_Delta value);

EXTERN int asn1PD_PrimaryCCPCH_RSCP_Delta (ASN1CTXT* pctxt, PrimaryCCPCH_RSCP_Delta* pvalue);

EXTERN void asn1Print_PrimaryCCPCH_RSCP_Delta
   (const char* name, PrimaryCCPCH_RSCP_Delta* pvalue);

EXTERN PrimaryCCPCH_RSCP_Delta* asn1Test_PrimaryCCPCH_RSCP_Delta
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  QE_Selector                                               */
/*                                                            */
/**************************************************************/

typedef enum {
   selected = 0,
   non_selected = 1
} QE_Selector_Root;

typedef OSUINT32 QE_Selector;

EXTERN int asn1PE_QE_Selector (ASN1CTXT* pctxt, QE_Selector value);

EXTERN int asn1PD_QE_Selector (ASN1CTXT* pctxt, QE_Selector* pvalue);

EXTERN void asn1Print_QE_Selector
   (const char* name, QE_Selector* pvalue);

EXTERN QE_Selector* asn1Test_QE_Selector
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReferenceClockAvailability                                */
/*                                                            */
/**************************************************************/

typedef enum {
   available = 0,
   notAvailable = 1
} ReferenceClockAvailability_Root;

typedef OSUINT32 ReferenceClockAvailability;

EXTERN int asn1PE_ReferenceClockAvailability (ASN1CTXT* pctxt, ReferenceClockAvailability value);

EXTERN int asn1PD_ReferenceClockAvailability (ASN1CTXT* pctxt, ReferenceClockAvailability* pvalue);

EXTERN void asn1Print_ReferenceClockAvailability
   (const char* name, ReferenceClockAvailability* pvalue);

EXTERN ReferenceClockAvailability* asn1Test_ReferenceClockAvailability
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReferenceSFNoffset                                        */
/*                                                            */
/**************************************************************/

typedef OSUINT8 ReferenceSFNoffset;

EXTERN int asn1PE_ReferenceSFNoffset (ASN1CTXT* pctxt, ReferenceSFNoffset value);

EXTERN int asn1PD_ReferenceSFNoffset (ASN1CTXT* pctxt, ReferenceSFNoffset* pvalue);

EXTERN void asn1Print_ReferenceSFNoffset
   (const char* name, ReferenceSFNoffset* pvalue);

EXTERN ReferenceSFNoffset* asn1Test_ReferenceSFNoffset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RepetitionNumber0                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RepetitionNumber0;

EXTERN int asn1PE_RepetitionNumber0 (ASN1CTXT* pctxt, RepetitionNumber0 value);

EXTERN int asn1PD_RepetitionNumber0 (ASN1CTXT* pctxt, RepetitionNumber0* pvalue);

EXTERN void asn1Print_RepetitionNumber0
   (const char* name, RepetitionNumber0* pvalue);

EXTERN RepetitionNumber0* asn1Test_RepetitionNumber0
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RepetitionNumber1                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT16 RepetitionNumber1;

EXTERN int asn1PE_RepetitionNumber1 (ASN1CTXT* pctxt, RepetitionNumber1 value);

EXTERN int asn1PD_RepetitionNumber1 (ASN1CTXT* pctxt, RepetitionNumber1* pvalue);

EXTERN void asn1Print_RepetitionNumber1
   (const char* name, RepetitionNumber1* pvalue);

EXTERN RepetitionNumber1* asn1Test_RepetitionNumber1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Extension_ReportCharacteristics                           */
/*                                                            */
/**************************************************************/

typedef ProtocolIE_Single_Container Extension_ReportCharacteristics;

EXTERN int asn1PE_Extension_ReportCharacteristics (ASN1CTXT* pctxt, Extension_ReportCharacteristics* pvalue);

EXTERN int asn1PD_Extension_ReportCharacteristics (ASN1CTXT* pctxt, Extension_ReportCharacteristics* pvalue);

EXTERN void asn1Print_Extension_ReportCharacteristics
   (const char* name, Extension_ReportCharacteristics* pvalue);

EXTERN Extension_ReportCharacteristics* asn1Test_Extension_ReportCharacteristics
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Extension_ReportCharacteristicsType_MeasurementIncreaseD  */
/*                                                            */
/**************************************************************/

typedef ProtocolIE_Single_Container Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold;

EXTERN int asn1PE_Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold (ASN1CTXT* pctxt, Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* pvalue);

EXTERN int asn1PD_Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold (ASN1CTXT* pctxt, Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* pvalue);

EXTERN void asn1Print_Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold
   (const char* name, Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* pvalue);

EXTERN Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* asn1Test_Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Extension_ReportCharacteristicsType_MeasurementThreshold  */
/*                                                            */
/**************************************************************/

typedef ProtocolIE_Single_Container Extension_ReportCharacteristicsType_MeasurementThreshold;

EXTERN int asn1PE_Extension_ReportCharacteristicsType_MeasurementThreshold (ASN1CTXT* pctxt, Extension_ReportCharacteristicsType_MeasurementThreshold* pvalue);

EXTERN int asn1PD_Extension_ReportCharacteristicsType_MeasurementThreshold (ASN1CTXT* pctxt, Extension_ReportCharacteristicsType_MeasurementThreshold* pvalue);

EXTERN void asn1Print_Extension_ReportCharacteristicsType_MeasurementThreshold
   (const char* name, Extension_ReportCharacteristicsType_MeasurementThreshold* pvalue);

EXTERN Extension_ReportCharacteristicsType_MeasurementThreshold* asn1Test_Extension_ReportCharacteristicsType_MeasurementThreshold
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MeasurementChangeTime_Scaledmsec                          */
/*                                                            */
/**************************************************************/

typedef OSINT32 MeasurementChangeTime_Scaledmsec;

EXTERN int asn1PE_MeasurementChangeTime_Scaledmsec (ASN1CTXT* pctxt, MeasurementChangeTime_Scaledmsec value);

EXTERN int asn1PD_MeasurementChangeTime_Scaledmsec (ASN1CTXT* pctxt, MeasurementChangeTime_Scaledmsec* pvalue);

EXTERN void asn1Print_MeasurementChangeTime_Scaledmsec
   (const char* name, MeasurementChangeTime_Scaledmsec* pvalue);

EXTERN MeasurementChangeTime_Scaledmsec* asn1Test_MeasurementChangeTime_Scaledmsec
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MeasurementHysteresisTime_Scaledmsec                      */
/*                                                            */
/**************************************************************/

typedef OSINT32 MeasurementHysteresisTime_Scaledmsec;

EXTERN int asn1PE_MeasurementHysteresisTime_Scaledmsec (ASN1CTXT* pctxt, MeasurementHysteresisTime_Scaledmsec value);

EXTERN int asn1PD_MeasurementHysteresisTime_Scaledmsec (ASN1CTXT* pctxt, MeasurementHysteresisTime_Scaledmsec* pvalue);

EXTERN void asn1Print_MeasurementHysteresisTime_Scaledmsec
   (const char* name, MeasurementHysteresisTime_Scaledmsec* pvalue);

EXTERN MeasurementHysteresisTime_Scaledmsec* asn1Test_MeasurementHysteresisTime_Scaledmsec
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportPeriodicity_Scaledmsec                              */
/*                                                            */
/**************************************************************/

typedef OSINT32 ReportPeriodicity_Scaledmsec;

EXTERN int asn1PE_ReportPeriodicity_Scaledmsec (ASN1CTXT* pctxt, ReportPeriodicity_Scaledmsec value);

EXTERN int asn1PD_ReportPeriodicity_Scaledmsec (ASN1CTXT* pctxt, ReportPeriodicity_Scaledmsec* pvalue);

EXTERN void asn1Print_ReportPeriodicity_Scaledmsec
   (const char* name, ReportPeriodicity_Scaledmsec* pvalue);

EXTERN ReportPeriodicity_Scaledmsec* asn1Test_ReportPeriodicity_Scaledmsec
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportPeriodicity_Scaledmin                               */
/*                                                            */
/**************************************************************/

typedef OSINT32 ReportPeriodicity_Scaledmin;

EXTERN int asn1PE_ReportPeriodicity_Scaledmin (ASN1CTXT* pctxt, ReportPeriodicity_Scaledmin value);

EXTERN int asn1PD_ReportPeriodicity_Scaledmin (ASN1CTXT* pctxt, ReportPeriodicity_Scaledmin* pvalue);

EXTERN void asn1Print_ReportPeriodicity_Scaledmin
   (const char* name, ReportPeriodicity_Scaledmin* pvalue);

EXTERN ReportPeriodicity_Scaledmin* asn1Test_ReportPeriodicity_Scaledmin
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportPeriodicity_Scaledhour                              */
/*                                                            */
/**************************************************************/

typedef OSINT32 ReportPeriodicity_Scaledhour;

EXTERN int asn1PE_ReportPeriodicity_Scaledhour (ASN1CTXT* pctxt, ReportPeriodicity_Scaledhour value);

EXTERN int asn1PD_ReportPeriodicity_Scaledhour (ASN1CTXT* pctxt, ReportPeriodicity_Scaledhour* pvalue);

EXTERN void asn1Print_ReportPeriodicity_Scaledhour
   (const char* name, ReportPeriodicity_Scaledhour* pvalue);

EXTERN ReportPeriodicity_Scaledhour* asn1Test_ReportPeriodicity_Scaledhour
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RLC_Mode                                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   rLC_AM = 0,
   rLC_UM = 1
} RLC_Mode_Root;

typedef OSUINT32 RLC_Mode;

EXTERN int asn1PE_RLC_Mode (ASN1CTXT* pctxt, RLC_Mode value);

EXTERN int asn1PD_RLC_Mode (ASN1CTXT* pctxt, RLC_Mode* pvalue);

EXTERN void asn1Print_RLC_Mode
   (const char* name, RLC_Mode* pvalue);

EXTERN RLC_Mode* asn1Test_RLC_Mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Round_Trip_Time_IncrDecrThres                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Round_Trip_Time_IncrDecrThres;

EXTERN int asn1PE_Round_Trip_Time_IncrDecrThres (ASN1CTXT* pctxt, Round_Trip_Time_IncrDecrThres value);

EXTERN int asn1PD_Round_Trip_Time_IncrDecrThres (ASN1CTXT* pctxt, Round_Trip_Time_IncrDecrThres* pvalue);

EXTERN void asn1Print_Round_Trip_Time_IncrDecrThres
   (const char* name, Round_Trip_Time_IncrDecrThres* pvalue);

EXTERN Round_Trip_Time_IncrDecrThres* asn1Test_Round_Trip_Time_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RNC_ID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT16 RNC_ID;

EXTERN int asn1PE_RNC_ID (ASN1CTXT* pctxt, RNC_ID value);

EXTERN int asn1PD_RNC_ID (ASN1CTXT* pctxt, RNC_ID* pvalue);

EXTERN void asn1Print_RNC_ID
   (const char* name, RNC_ID* pvalue);

EXTERN RNC_ID* asn1Test_RNC_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RSCP_Value_IncrDecrThres                                  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 RSCP_Value_IncrDecrThres;

EXTERN int asn1PE_RSCP_Value_IncrDecrThres (ASN1CTXT* pctxt, RSCP_Value_IncrDecrThres value);

EXTERN int asn1PD_RSCP_Value_IncrDecrThres (ASN1CTXT* pctxt, RSCP_Value_IncrDecrThres* pvalue);

EXTERN void asn1Print_RSCP_Value_IncrDecrThres
   (const char* name, RSCP_Value_IncrDecrThres* pvalue);

EXTERN RSCP_Value_IncrDecrThres* asn1Test_RSCP_Value_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Received_total_wide_band_power_Value_IncrDecrThres        */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Received_total_wide_band_power_Value_IncrDecrThres;

EXTERN int asn1PE_Received_total_wide_band_power_Value_IncrDecrThres (ASN1CTXT* pctxt, Received_total_wide_band_power_Value_IncrDecrThres value);

EXTERN int asn1PD_Received_total_wide_band_power_Value_IncrDecrThres (ASN1CTXT* pctxt, Received_total_wide_band_power_Value_IncrDecrThres* pvalue);

EXTERN void asn1Print_Received_total_wide_band_power_Value_IncrDecrThres
   (const char* name, Received_total_wide_band_power_Value_IncrDecrThres* pvalue);

EXTERN Received_total_wide_band_power_Value_IncrDecrThres* asn1Test_Received_total_wide_band_power_Value_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Rx_Timing_Deviation_Value_LCR                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 Rx_Timing_Deviation_Value_LCR;

EXTERN int asn1PE_Rx_Timing_Deviation_Value_LCR (ASN1CTXT* pctxt, Rx_Timing_Deviation_Value_LCR value);

EXTERN int asn1PD_Rx_Timing_Deviation_Value_LCR (ASN1CTXT* pctxt, Rx_Timing_Deviation_Value_LCR* pvalue);

EXTERN void asn1Print_Rx_Timing_Deviation_Value_LCR
   (const char* name, Rx_Timing_Deviation_Value_LCR* pvalue);

EXTERN Rx_Timing_Deviation_Value_LCR* asn1Test_Rx_Timing_Deviation_Value_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AdjustmentPeriod                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT16 AdjustmentPeriod;

EXTERN int asn1PE_AdjustmentPeriod (ASN1CTXT* pctxt, AdjustmentPeriod value);

EXTERN int asn1PD_AdjustmentPeriod (ASN1CTXT* pctxt, AdjustmentPeriod* pvalue);

EXTERN void asn1Print_AdjustmentPeriod
   (const char* name, AdjustmentPeriod* pvalue);

EXTERN AdjustmentPeriod* asn1Test_AdjustmentPeriod
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ScaledAdjustmentRatio                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT8 ScaledAdjustmentRatio;

EXTERN int asn1PE_ScaledAdjustmentRatio (ASN1CTXT* pctxt, ScaledAdjustmentRatio value);

EXTERN int asn1PD_ScaledAdjustmentRatio (ASN1CTXT* pctxt, ScaledAdjustmentRatio* pvalue);

EXTERN void asn1Print_ScaledAdjustmentRatio
   (const char* name, ScaledAdjustmentRatio* pvalue);

EXTERN ScaledAdjustmentRatio* asn1Test_ScaledAdjustmentRatio
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MaxAdjustmentStep                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT8 MaxAdjustmentStep;

EXTERN int asn1PE_MaxAdjustmentStep (ASN1CTXT* pctxt, MaxAdjustmentStep value);

EXTERN int asn1PD_MaxAdjustmentStep (ASN1CTXT* pctxt, MaxAdjustmentStep* pvalue);

EXTERN void asn1Print_MaxAdjustmentStep
   (const char* name, MaxAdjustmentStep* pvalue);

EXTERN MaxAdjustmentStep* asn1Test_MaxAdjustmentStep
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SchedulingPriorityIndicator                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SchedulingPriorityIndicator;

EXTERN int asn1PE_SchedulingPriorityIndicator (ASN1CTXT* pctxt, SchedulingPriorityIndicator value);

EXTERN int asn1PD_SchedulingPriorityIndicator (ASN1CTXT* pctxt, SchedulingPriorityIndicator* pvalue);

EXTERN void asn1Print_SchedulingPriorityIndicator
   (const char* name, SchedulingPriorityIndicator* pvalue);

EXTERN SchedulingPriorityIndicator* asn1Test_SchedulingPriorityIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SID                                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SID;

EXTERN int asn1PE_SID (ASN1CTXT* pctxt, SID value);

EXTERN int asn1PD_SID (ASN1CTXT* pctxt, SID* pvalue);

EXTERN void asn1Print_SID
   (const char* name, SID* pvalue);

EXTERN SID* asn1Test_SID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFN_FDD                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT32 SFNSFN_FDD;

EXTERN int asn1PE_SFNSFN_FDD (ASN1CTXT* pctxt, SFNSFN_FDD value);

EXTERN int asn1PD_SFNSFN_FDD (ASN1CTXT* pctxt, SFNSFN_FDD* pvalue);

EXTERN void asn1Print_SFNSFN_FDD
   (const char* name, SFNSFN_FDD* pvalue);

EXTERN SFNSFN_FDD* asn1Test_SFNSFN_FDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFN_TDD                                                */
/*                                                            */
/**************************************************************/

typedef OSUINT16 SFNSFN_TDD;

EXTERN int asn1PE_SFNSFN_TDD (ASN1CTXT* pctxt, SFNSFN_TDD value);

EXTERN int asn1PD_SFNSFN_TDD (ASN1CTXT* pctxt, SFNSFN_TDD* pvalue);

EXTERN void asn1Print_SFNSFN_TDD
   (const char* name, SFNSFN_TDD* pvalue);

EXTERN SFNSFN_TDD* asn1Test_SFNSFN_TDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNChangeLimit                                         */
/*                                                            */
/**************************************************************/

typedef OSUINT16 SFNSFNChangeLimit;

EXTERN int asn1PE_SFNSFNChangeLimit (ASN1CTXT* pctxt, SFNSFNChangeLimit value);

EXTERN int asn1PD_SFNSFNChangeLimit (ASN1CTXT* pctxt, SFNSFNChangeLimit* pvalue);

EXTERN void asn1Print_SFNSFNChangeLimit
   (const char* name, SFNSFNChangeLimit* pvalue);

EXTERN SFNSFNChangeLimit* asn1Test_SFNSFNChangeLimit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNDriftRate                                           */
/*                                                            */
/**************************************************************/

typedef OSINT8 SFNSFNDriftRate;

EXTERN int asn1PE_SFNSFNDriftRate (ASN1CTXT* pctxt, SFNSFNDriftRate value);

EXTERN int asn1PD_SFNSFNDriftRate (ASN1CTXT* pctxt, SFNSFNDriftRate* pvalue);

EXTERN void asn1Print_SFNSFNDriftRate
   (const char* name, SFNSFNDriftRate* pvalue);

EXTERN SFNSFNDriftRate* asn1Test_SFNSFNDriftRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNDriftRateQuality                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SFNSFNDriftRateQuality;

EXTERN int asn1PE_SFNSFNDriftRateQuality (ASN1CTXT* pctxt, SFNSFNDriftRateQuality value);

EXTERN int asn1PD_SFNSFNDriftRateQuality (ASN1CTXT* pctxt, SFNSFNDriftRateQuality* pvalue);

EXTERN void asn1Print_SFNSFNDriftRateQuality
   (const char* name, SFNSFNDriftRateQuality* pvalue);

EXTERN SFNSFNDriftRateQuality* asn1Test_SFNSFNDriftRateQuality
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNQuality                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SFNSFNQuality;

EXTERN int asn1PE_SFNSFNQuality (ASN1CTXT* pctxt, SFNSFNQuality value);

EXTERN int asn1PD_SFNSFNQuality (ASN1CTXT* pctxt, SFNSFNQuality* pvalue);

EXTERN void asn1Print_SFNSFNQuality
   (const char* name, SFNSFNQuality* pvalue);

EXTERN SFNSFNQuality* asn1Test_SFNSFNQuality
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ShutdownTimer                                             */
/*                                                            */
/**************************************************************/

typedef OSUINT16 ShutdownTimer;

EXTERN int asn1PE_ShutdownTimer (ASN1CTXT* pctxt, ShutdownTimer value);

EXTERN int asn1PD_ShutdownTimer (ASN1CTXT* pctxt, ShutdownTimer* pvalue);

EXTERN void asn1Print_ShutdownTimer
   (const char* name, ShutdownTimer* pvalue);

EXTERN ShutdownTimer* asn1Test_ShutdownTimer
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SIR_Error_Value_IncrDecrThres                             */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SIR_Error_Value_IncrDecrThres;

EXTERN int asn1PE_SIR_Error_Value_IncrDecrThres (ASN1CTXT* pctxt, SIR_Error_Value_IncrDecrThres value);

EXTERN int asn1PD_SIR_Error_Value_IncrDecrThres (ASN1CTXT* pctxt, SIR_Error_Value_IncrDecrThres* pvalue);

EXTERN void asn1Print_SIR_Error_Value_IncrDecrThres
   (const char* name, SIR_Error_Value_IncrDecrThres* pvalue);

EXTERN SIR_Error_Value_IncrDecrThres* asn1Test_SIR_Error_Value_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SIR_Value_IncrDecrThres                                   */
/*                                                            */
/**************************************************************/

typedef OSUINT8 SIR_Value_IncrDecrThres;

EXTERN int asn1PE_SIR_Value_IncrDecrThres (ASN1CTXT* pctxt, SIR_Value_IncrDecrThres value);

EXTERN int asn1PD_SIR_Value_IncrDecrThres (ASN1CTXT* pctxt, SIR_Value_IncrDecrThres* pvalue);

EXTERN void asn1Print_SIR_Value_IncrDecrThres
   (const char* name, SIR_Value_IncrDecrThres* pvalue);

EXTERN SIR_Value_IncrDecrThres* asn1Test_SIR_Value_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SignallingBearerRequestIndicator                          */
/*                                                            */
/**************************************************************/

typedef enum {
   bearerRequested = 0
} SignallingBearerRequestIndicator_Root;

typedef OSUINT32 SignallingBearerRequestIndicator;

EXTERN int asn1PE_SignallingBearerRequestIndicator (ASN1CTXT* pctxt, SignallingBearerRequestIndicator value);

EXTERN int asn1PD_SignallingBearerRequestIndicator (ASN1CTXT* pctxt, SignallingBearerRequestIndicator* pvalue);

EXTERN void asn1Print_SignallingBearerRequestIndicator
   (const char* name, SignallingBearerRequestIndicator* pvalue);

EXTERN SignallingBearerRequestIndicator* asn1Test_SignallingBearerRequestIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Start_Of_Audit_Sequence_Indicator                         */
/*                                                            */
/**************************************************************/

typedef enum {
   start_of_audit_sequence = 0,
   not_start_of_audit_sequence = 1
} Start_Of_Audit_Sequence_Indicator_Root;

typedef OSUINT32 Start_Of_Audit_Sequence_Indicator;

EXTERN int asn1PE_Start_Of_Audit_Sequence_Indicator (ASN1CTXT* pctxt, Start_Of_Audit_Sequence_Indicator value);

EXTERN int asn1PD_Start_Of_Audit_Sequence_Indicator (ASN1CTXT* pctxt, Start_Of_Audit_Sequence_Indicator* pvalue);

EXTERN void asn1Print_Start_Of_Audit_Sequence_Indicator
   (const char* name, Start_Of_Audit_Sequence_Indicator* pvalue);

EXTERN Start_Of_Audit_Sequence_Indicator* asn1Test_Start_Of_Audit_Sequence_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SyncCase                                                  */
/*                                                            */
/**************************************************************/

typedef OSINT32 SyncCase;

EXTERN int asn1PE_SyncCase (ASN1CTXT* pctxt, SyncCase value);

EXTERN int asn1PD_SyncCase (ASN1CTXT* pctxt, SyncCase* pvalue);

EXTERN void asn1Print_SyncCase
   (const char* name, SyncCase* pvalue);

EXTERN SyncCase* asn1Test_SyncCase
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  T1                                                        */
/*                                                            */
/**************************************************************/

typedef enum {
   v10_2 = 0,
   v20_2 = 1,
   v30 = 2,
   v40_2 = 3,
   v50 = 4,
   v60_1 = 5,
   v70 = 6,
   v80_2 = 7,
   v90 = 8,
   v100_1 = 9,
   v120_1 = 10,
   v140_1 = 11,
   v160_2 = 12,
   v200_1 = 13,
   v300_1 = 14,
   v400_1 = 15
} T1_Root;

typedef OSUINT32 T1;

EXTERN int asn1PE_T1 (ASN1CTXT* pctxt, T1 value);

EXTERN int asn1PD_T1 (ASN1CTXT* pctxt, T1* pvalue);

EXTERN void asn1Print_T1
   (const char* name, T1* pvalue);

EXTERN T1* asn1Test_T1
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  T_Cell                                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   v0_3 = 0,
   v1_5 = 1,
   v2_8 = 2,
   v3_2 = 3,
   v4_11 = 4,
   v5 = 5,
   v6_3 = 6,
   v7 = 7,
   v8_10 = 8,
   v9 = 9
} T_Cell_Root;

typedef OSUINT32 T_Cell;

EXTERN int asn1PE_T_Cell (ASN1CTXT* pctxt, T_Cell value);

EXTERN int asn1PD_T_Cell (ASN1CTXT* pctxt, T_Cell* pvalue);

EXTERN void asn1Print_T_Cell
   (const char* name, T_Cell* pvalue);

EXTERN T_Cell* asn1Test_T_Cell
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_AckNack_Power_Offset                                  */
/*                                                            */
/**************************************************************/

typedef OSINT32 TDD_AckNack_Power_Offset;

EXTERN int asn1PE_TDD_AckNack_Power_Offset (ASN1CTXT* pctxt, TDD_AckNack_Power_Offset value);

EXTERN int asn1PD_TDD_AckNack_Power_Offset (ASN1CTXT* pctxt, TDD_AckNack_Power_Offset* pvalue);

EXTERN void asn1Print_TDD_AckNack_Power_Offset
   (const char* name, TDD_AckNack_Power_Offset* pvalue);

EXTERN TDD_AckNack_Power_Offset* asn1Test_TDD_AckNack_Power_Offset
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TGD                                                       */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TGD;

EXTERN int asn1PE_TGD (ASN1CTXT* pctxt, TGD value);

EXTERN int asn1PD_TGD (ASN1CTXT* pctxt, TGD* pvalue);

EXTERN void asn1Print_TGD
   (const char* name, TGD* pvalue);

EXTERN TGD* asn1Test_TGD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TGPRC                                                     */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TGPRC;

EXTERN int asn1PE_TGPRC (ASN1CTXT* pctxt, TGPRC value);

EXTERN int asn1PD_TGPRC (ASN1CTXT* pctxt, TGPRC* pvalue);

EXTERN void asn1Print_TGPRC
   (const char* name, TGPRC* pvalue);

EXTERN TGPRC* asn1Test_TGPRC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TGPSID                                                    */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TGPSID;

EXTERN int asn1PE_TGPSID (ASN1CTXT* pctxt, TGPSID value);

EXTERN int asn1PD_TGPSID (ASN1CTXT* pctxt, TGPSID* pvalue);

EXTERN void asn1Print_TGPSID
   (const char* name, TGPSID* pvalue);

EXTERN TGPSID* asn1Test_TGPSID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TGSN                                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TGSN;

EXTERN int asn1PE_TGSN (ASN1CTXT* pctxt, TGSN value);

EXTERN int asn1PD_TGSN (ASN1CTXT* pctxt, TGSN* pvalue);

EXTERN void asn1Print_TGSN
   (const char* name, TGSN* pvalue);

EXTERN TGSN* asn1Test_TGSN
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimingAdvanceApplied                                      */
/*                                                            */
/**************************************************************/

typedef enum {
   yes = 0,
   no = 1
} TimingAdvanceApplied_Root;

typedef OSUINT32 TimingAdvanceApplied;

EXTERN int asn1PE_TimingAdvanceApplied (ASN1CTXT* pctxt, TimingAdvanceApplied value);

EXTERN int asn1PD_TimingAdvanceApplied (ASN1CTXT* pctxt, TimingAdvanceApplied* pvalue);

EXTERN void asn1Print_TimingAdvanceApplied
   (const char* name, TimingAdvanceApplied* pvalue);

EXTERN TimingAdvanceApplied* asn1Test_TimingAdvanceApplied
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SynchronisationIndicator                                  */
/*                                                            */
/**************************************************************/

typedef enum {
   timingMaintainedSynchronisation = 0
} SynchronisationIndicator_Root;

typedef OSUINT32 SynchronisationIndicator;

EXTERN int asn1PE_SynchronisationIndicator (ASN1CTXT* pctxt, SynchronisationIndicator value);

EXTERN int asn1PD_SynchronisationIndicator (ASN1CTXT* pctxt, SynchronisationIndicator* pvalue);

EXTERN void asn1Print_SynchronisationIndicator
   (const char* name, SynchronisationIndicator* pvalue);

EXTERN SynchronisationIndicator* asn1Test_SynchronisationIndicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_  */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue;

EXTERN int asn1PE_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue (ASN1CTXT* pctxt, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue value);

EXTERN int asn1PD_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue (ASN1CTXT* pctxt, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue* pvalue);

EXTERN void asn1Print_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue
   (const char* name, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue* pvalue);

EXTERN TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue* asn1Test_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmitted_Code_Power_Value_IncrDecrThres                */
/*                                                            */
/**************************************************************/

typedef OSINT32 Transmitted_Code_Power_Value_IncrDecrThres;

EXTERN int asn1PE_Transmitted_Code_Power_Value_IncrDecrThres (ASN1CTXT* pctxt, Transmitted_Code_Power_Value_IncrDecrThres value);

EXTERN int asn1PD_Transmitted_Code_Power_Value_IncrDecrThres (ASN1CTXT* pctxt, Transmitted_Code_Power_Value_IncrDecrThres* pvalue);

EXTERN void asn1Print_Transmitted_Code_Power_Value_IncrDecrThres
   (const char* name, Transmitted_Code_Power_Value_IncrDecrThres* pvalue);

EXTERN Transmitted_Code_Power_Value_IncrDecrThres* asn1Test_Transmitted_Code_Power_Value_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmissionDiversityApplied                              */
/*                                                            */
/**************************************************************/

typedef OSBOOL TransmissionDiversityApplied;

EXTERN int asn1PE_TransmissionDiversityApplied (ASN1CTXT* pctxt, TransmissionDiversityApplied value);

EXTERN int asn1PD_TransmissionDiversityApplied (ASN1CTXT* pctxt, TransmissionDiversityApplied* pvalue);

EXTERN void asn1Print_TransmissionDiversityApplied
   (const char* name, TransmissionDiversityApplied* pvalue);

EXTERN TransmissionDiversityApplied* asn1Test_TransmissionDiversityApplied
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSChangeLimit                                      */
/*                                                            */
/**************************************************************/

typedef OSUINT16 TUTRANGPSChangeLimit;

EXTERN int asn1PE_TUTRANGPSChangeLimit (ASN1CTXT* pctxt, TUTRANGPSChangeLimit value);

EXTERN int asn1PD_TUTRANGPSChangeLimit (ASN1CTXT* pctxt, TUTRANGPSChangeLimit* pvalue);

EXTERN void asn1Print_TUTRANGPSChangeLimit
   (const char* name, TUTRANGPSChangeLimit* pvalue);

EXTERN TUTRANGPSChangeLimit* asn1Test_TUTRANGPSChangeLimit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSDriftRate                                        */
/*                                                            */
/**************************************************************/

typedef OSINT8 TUTRANGPSDriftRate;

EXTERN int asn1PE_TUTRANGPSDriftRate (ASN1CTXT* pctxt, TUTRANGPSDriftRate value);

EXTERN int asn1PD_TUTRANGPSDriftRate (ASN1CTXT* pctxt, TUTRANGPSDriftRate* pvalue);

EXTERN void asn1Print_TUTRANGPSDriftRate
   (const char* name, TUTRANGPSDriftRate* pvalue);

EXTERN TUTRANGPSDriftRate* asn1Test_TUTRANGPSDriftRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSDriftRateQuality                                 */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TUTRANGPSDriftRateQuality;

EXTERN int asn1PE_TUTRANGPSDriftRateQuality (ASN1CTXT* pctxt, TUTRANGPSDriftRateQuality value);

EXTERN int asn1PD_TUTRANGPSDriftRateQuality (ASN1CTXT* pctxt, TUTRANGPSDriftRateQuality* pvalue);

EXTERN void asn1Print_TUTRANGPSDriftRateQuality
   (const char* name, TUTRANGPSDriftRateQuality* pvalue);

EXTERN TUTRANGPSDriftRateQuality* asn1Test_TUTRANGPSDriftRateQuality
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSAccuracyClass                                    */
/*                                                            */
/**************************************************************/

typedef enum {
   accuracy_class_A = 0,
   accuracy_class_B = 1,
   accuracy_class_C = 2
} TUTRANGPSAccuracyClass_Root;

typedef OSUINT32 TUTRANGPSAccuracyClass;

EXTERN int asn1PE_TUTRANGPSAccuracyClass (ASN1CTXT* pctxt, TUTRANGPSAccuracyClass value);

EXTERN int asn1PD_TUTRANGPSAccuracyClass (ASN1CTXT* pctxt, TUTRANGPSAccuracyClass* pvalue);

EXTERN void asn1Print_TUTRANGPSAccuracyClass
   (const char* name, TUTRANGPSAccuracyClass* pvalue);

EXTERN TUTRANGPSAccuracyClass* asn1Test_TUTRANGPSAccuracyClass
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSQuality                                          */
/*                                                            */
/**************************************************************/

typedef OSUINT8 TUTRANGPSQuality;

EXTERN int asn1PE_TUTRANGPSQuality (ASN1CTXT* pctxt, TUTRANGPSQuality value);

EXTERN int asn1PD_TUTRANGPSQuality (ASN1CTXT* pctxt, TUTRANGPSQuality* pvalue);

EXTERN void asn1Print_TUTRANGPSQuality
   (const char* name, TUTRANGPSQuality* pvalue);

EXTERN TUTRANGPSQuality* asn1Test_TUTRANGPSQuality
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TypeOfError                                               */
/*                                                            */
/**************************************************************/

typedef enum {
   not_understood = 0,
   missing = 1
} TypeOfError_Root;

typedef OSUINT32 TypeOfError;

EXTERN int asn1PE_TypeOfError (ASN1CTXT* pctxt, TypeOfError value);

EXTERN int asn1PD_TypeOfError (ASN1CTXT* pctxt, TypeOfError* pvalue);

EXTERN void asn1Print_TypeOfError
   (const char* name, TypeOfError* pvalue);

EXTERN TypeOfError* asn1Test_TypeOfError
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_DL_mode                                                */
/*                                                            */
/**************************************************************/

typedef enum {
   ul_only = 0,
   dl_only = 1,
   both_ul_and_dl = 2
} UL_DL_mode_Root;

typedef OSUINT32 UL_DL_mode;

EXTERN int asn1PE_UL_DL_mode (ASN1CTXT* pctxt, UL_DL_mode value);

EXTERN int asn1PD_UL_DL_mode (ASN1CTXT* pctxt, UL_DL_mode* pvalue);

EXTERN void asn1Print_UL_DL_mode
   (const char* name, UL_DL_mode* pvalue);

EXTERN UL_DL_mode* asn1Test_UL_DL_mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_DPDCH_Indicator_For_E_DCH_Operation                    */
/*                                                            */
/**************************************************************/

typedef enum {
   ul_DPDCH_present = 0,
   ul_DPDCH_not_present = 1
} UL_DPDCH_Indicator_For_E_DCH_Operation_Root;

typedef OSUINT32 UL_DPDCH_Indicator_For_E_DCH_Operation;

EXTERN int asn1PE_UL_DPDCH_Indicator_For_E_DCH_Operation (ASN1CTXT* pctxt, UL_DPDCH_Indicator_For_E_DCH_Operation value);

EXTERN int asn1PD_UL_DPDCH_Indicator_For_E_DCH_Operation (ASN1CTXT* pctxt, UL_DPDCH_Indicator_For_E_DCH_Operation* pvalue);

EXTERN void asn1Print_UL_DPDCH_Indicator_For_E_DCH_Operation
   (const char* name, UL_DPDCH_Indicator_For_E_DCH_Operation* pvalue);

EXTERN UL_DPDCH_Indicator_For_E_DCH_Operation* asn1Test_UL_DPDCH_Indicator_For_E_DCH_Operation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Uplink_Compressed_Mode_Method                             */
/*                                                            */
/**************************************************************/

typedef enum {
   sFdiv2_1 = 0,
   higher_layer_scheduling_1 = 1
} Uplink_Compressed_Mode_Method_Root;

typedef OSUINT32 Uplink_Compressed_Mode_Method;

EXTERN int asn1PE_Uplink_Compressed_Mode_Method (ASN1CTXT* pctxt, Uplink_Compressed_Mode_Method value);

EXTERN int asn1PD_Uplink_Compressed_Mode_Method (ASN1CTXT* pctxt, Uplink_Compressed_Mode_Method* pvalue);

EXTERN void asn1Print_Uplink_Compressed_Mode_Method
   (const char* name, Uplink_Compressed_Mode_Method* pvalue);

EXTERN Uplink_Compressed_Mode_Method* asn1Test_Uplink_Compressed_Mode_Method
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_FP_Mode                                                */
/*                                                            */
/**************************************************************/

typedef enum {
   normal_2 = 0,
   silent = 1
} UL_FP_Mode_Root;

typedef OSUINT32 UL_FP_Mode;

EXTERN int asn1PE_UL_FP_Mode (ASN1CTXT* pctxt, UL_FP_Mode value);

EXTERN int asn1PD_UL_FP_Mode (ASN1CTXT* pctxt, UL_FP_Mode* pvalue);

EXTERN void asn1Print_UL_FP_Mode
   (const char* name, UL_FP_Mode* pvalue);

EXTERN UL_FP_Mode* asn1Test_UL_FP_Mode
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_Synchronisation_StepSize                               */
/*                                                            */
/**************************************************************/

typedef OSUINT8 UL_Synchronisation_StepSize;

EXTERN int asn1PE_UL_Synchronisation_StepSize (ASN1CTXT* pctxt, UL_Synchronisation_StepSize value);

EXTERN int asn1PD_UL_Synchronisation_StepSize (ASN1CTXT* pctxt, UL_Synchronisation_StepSize* pvalue);

EXTERN void asn1Print_UL_Synchronisation_StepSize
   (const char* name, UL_Synchronisation_StepSize* pvalue);

EXTERN UL_Synchronisation_StepSize* asn1Test_UL_Synchronisation_StepSize
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_Synchronisation_Frequency                              */
/*                                                            */
/**************************************************************/

typedef OSUINT8 UL_Synchronisation_Frequency;

EXTERN int asn1PE_UL_Synchronisation_Frequency (ASN1CTXT* pctxt, UL_Synchronisation_Frequency value);

EXTERN int asn1PD_UL_Synchronisation_Frequency (ASN1CTXT* pctxt, UL_Synchronisation_Frequency* pvalue);

EXTERN void asn1Print_UL_Synchronisation_Frequency
   (const char* name, UL_Synchronisation_Frequency* pvalue);

EXTERN UL_Synchronisation_Frequency* asn1Test_UL_Synchronisation_Frequency
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UpPTSInterferenceValue                                    */
/*                                                            */
/**************************************************************/

typedef OSINT32 UpPTSInterferenceValue;

EXTERN int asn1PE_UpPTSInterferenceValue (ASN1CTXT* pctxt, UpPTSInterferenceValue value);

EXTERN int asn1PD_UpPTSInterferenceValue (ASN1CTXT* pctxt, UpPTSInterferenceValue* pvalue);

EXTERN void asn1Print_UpPTSInterferenceValue
   (const char* name, UpPTSInterferenceValue* pvalue);

EXTERN UpPTSInterferenceValue* asn1Test_UpPTSInterferenceValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Unidirectional_DCH_Indicator                              */
/*                                                            */
/**************************************************************/

typedef enum {
   downlink_DCH_only = 0,
   uplink_DCH_only = 1
} Unidirectional_DCH_Indicator_Root;

typedef OSUINT32 Unidirectional_DCH_Indicator;

EXTERN int asn1PE_Unidirectional_DCH_Indicator (ASN1CTXT* pctxt, Unidirectional_DCH_Indicator value);

EXTERN int asn1PD_Unidirectional_DCH_Indicator (ASN1CTXT* pctxt, Unidirectional_DCH_Indicator* pvalue);

EXTERN void asn1Print_Unidirectional_DCH_Indicator
   (const char* name, Unidirectional_DCH_Indicator* pvalue);

EXTERN Unidirectional_DCH_Indicator* asn1Test_Unidirectional_DCH_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_TimeslotISCP_Value_IncrDecrThres                       */
/*                                                            */
/**************************************************************/

typedef OSUINT8 UL_TimeslotISCP_Value_IncrDecrThres;

EXTERN int asn1PE_UL_TimeslotISCP_Value_IncrDecrThres (ASN1CTXT* pctxt, UL_TimeslotISCP_Value_IncrDecrThres value);

EXTERN int asn1PD_UL_TimeslotISCP_Value_IncrDecrThres (ASN1CTXT* pctxt, UL_TimeslotISCP_Value_IncrDecrThres* pvalue);

EXTERN void asn1Print_UL_TimeslotISCP_Value_IncrDecrThres
   (const char* name, UL_TimeslotISCP_Value_IncrDecrThres* pvalue);

EXTERN UL_TimeslotISCP_Value_IncrDecrThres* asn1Test_UL_TimeslotISCP_Value_IncrDecrThres
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_MemoryPartitioningItem_process_Memory_Size           */
/*                                                            */
/**************************************************************/

typedef enum {
   hms800 = 0,
   hms1600 = 1,
   hms2400 = 2,
   hms3200 = 3,
   hms4000 = 4,
   hms4800 = 5,
   hms5600 = 6,
   hms6400 = 7,
   hms7200 = 8,
   hms8000 = 9,
   hms8800 = 10,
   hms9600 = 11,
   hms10400 = 12,
   hms11200 = 13,
   hms12000 = 14,
   hms12800 = 15,
   hms13600 = 16,
   hms14400 = 17,
   hms15200 = 18,
   hms16000 = 19,
   hms17600 = 20,
   hms19200 = 21,
   hms20800 = 22,
   hms22400 = 23,
   hms24000 = 24,
   hms25600 = 25,
   hms27200 = 26,
   hms28800 = 27,
   hms30400 = 28,
   hms32000 = 29,
   hms36000 = 30,
   hms40000 = 31,
   hms44000 = 32,
   hms48000 = 33,
   hms52000 = 34,
   hms56000 = 35,
   hms60000 = 36,
   hms64000 = 37,
   hms68000 = 38,
   hms72000 = 39,
   hms76000 = 40,
   hms80000 = 41,
   hms88000 = 42,
   hms96000 = 43,
   hms104000 = 44,
   hms112000 = 45,
   hms120000 = 46,
   hms128000 = 47,
   hms136000 = 48,
   hms144000 = 49,
   hms152000 = 50,
   hms160000 = 51,
   hms176000 = 52,
   hms192000 = 53,
   hms208000 = 54,
   hms224000 = 55,
   hms240000 = 56,
   hms256000 = 57,
   hms272000 = 58,
   hms288000 = 59,
   hms304000 = 60
} HARQ_MemoryPartitioningItem_process_Memory_Size_Root;

typedef OSUINT32 HARQ_MemoryPartitioningItem_process_Memory_Size;

EXTERN int asn1PE_HARQ_MemoryPartitioningItem_process_Memory_Size (ASN1CTXT* pctxt, HARQ_MemoryPartitioningItem_process_Memory_Size value);

EXTERN int asn1PD_HARQ_MemoryPartitioningItem_process_Memory_Size (ASN1CTXT* pctxt, HARQ_MemoryPartitioningItem_process_Memory_Size* pvalue);

EXTERN void asn1Print_HARQ_MemoryPartitioningItem_process_Memory_Size
   (const char* name, HARQ_MemoryPartitioningItem_process_Memory_Size* pvalue);

EXTERN HARQ_MemoryPartitioningItem_process_Memory_Size* asn1Test_HARQ_MemoryPartitioningItem_process_Memory_Size
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_e_alm                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_e_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_ExtItem_gps_e_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_e_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_e_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_e_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_e_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_e_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_e_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_e_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_e_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_toa_alm                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_toa_alm {
   OSUINT32  numbits;
   OSOCTET data[1];
} SAT_Info_Almanac_ExtItem_gps_toa_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_toa_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_toa_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_toa_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_toa_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_toa_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_toa_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_toa_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_toa_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_delta_I_alm                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_delta_I_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_ExtItem_gps_delta_I_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_delta_I_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_delta_I_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_delta_I_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_delta_I_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_delta_I_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_delta_I_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_delta_I_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_delta_I_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_omegadot_alm                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_omegadot_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_ExtItem_omegadot_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_omegadot_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_omegadot_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_omegadot_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_omegadot_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_omegadot_alm
   (const char* name, SAT_Info_Almanac_ExtItem_omegadot_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_omegadot_alm* asn1Test_SAT_Info_Almanac_ExtItem_omegadot_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_svhealth_alm                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_svhealth_alm {
   OSUINT32  numbits;
   OSOCTET data[1];
} SAT_Info_Almanac_ExtItem_svhealth_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_svhealth_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_svhealth_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_svhealth_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_svhealth_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_svhealth_alm
   (const char* name, SAT_Info_Almanac_ExtItem_svhealth_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_svhealth_alm* asn1Test_SAT_Info_Almanac_ExtItem_svhealth_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_omegazero_alm                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_omegazero_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_ExtItem_omegazero_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_omegazero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_omegazero_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_omegazero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_omegazero_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_omegazero_alm
   (const char* name, SAT_Info_Almanac_ExtItem_omegazero_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_omegazero_alm* asn1Test_SAT_Info_Almanac_ExtItem_omegazero_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_m_zero_alm                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_m_zero_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_ExtItem_m_zero_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_m_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_m_zero_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_m_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_m_zero_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_m_zero_alm
   (const char* name, SAT_Info_Almanac_ExtItem_m_zero_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_m_zero_alm* asn1Test_SAT_Info_Almanac_ExtItem_m_zero_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_omega_alm                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_omega_alm {
   OSUINT32  numbits;
   OSOCTET data[3];
} SAT_Info_Almanac_ExtItem_gps_omega_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_omega_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_omega_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_omega_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_omega_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_omega_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_omega_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_omega_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_omega_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_af_zero_alm                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_af_zero_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_ExtItem_gps_af_zero_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_af_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_af_zero_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_af_zero_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_af_zero_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_af_zero_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_af_zero_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_af_zero_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_af_zero_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem_gps_af_one_alm                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem_gps_af_one_alm {
   OSUINT32  numbits;
   OSOCTET data[2];
} SAT_Info_Almanac_ExtItem_gps_af_one_alm;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem_gps_af_one_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_af_one_alm* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem_gps_af_one_alm (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem_gps_af_one_alm* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem_gps_af_one_alm
   (const char* name, SAT_Info_Almanac_ExtItem_gps_af_one_alm* pvalue);

EXTERN SAT_Info_Almanac_ExtItem_gps_af_one_alm* asn1Test_SAT_Info_Almanac_ExtItem_gps_af_one_alm
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmission_Gap_Pattern_Sequence_Status_List_element     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Transmission_Gap_Pattern_Sequence_Status_List_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TGPSID tGPSID;
   TGPRC tGPRC;
   CFN tGCFN;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Transmission_Gap_Pattern_Sequence_Status_List_element;

EXTERN int asn1PE_Transmission_Gap_Pattern_Sequence_Status_List_element (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Status_List_element* pvalue);

EXTERN int asn1PD_Transmission_Gap_Pattern_Sequence_Status_List_element (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Status_List_element* pvalue);

EXTERN void asn1Print_Transmission_Gap_Pattern_Sequence_Status_List_element
   (const char* name, Transmission_Gap_Pattern_Sequence_Status_List_element* pvalue);

EXTERN Transmission_Gap_Pattern_Sequence_Status_List_element* asn1Test_Transmission_Gap_Pattern_Sequence_Status_List_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmission_Gap_Pattern_Sequence_Status_List             */
/*                                                            */
/**************************************************************/

/* List of Transmission_Gap_Pattern_Sequence_Status_List_element */
typedef Asn1RTDList Transmission_Gap_Pattern_Sequence_Status_List;

EXTERN int asn1PE_Transmission_Gap_Pattern_Sequence_Status_List (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Status_List* pvalue);

EXTERN int asn1PD_Transmission_Gap_Pattern_Sequence_Status_List (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Status_List* pvalue);

EXTERN void asn1Print_Transmission_Gap_Pattern_Sequence_Status_List
   (const char* name, Transmission_Gap_Pattern_Sequence_Status_List* pvalue);

EXTERN Transmission_Gap_Pattern_Sequence_Status_List* asn1Test_Transmission_Gap_Pattern_Sequence_Status_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Active_Pattern_Sequence_Information                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Active_Pattern_Sequence_Information {
   struct {
      unsigned transmission_Gap_Pattern_Sequence_StatusPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CFN cMConfigurationChangeCFN;
   Transmission_Gap_Pattern_Sequence_Status_List transmission_Gap_Pattern_Sequence_Status;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Active_Pattern_Sequence_Information;

EXTERN int asn1PE_Active_Pattern_Sequence_Information (ASN1CTXT* pctxt, Active_Pattern_Sequence_Information* pvalue);

EXTERN int asn1PD_Active_Pattern_Sequence_Information (ASN1CTXT* pctxt, Active_Pattern_Sequence_Information* pvalue);

EXTERN void asn1Print_Active_Pattern_Sequence_Information
   (const char* name, Active_Pattern_Sequence_Information* pvalue);

EXTERN Active_Pattern_Sequence_Information* asn1Test_Active_Pattern_Sequence_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Angle_Of_Arrival_Value_LCR                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Angle_Of_Arrival_Value_LCR {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AOA_LCR aOA_LCR;
   AOA_LCR_Accuracy_Class aOA_LCR_Accuracy_Class;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Angle_Of_Arrival_Value_LCR;

EXTERN int asn1PE_Angle_Of_Arrival_Value_LCR (ASN1CTXT* pctxt, Angle_Of_Arrival_Value_LCR* pvalue);

EXTERN int asn1PD_Angle_Of_Arrival_Value_LCR (ASN1CTXT* pctxt, Angle_Of_Arrival_Value_LCR* pvalue);

EXTERN void asn1Print_Angle_Of_Arrival_Value_LCR
   (const char* name, Angle_Of_Arrival_Value_LCR* pvalue);

EXTERN Angle_Of_Arrival_Value_LCR* asn1Test_Angle_Of_Arrival_Value_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Best_Cell_Portions_Item                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Best_Cell_Portions_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellPortionID cellPortionID;
   SIR_Value sIRValue;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Best_Cell_Portions_Item;

EXTERN int asn1PE_Best_Cell_Portions_Item (ASN1CTXT* pctxt, Best_Cell_Portions_Item* pvalue);

EXTERN int asn1PD_Best_Cell_Portions_Item (ASN1CTXT* pctxt, Best_Cell_Portions_Item* pvalue);

EXTERN void asn1Print_Best_Cell_Portions_Item
   (const char* name, Best_Cell_Portions_Item* pvalue);

EXTERN Best_Cell_Portions_Item* asn1Test_Best_Cell_Portions_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Best_Cell_Portions_Value                                  */
/*                                                            */
/**************************************************************/

/* List of Best_Cell_Portions_Item */
typedef Asn1RTDList Best_Cell_Portions_Value;

EXTERN int asn1PE_Best_Cell_Portions_Value (ASN1CTXT* pctxt, Best_Cell_Portions_Value* pvalue);

EXTERN int asn1PD_Best_Cell_Portions_Value (ASN1CTXT* pctxt, Best_Cell_Portions_Value* pvalue);

EXTERN void asn1Print_Best_Cell_Portions_Value
   (const char* name, Best_Cell_Portions_Value* pvalue);

EXTERN Best_Cell_Portions_Value* asn1Test_Best_Cell_Portions_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CommonMeasurementAccuracy                                 */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_CommonMeasurementAccuracy_tUTRANGPSMeasurementAccuracyClass 1
#define T_CommonMeasurementAccuracy_extElem1 2

typedef struct EXTERN CommonMeasurementAccuracy {
   int t;
   union {
      /* t = 1 */
      TUTRANGPSAccuracyClass tUTRANGPSMeasurementAccuracyClass;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} CommonMeasurementAccuracy;

EXTERN int asn1PE_CommonMeasurementAccuracy (ASN1CTXT* pctxt, CommonMeasurementAccuracy* pvalue);

EXTERN int asn1PD_CommonMeasurementAccuracy (ASN1CTXT* pctxt, CommonMeasurementAccuracy* pvalue);

EXTERN void asn1Print_CommonMeasurementAccuracy
   (const char* name, CommonMeasurementAccuracy* pvalue);

EXTERN CommonMeasurementAccuracy* asn1Test_CommonMeasurementAccuracy
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Common_PhysicalChannel_Status_Information                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Common_PhysicalChannel_Status_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CommonPhysicalChannelID commonPhysicalChannelID;
   ResourceOperationalState resourceOperationalState;
   AvailabilityStatus availabilityStatus;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Common_PhysicalChannel_Status_Information;

EXTERN int asn1PE_Common_PhysicalChannel_Status_Information (ASN1CTXT* pctxt, Common_PhysicalChannel_Status_Information* pvalue);

EXTERN int asn1PD_Common_PhysicalChannel_Status_Information (ASN1CTXT* pctxt, Common_PhysicalChannel_Status_Information* pvalue);

EXTERN void asn1Print_Common_PhysicalChannel_Status_Information
   (const char* name, Common_PhysicalChannel_Status_Information* pvalue);

EXTERN Common_PhysicalChannel_Status_Information* asn1Test_Common_PhysicalChannel_Status_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Common_TransportChannel_Status_Information                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Common_TransportChannel_Status_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CommonTransportChannelID commonTransportChannelID;
   ResourceOperationalState resourceOperationalState;
   AvailabilityStatus availabilityStatus;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Common_TransportChannel_Status_Information;

EXTERN int asn1PE_Common_TransportChannel_Status_Information (ASN1CTXT* pctxt, Common_TransportChannel_Status_Information* pvalue);

EXTERN int asn1PD_Common_TransportChannel_Status_Information (ASN1CTXT* pctxt, Common_TransportChannel_Status_Information* pvalue);

EXTERN void asn1Print_Common_TransportChannel_Status_Information
   (const char* name, Common_TransportChannel_Status_Information* pvalue);

EXTERN Common_TransportChannel_Status_Information* asn1Test_Common_TransportChannel_Status_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CriticalityDiagnostics_IE_List_element {
   struct {
      unsigned repetitionNumberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Criticality iECriticality;
   ProtocolIE_ID iE_ID;
   RepetitionNumber0 repetitionNumber;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} CriticalityDiagnostics_IE_List_element;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List_element (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List_element (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List_element
   (const char* name, CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN CriticalityDiagnostics_IE_List_element* asn1Test_CriticalityDiagnostics_IE_List_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List                            */
/*                                                            */
/**************************************************************/

/* List of CriticalityDiagnostics_IE_List_element */
typedef Asn1RTDList CriticalityDiagnostics_IE_List;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List (ASN1CTXT* pctxt, CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List
   (const char* name, CriticalityDiagnostics_IE_List* pvalue);

EXTERN CriticalityDiagnostics_IE_List* asn1Test_CriticalityDiagnostics_IE_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN CriticalityDiagnostics {
   struct {
      unsigned procedureIDPresent : 1;
      unsigned triggeringMessagePresent : 1;
      unsigned procedureCriticalityPresent : 1;
      unsigned transactionIDPresent : 1;
      unsigned iEsCriticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ProcedureID procedureID;
   TriggeringMessage triggeringMessage;
   Criticality procedureCriticality;
   TransactionID transactionID;
   CriticalityDiagnostics_IE_List iEsCriticalityDiagnostics;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} CriticalityDiagnostics;

EXTERN int asn1PE_CriticalityDiagnostics (ASN1CTXT* pctxt, CriticalityDiagnostics* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics (ASN1CTXT* pctxt, CriticalityDiagnostics* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics
   (const char* name, CriticalityDiagnostics* pvalue);

EXTERN CriticalityDiagnostics* asn1Test_CriticalityDiagnostics
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Data_Description_Indicator_Item                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Data_Description_Indicator_Item {
   struct {
      unsigned mACesGuaranteedBitRatePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_DDI_Value e_DCH_DDI_Value;
   E_DCH_MACdFlow_ID associated_E_DCH_MACdFlow_ID;
   MACdPDU_Size macdPDU_Size;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   MACesGuaranteedBitRate mACesGuaranteedBitRate;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Data_Description_Indicator_Item;

EXTERN int asn1PE_Data_Description_Indicator_Item (ASN1CTXT* pctxt, Data_Description_Indicator_Item* pvalue);

EXTERN int asn1PD_Data_Description_Indicator_Item (ASN1CTXT* pctxt, Data_Description_Indicator_Item* pvalue);

EXTERN void asn1Print_Data_Description_Indicator_Item
   (const char* name, Data_Description_Indicator_Item* pvalue);

EXTERN Data_Description_Indicator_Item* asn1Test_Data_Description_Indicator_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Data_Description_Indicator                                */
/*                                                            */
/**************************************************************/

/* List of Data_Description_Indicator_Item */
typedef Asn1RTDList Data_Description_Indicator;

EXTERN int asn1PE_Data_Description_Indicator (ASN1CTXT* pctxt, Data_Description_Indicator* pvalue);

EXTERN int asn1PD_Data_Description_Indicator (ASN1CTXT* pctxt, Data_Description_Indicator* pvalue);

EXTERN void asn1Print_Data_Description_Indicator
   (const char* name, Data_Description_Indicator* pvalue);

EXTERN Data_Description_Indicator* asn1Test_Data_Description_Indicator
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_Specific_FDD_Item                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_Specific_FDD_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_ID;
   TransportFormatSet ul_TransportFormatSet;
   TransportFormatSet dl_TransportFormatSet;
   AllocationRetentionPriority allocationRetentionPriority;
   FrameHandlingPriority frameHandlingPriority;
   QE_Selector qE_Selector;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_Specific_FDD_Item;

EXTERN int asn1PE_DCH_Specific_FDD_Item (ASN1CTXT* pctxt, DCH_Specific_FDD_Item* pvalue);

EXTERN int asn1PD_DCH_Specific_FDD_Item (ASN1CTXT* pctxt, DCH_Specific_FDD_Item* pvalue);

EXTERN void asn1Print_DCH_Specific_FDD_Item
   (const char* name, DCH_Specific_FDD_Item* pvalue);

EXTERN DCH_Specific_FDD_Item* asn1Test_DCH_Specific_FDD_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_Specific_FDD_InformationList                          */
/*                                                            */
/**************************************************************/

/* List of DCH_Specific_FDD_Item */
typedef Asn1RTDList DCH_Specific_FDD_InformationList;

EXTERN int asn1PE_DCH_Specific_FDD_InformationList (ASN1CTXT* pctxt, DCH_Specific_FDD_InformationList* pvalue);

EXTERN int asn1PD_DCH_Specific_FDD_InformationList (ASN1CTXT* pctxt, DCH_Specific_FDD_InformationList* pvalue);

EXTERN void asn1Print_DCH_Specific_FDD_InformationList
   (const char* name, DCH_Specific_FDD_InformationList* pvalue);

EXTERN DCH_Specific_FDD_InformationList* asn1Test_DCH_Specific_FDD_InformationList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_FDD_InformationItem                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_FDD_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PayloadCRC_PresenceIndicator payloadCRC_PresenceIndicator;
   UL_FP_Mode ul_FP_Mode;
   ToAWS toAWS;
   ToAWE toAWE;
   DCH_Specific_FDD_InformationList dCH_SpecificInformationList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_FDD_InformationItem;

EXTERN int asn1PE_DCH_FDD_InformationItem (ASN1CTXT* pctxt, DCH_FDD_InformationItem* pvalue);

EXTERN int asn1PD_DCH_FDD_InformationItem (ASN1CTXT* pctxt, DCH_FDD_InformationItem* pvalue);

EXTERN void asn1Print_DCH_FDD_InformationItem
   (const char* name, DCH_FDD_InformationItem* pvalue);

EXTERN DCH_FDD_InformationItem* asn1Test_DCH_FDD_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_FDD_Information                                       */
/*                                                            */
/**************************************************************/

/* List of DCH_FDD_InformationItem */
typedef Asn1RTDList DCH_FDD_Information;

EXTERN int asn1PE_DCH_FDD_Information (ASN1CTXT* pctxt, DCH_FDD_Information* pvalue);

EXTERN int asn1PD_DCH_FDD_Information (ASN1CTXT* pctxt, DCH_FDD_Information* pvalue);

EXTERN void asn1Print_DCH_FDD_Information
   (const char* name, DCH_FDD_Information* pvalue);

EXTERN DCH_FDD_Information* asn1Test_DCH_FDD_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_Specific_TDD_Item                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_Specific_TDD_Item {
   struct {
      unsigned qE_SelectorPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_ID;
   CCTrCH_ID ul_CCTrCH_ID;
   CCTrCH_ID dl_CCTrCH_ID;
   TransportFormatSet ul_TransportFormatSet;
   TransportFormatSet dl_TransportFormatSet;
   AllocationRetentionPriority allocationRetentionPriority;
   FrameHandlingPriority frameHandlingPriority;
   QE_Selector qE_Selector;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_Specific_TDD_Item;

EXTERN int asn1PE_DCH_Specific_TDD_Item (ASN1CTXT* pctxt, DCH_Specific_TDD_Item* pvalue);

EXTERN int asn1PD_DCH_Specific_TDD_Item (ASN1CTXT* pctxt, DCH_Specific_TDD_Item* pvalue);

EXTERN void asn1Print_DCH_Specific_TDD_Item
   (const char* name, DCH_Specific_TDD_Item* pvalue);

EXTERN DCH_Specific_TDD_Item* asn1Test_DCH_Specific_TDD_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_Specific_TDD_InformationList                          */
/*                                                            */
/**************************************************************/

/* List of DCH_Specific_TDD_Item */
typedef Asn1RTDList DCH_Specific_TDD_InformationList;

EXTERN int asn1PE_DCH_Specific_TDD_InformationList (ASN1CTXT* pctxt, DCH_Specific_TDD_InformationList* pvalue);

EXTERN int asn1PD_DCH_Specific_TDD_InformationList (ASN1CTXT* pctxt, DCH_Specific_TDD_InformationList* pvalue);

EXTERN void asn1Print_DCH_Specific_TDD_InformationList
   (const char* name, DCH_Specific_TDD_InformationList* pvalue);

EXTERN DCH_Specific_TDD_InformationList* asn1Test_DCH_Specific_TDD_InformationList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_TDD_InformationItem                                   */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_TDD_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PayloadCRC_PresenceIndicator payloadCRC_PresenceIndicator;
   UL_FP_Mode ul_FP_Mode;
   ToAWS toAWS;
   ToAWE toAWE;
   DCH_Specific_TDD_InformationList dCH_SpecificInformationList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_TDD_InformationItem;

EXTERN int asn1PE_DCH_TDD_InformationItem (ASN1CTXT* pctxt, DCH_TDD_InformationItem* pvalue);

EXTERN int asn1PD_DCH_TDD_InformationItem (ASN1CTXT* pctxt, DCH_TDD_InformationItem* pvalue);

EXTERN void asn1Print_DCH_TDD_InformationItem
   (const char* name, DCH_TDD_InformationItem* pvalue);

EXTERN DCH_TDD_InformationItem* asn1Test_DCH_TDD_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_TDD_Information                                       */
/*                                                            */
/**************************************************************/

/* List of DCH_TDD_InformationItem */
typedef Asn1RTDList DCH_TDD_Information;

EXTERN int asn1PE_DCH_TDD_Information (ASN1CTXT* pctxt, DCH_TDD_Information* pvalue);

EXTERN int asn1PD_DCH_TDD_Information (ASN1CTXT* pctxt, DCH_TDD_Information* pvalue);

EXTERN void asn1Print_DCH_TDD_Information
   (const char* name, DCH_TDD_Information* pvalue);

EXTERN DCH_TDD_Information* asn1Test_DCH_TDD_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ModifySpecificItem_FDD                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_ModifySpecificItem_FDD {
   struct {
      unsigned ul_TransportFormatSetPresent : 1;
      unsigned dl_TransportFormatSetPresent : 1;
      unsigned allocationRetentionPriorityPresent : 1;
      unsigned frameHandlingPriorityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_ID;
   TransportFormatSet ul_TransportFormatSet;
   TransportFormatSet dl_TransportFormatSet;
   AllocationRetentionPriority allocationRetentionPriority;
   FrameHandlingPriority frameHandlingPriority;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_ModifySpecificItem_FDD;

EXTERN int asn1PE_DCH_ModifySpecificItem_FDD (ASN1CTXT* pctxt, DCH_ModifySpecificItem_FDD* pvalue);

EXTERN int asn1PD_DCH_ModifySpecificItem_FDD (ASN1CTXT* pctxt, DCH_ModifySpecificItem_FDD* pvalue);

EXTERN void asn1Print_DCH_ModifySpecificItem_FDD
   (const char* name, DCH_ModifySpecificItem_FDD* pvalue);

EXTERN DCH_ModifySpecificItem_FDD* asn1Test_DCH_ModifySpecificItem_FDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ModifySpecificInformation_FDD                         */
/*                                                            */
/**************************************************************/

/* List of DCH_ModifySpecificItem_FDD */
typedef Asn1RTDList DCH_ModifySpecificInformation_FDD;

EXTERN int asn1PE_DCH_ModifySpecificInformation_FDD (ASN1CTXT* pctxt, DCH_ModifySpecificInformation_FDD* pvalue);

EXTERN int asn1PD_DCH_ModifySpecificInformation_FDD (ASN1CTXT* pctxt, DCH_ModifySpecificInformation_FDD* pvalue);

EXTERN void asn1Print_DCH_ModifySpecificInformation_FDD
   (const char* name, DCH_ModifySpecificInformation_FDD* pvalue);

EXTERN DCH_ModifySpecificInformation_FDD* asn1Test_DCH_ModifySpecificInformation_FDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_DCHs_to_ModifyItem                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN FDD_DCHs_to_ModifyItem {
   struct {
      unsigned ul_FP_ModePresent : 1;
      unsigned toAWSPresent : 1;
      unsigned toAWEPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UL_FP_Mode ul_FP_Mode;
   ToAWS toAWS;
   ToAWE toAWE;
   TransportBearerRequestIndicator transportBearerRequestIndicator;
   DCH_ModifySpecificInformation_FDD dCH_SpecificInformationList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} FDD_DCHs_to_ModifyItem;

EXTERN int asn1PE_FDD_DCHs_to_ModifyItem (ASN1CTXT* pctxt, FDD_DCHs_to_ModifyItem* pvalue);

EXTERN int asn1PD_FDD_DCHs_to_ModifyItem (ASN1CTXT* pctxt, FDD_DCHs_to_ModifyItem* pvalue);

EXTERN void asn1Print_FDD_DCHs_to_ModifyItem
   (const char* name, FDD_DCHs_to_ModifyItem* pvalue);

EXTERN FDD_DCHs_to_ModifyItem* asn1Test_FDD_DCHs_to_ModifyItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FDD_DCHs_to_Modify                                        */
/*                                                            */
/**************************************************************/

/* List of FDD_DCHs_to_ModifyItem */
typedef Asn1RTDList FDD_DCHs_to_Modify;

EXTERN int asn1PE_FDD_DCHs_to_Modify (ASN1CTXT* pctxt, FDD_DCHs_to_Modify* pvalue);

EXTERN int asn1PD_FDD_DCHs_to_Modify (ASN1CTXT* pctxt, FDD_DCHs_to_Modify* pvalue);

EXTERN void asn1Print_FDD_DCHs_to_Modify
   (const char* name, FDD_DCHs_to_Modify* pvalue);

EXTERN FDD_DCHs_to_Modify* asn1Test_FDD_DCHs_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ModifySpecificItem_TDD                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_ModifySpecificItem_TDD {
   struct {
      unsigned ul_CCTrCH_IDPresent : 1;
      unsigned dl_CCTrCH_IDPresent : 1;
      unsigned ul_TransportFormatSetPresent : 1;
      unsigned dl_TransportFormatSetPresent : 1;
      unsigned allocationRetentionPriorityPresent : 1;
      unsigned frameHandlingPriorityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_ID;
   CCTrCH_ID ul_CCTrCH_ID;
   CCTrCH_ID dl_CCTrCH_ID;
   TransportFormatSet ul_TransportFormatSet;
   TransportFormatSet dl_TransportFormatSet;
   AllocationRetentionPriority allocationRetentionPriority;
   FrameHandlingPriority frameHandlingPriority;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_ModifySpecificItem_TDD;

EXTERN int asn1PE_DCH_ModifySpecificItem_TDD (ASN1CTXT* pctxt, DCH_ModifySpecificItem_TDD* pvalue);

EXTERN int asn1PD_DCH_ModifySpecificItem_TDD (ASN1CTXT* pctxt, DCH_ModifySpecificItem_TDD* pvalue);

EXTERN void asn1Print_DCH_ModifySpecificItem_TDD
   (const char* name, DCH_ModifySpecificItem_TDD* pvalue);

EXTERN DCH_ModifySpecificItem_TDD* asn1Test_DCH_ModifySpecificItem_TDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ModifySpecificInformation_TDD                         */
/*                                                            */
/**************************************************************/

/* List of DCH_ModifySpecificItem_TDD */
typedef Asn1RTDList DCH_ModifySpecificInformation_TDD;

EXTERN int asn1PE_DCH_ModifySpecificInformation_TDD (ASN1CTXT* pctxt, DCH_ModifySpecificInformation_TDD* pvalue);

EXTERN int asn1PD_DCH_ModifySpecificInformation_TDD (ASN1CTXT* pctxt, DCH_ModifySpecificInformation_TDD* pvalue);

EXTERN void asn1Print_DCH_ModifySpecificInformation_TDD
   (const char* name, DCH_ModifySpecificInformation_TDD* pvalue);

EXTERN DCH_ModifySpecificInformation_TDD* asn1Test_DCH_ModifySpecificInformation_TDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DCH_ModifyItem_TDD                                        */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DCH_ModifyItem_TDD {
   struct {
      unsigned ul_FP_ModePresent : 1;
      unsigned toAWSPresent : 1;
      unsigned toAWEPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UL_FP_Mode ul_FP_Mode;
   ToAWS toAWS;
   ToAWE toAWE;
   TransportBearerRequestIndicator transportBearerRequestIndicator;
   DCH_ModifySpecificInformation_TDD dCH_SpecificInformationList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DCH_ModifyItem_TDD;

EXTERN int asn1PE_DCH_ModifyItem_TDD (ASN1CTXT* pctxt, DCH_ModifyItem_TDD* pvalue);

EXTERN int asn1PD_DCH_ModifyItem_TDD (ASN1CTXT* pctxt, DCH_ModifyItem_TDD* pvalue);

EXTERN void asn1Print_DCH_ModifyItem_TDD
   (const char* name, DCH_ModifyItem_TDD* pvalue);

EXTERN DCH_ModifyItem_TDD* asn1Test_DCH_ModifyItem_TDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TDD_DCHs_to_Modify                                        */
/*                                                            */
/**************************************************************/

/* List of DCH_ModifyItem_TDD */
typedef Asn1RTDList TDD_DCHs_to_Modify;

EXTERN int asn1PE_TDD_DCHs_to_Modify (ASN1CTXT* pctxt, TDD_DCHs_to_Modify* pvalue);

EXTERN int asn1PD_TDD_DCHs_to_Modify (ASN1CTXT* pctxt, TDD_DCHs_to_Modify* pvalue);

EXTERN void asn1Print_TDD_DCHs_to_Modify
   (const char* name, TDD_DCHs_to_Modify* pvalue);

EXTERN TDD_DCHs_to_Modify* asn1Test_TDD_DCHs_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DelayedActivation                                         */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_DelayedActivation_cfn         1
#define T_DelayedActivation_separate_indication 2

typedef struct EXTERN DelayedActivation {
   int t;
   union {
      /* t = 1 */
      CFN cfn;
      /* t = 2 */
   } u;
} DelayedActivation;

EXTERN int asn1PE_DelayedActivation (ASN1CTXT* pctxt, DelayedActivation* pvalue);

EXTERN int asn1PD_DelayedActivation (ASN1CTXT* pctxt, DelayedActivation* pvalue);

EXTERN void asn1Print_DelayedActivation
   (const char* name, DelayedActivation* pvalue);

EXTERN DelayedActivation* asn1Test_DelayedActivation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DGPSThresholds                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DGPSThresholds {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   PRCDeviation prcdeviation;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} DGPSThresholds;

EXTERN int asn1PE_DGPSThresholds (ASN1CTXT* pctxt, DGPSThresholds* pvalue);

EXTERN int asn1PD_DGPSThresholds (ASN1CTXT* pctxt, DGPSThresholds* pvalue);

EXTERN void asn1Print_DGPSThresholds
   (const char* name, DGPSThresholds* pvalue);

EXTERN DGPSThresholds* asn1Test_DGPSThresholds
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_ReferencePowerInformationItem                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DL_ReferencePowerInformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RL_ID rL_ID;
   DL_Power dl_Reference_Power;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DL_ReferencePowerInformationItem;

EXTERN int asn1PE_DL_ReferencePowerInformationItem (ASN1CTXT* pctxt, DL_ReferencePowerInformationItem* pvalue);

EXTERN int asn1PD_DL_ReferencePowerInformationItem (ASN1CTXT* pctxt, DL_ReferencePowerInformationItem* pvalue);

EXTERN void asn1Print_DL_ReferencePowerInformationItem
   (const char* name, DL_ReferencePowerInformationItem* pvalue);

EXTERN DL_ReferencePowerInformationItem* asn1Test_DL_ReferencePowerInformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_ReferencePowerInformationList                          */
/*                                                            */
/**************************************************************/

/* List of DL_ReferencePowerInformationItem */
typedef Asn1RTDList DL_ReferencePowerInformationList;

EXTERN int asn1PE_DL_ReferencePowerInformationList (ASN1CTXT* pctxt, DL_ReferencePowerInformationList* pvalue);

EXTERN int asn1PD_DL_ReferencePowerInformationList (ASN1CTXT* pctxt, DL_ReferencePowerInformationList* pvalue);

EXTERN void asn1Print_DL_ReferencePowerInformationList
   (const char* name, DL_ReferencePowerInformationList* pvalue);

EXTERN DL_ReferencePowerInformationList* asn1Test_DL_ReferencePowerInformationList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_PowerBalancing_Information                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DL_PowerBalancing_Information {
   struct {
      unsigned dLReferencePowerPresent : 1;
      unsigned dLReferencePowerList_DL_PC_RqstPresent : 1;
      unsigned maxAdjustmentStepPresent : 1;
      unsigned adjustmentPeriodPresent : 1;
      unsigned adjustmentRatioPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PowerAdjustmentType powerAdjustmentType;
   DL_Power dLReferencePower;
   DL_ReferencePowerInformationList dLReferencePowerList_DL_PC_Rqst;
   MaxAdjustmentStep maxAdjustmentStep;
   AdjustmentPeriod adjustmentPeriod;
   ScaledAdjustmentRatio adjustmentRatio;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DL_PowerBalancing_Information;

EXTERN int asn1PE_DL_PowerBalancing_Information (ASN1CTXT* pctxt, DL_PowerBalancing_Information* pvalue);

EXTERN int asn1PD_DL_PowerBalancing_Information (ASN1CTXT* pctxt, DL_PowerBalancing_Information* pvalue);

EXTERN void asn1Print_DL_PowerBalancing_Information
   (const char* name, DL_PowerBalancing_Information* pvalue);

EXTERN DL_PowerBalancing_Information* asn1Test_DL_PowerBalancing_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotISCPInfoItemLCR                                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DL_TimeslotISCPInfoItemLCR {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlotLCR timeSlotLCR;
   DL_TimeslotISCP dL_TimeslotISCP;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DL_TimeslotISCPInfoItemLCR;

EXTERN int asn1PE_DL_TimeslotISCPInfoItemLCR (ASN1CTXT* pctxt, DL_TimeslotISCPInfoItemLCR* pvalue);

EXTERN int asn1PD_DL_TimeslotISCPInfoItemLCR (ASN1CTXT* pctxt, DL_TimeslotISCPInfoItemLCR* pvalue);

EXTERN void asn1Print_DL_TimeslotISCPInfoItemLCR
   (const char* name, DL_TimeslotISCPInfoItemLCR* pvalue);

EXTERN DL_TimeslotISCPInfoItemLCR* asn1Test_DL_TimeslotISCPInfoItemLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DL_TimeslotISCPInfoLCR                                    */
/*                                                            */
/**************************************************************/

/* List of DL_TimeslotISCPInfoItemLCR */
typedef Asn1RTDList DL_TimeslotISCPInfoLCR;

EXTERN int asn1PE_DL_TimeslotISCPInfoLCR (ASN1CTXT* pctxt, DL_TimeslotISCPInfoLCR* pvalue);

EXTERN int asn1PD_DL_TimeslotISCPInfoLCR (ASN1CTXT* pctxt, DL_TimeslotISCPInfoLCR* pvalue);

EXTERN void asn1Print_DL_TimeslotISCPInfoLCR
   (const char* name, DL_TimeslotISCPInfoLCR* pvalue);

EXTERN DL_TimeslotISCPInfoLCR* asn1Test_DL_TimeslotISCPInfoLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSCH_InformationResponseItem                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DSCH_InformationResponseItem {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DSCH_ID dSCH_ID;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DSCH_InformationResponseItem;

EXTERN int asn1PE_DSCH_InformationResponseItem (ASN1CTXT* pctxt, DSCH_InformationResponseItem* pvalue);

EXTERN int asn1PD_DSCH_InformationResponseItem (ASN1CTXT* pctxt, DSCH_InformationResponseItem* pvalue);

EXTERN void asn1Print_DSCH_InformationResponseItem
   (const char* name, DSCH_InformationResponseItem* pvalue);

EXTERN DSCH_InformationResponseItem* asn1Test_DSCH_InformationResponseItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSCH_InformationResponse                                  */
/*                                                            */
/**************************************************************/

/* List of DSCH_InformationResponseItem */
typedef Asn1RTDList DSCH_InformationResponse;

EXTERN int asn1PE_DSCH_InformationResponse (ASN1CTXT* pctxt, DSCH_InformationResponse* pvalue);

EXTERN int asn1PD_DSCH_InformationResponse (ASN1CTXT* pctxt, DSCH_InformationResponse* pvalue);

EXTERN void asn1Print_DSCH_InformationResponse
   (const char* name, DSCH_InformationResponse* pvalue);

EXTERN DSCH_InformationResponse* asn1Test_DSCH_InformationResponse
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSCH_TDD_InformationItem                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN DSCH_TDD_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DSCH_ID dSCH_ID;
   CCTrCH_ID cCTrCH_ID;
   TransportFormatSet transportFormatSet;
   AllocationRetentionPriority allocationRetentionPriority;
   FrameHandlingPriority frameHandlingPriority;
   ToAWS toAWS;
   ToAWE toAWE;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} DSCH_TDD_InformationItem;

EXTERN int asn1PE_DSCH_TDD_InformationItem (ASN1CTXT* pctxt, DSCH_TDD_InformationItem* pvalue);

EXTERN int asn1PD_DSCH_TDD_InformationItem (ASN1CTXT* pctxt, DSCH_TDD_InformationItem* pvalue);

EXTERN void asn1Print_DSCH_TDD_InformationItem
   (const char* name, DSCH_TDD_InformationItem* pvalue);

EXTERN DSCH_TDD_InformationItem* asn1Test_DSCH_TDD_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSCH_TDD_Information                                      */
/*                                                            */
/**************************************************************/

/* List of DSCH_TDD_InformationItem */
typedef Asn1RTDList DSCH_TDD_Information;

EXTERN int asn1PE_DSCH_TDD_Information (ASN1CTXT* pctxt, DSCH_TDD_Information* pvalue);

EXTERN int asn1PD_DSCH_TDD_Information (ASN1CTXT* pctxt, DSCH_TDD_Information* pvalue);

EXTERN void asn1Print_DSCH_TDD_Information
   (const char* name, DSCH_TDD_Information* pvalue);

EXTERN DSCH_TDD_Information* asn1Test_DSCH_TDD_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_AGCH_FDD_Code_List                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_AGCH_FDD_Code_List {
   OSUINT32 n;
   E_AGCH_FDD_Code_Information_Item elem[1];
} E_AGCH_FDD_Code_List;

EXTERN int asn1PE_E_AGCH_FDD_Code_List (ASN1CTXT* pctxt, E_AGCH_FDD_Code_List* pvalue);

EXTERN int asn1PD_E_AGCH_FDD_Code_List (ASN1CTXT* pctxt, E_AGCH_FDD_Code_List* pvalue);

EXTERN void asn1Print_E_AGCH_FDD_Code_List
   (const char* name, E_AGCH_FDD_Code_List* pvalue);

EXTERN E_AGCH_FDD_Code_List* asn1Test_E_AGCH_FDD_Code_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_AGCH_FDD_Code_Information                               */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_E_AGCH_FDD_Code_Information_replace 1
#define T_E_AGCH_FDD_Code_Information_remove_ 2
#define T_E_AGCH_FDD_Code_Information_extElem1 3

typedef struct EXTERN E_AGCH_FDD_Code_Information {
   int t;
   union {
      /* t = 1 */
      E_AGCH_FDD_Code_List *replace;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} E_AGCH_FDD_Code_Information;

EXTERN int asn1PE_E_AGCH_FDD_Code_Information (ASN1CTXT* pctxt, E_AGCH_FDD_Code_Information* pvalue);

EXTERN int asn1PD_E_AGCH_FDD_Code_Information (ASN1CTXT* pctxt, E_AGCH_FDD_Code_Information* pvalue);

EXTERN void asn1Print_E_AGCH_FDD_Code_Information
   (const char* name, E_AGCH_FDD_Code_Information* pvalue);

EXTERN E_AGCH_FDD_Code_Information* asn1Test_E_AGCH_FDD_Code_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_FDD_DL_Control_Channel_Information                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_FDD_DL_Control_Channel_Information {
   struct {
      unsigned e_AGCH_And_E_RGCH_E_HICH_FDD_Scrambling_CodePresent : 1;
      unsigned e_AGCH_Channelisation_CodePresent : 1;
      unsigned primary_e_RNTIPresent : 1;
      unsigned secondary_e_RNTIPresent : 1;
      unsigned e_RGCH_Signature_SequencePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DL_ScramblingCode e_AGCH_And_E_RGCH_E_HICH_FDD_Scrambling_Code;
   FDD_DL_ChannelisationCodeNumber e_AGCH_Channelisation_Code;
   E_RNTI primary_e_RNTI;
   E_RNTI secondary_e_RNTI;
   FDD_DL_ChannelisationCodeNumber e_RGCH_E_HICH_Channelisation_Code;
   E_RGCH_Signature_Sequence e_RGCH_Signature_Sequence;
   E_HICH_Signature_Sequence e_HICH_Signature_Sequence;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_FDD_DL_Control_Channel_Information;

EXTERN int asn1PE_E_DCH_FDD_DL_Control_Channel_Information (ASN1CTXT* pctxt, E_DCH_FDD_DL_Control_Channel_Information* pvalue);

EXTERN int asn1PD_E_DCH_FDD_DL_Control_Channel_Information (ASN1CTXT* pctxt, E_DCH_FDD_DL_Control_Channel_Information* pvalue);

EXTERN void asn1Print_E_DCH_FDD_DL_Control_Channel_Information
   (const char* name, E_DCH_FDD_DL_Control_Channel_Information* pvalue);

EXTERN E_DCH_FDD_DL_Control_Channel_Information* asn1Test_E_DCH_FDD_DL_Control_Channel_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TnlQos                                                    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_TnlQos_dsField                1
#define T_TnlQos_genericTrafficCategory 2
#define T_TnlQos_extElem1               3

typedef struct EXTERN TnlQos {
   int t;
   union {
      /* t = 1 */
      DsField *dsField;
      /* t = 2 */
      GenericTrafficCategory *genericTrafficCategory;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} TnlQos;

EXTERN int asn1PE_TnlQos (ASN1CTXT* pctxt, TnlQos* pvalue);

EXTERN int asn1PD_TnlQos (ASN1CTXT* pctxt, TnlQos* pvalue);

EXTERN void asn1Print_TnlQos
   (const char* name, TnlQos* pvalue);

EXTERN TnlQos* asn1Test_TnlQos
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_Non_Scheduled_Transmission_Grant_Items              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_Non_Scheduled_Transmission_Grant_Items {
   struct {
      unsigned hARQ_Process_Allocation_2msPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Max_Bits_MACe_PDU_non_scheduled maxBits_MACe_PDU_non_scheduled;
   HARQ_Process_Allocation_2ms_EDCH hARQ_Process_Allocation_2ms;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_Non_Scheduled_Transmission_Grant_Items;

EXTERN int asn1PE_E_DCH_Non_Scheduled_Transmission_Grant_Items (ASN1CTXT* pctxt, E_DCH_Non_Scheduled_Transmission_Grant_Items* pvalue);

EXTERN int asn1PD_E_DCH_Non_Scheduled_Transmission_Grant_Items (ASN1CTXT* pctxt, E_DCH_Non_Scheduled_Transmission_Grant_Items* pvalue);

EXTERN void asn1Print_E_DCH_Non_Scheduled_Transmission_Grant_Items
   (const char* name, E_DCH_Non_Scheduled_Transmission_Grant_Items* pvalue);

EXTERN E_DCH_Non_Scheduled_Transmission_Grant_Items* asn1Test_E_DCH_Non_Scheduled_Transmission_Grant_Items
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_Grant_Type_Information                              */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_E_DCH_Grant_Type_Information_e_DCH_Non_Scheduled_Transmission_Grant 1
#define T_E_DCH_Grant_Type_Information_e_DCH_Scheduled_Transmission_Grant 2
#define T_E_DCH_Grant_Type_Information_extElem1 3

typedef struct EXTERN E_DCH_Grant_Type_Information {
   int t;
   union {
      /* t = 1 */
      E_DCH_Non_Scheduled_Transmission_Grant_Items *e_DCH_Non_Scheduled_Transmission_Grant;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} E_DCH_Grant_Type_Information;

EXTERN int asn1PE_E_DCH_Grant_Type_Information (ASN1CTXT* pctxt, E_DCH_Grant_Type_Information* pvalue);

EXTERN int asn1PD_E_DCH_Grant_Type_Information (ASN1CTXT* pctxt, E_DCH_Grant_Type_Information* pvalue);

EXTERN void asn1Print_E_DCH_Grant_Type_Information
   (const char* name, E_DCH_Grant_Type_Information* pvalue);

EXTERN E_DCH_Grant_Type_Information* asn1Test_E_DCH_Grant_Type_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Specific_InfoItem                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_MACdFlow_Specific_InfoItem {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned tnlQosPresent : 1;
      unsigned eDCH_MACdFlow_Multiplexing_ListPresent : 1;
      unsigned bundlingModeIndicatorPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_ID e_DCH_MACdFlow_ID;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   AllocationRetentionPriority allocationRetentionPriority;
   TnlQos tnlQos;
   PayloadCRC_PresenceIndicator payloadCRC_PresenceIndicator;
   Maximum_Number_of_Retransmissions_For_E_DCH maximum_Number_of_Retransmissions_For_E_DCH;
   E_DCH_HARQ_PO_FDD eDCH_HARQ_PO_FDD;
   E_DCH_MACdFlow_Multiplexing_List eDCH_MACdFlow_Multiplexing_List;
   E_DCH_Grant_Type_Information eDCH_Grant_Type_Information;
   BundlingModeIndicator bundlingModeIndicator;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_MACdFlow_Specific_InfoItem;

EXTERN int asn1PE_E_DCH_MACdFlow_Specific_InfoItem (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoItem* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Specific_InfoItem (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoItem* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Specific_InfoItem
   (const char* name, E_DCH_MACdFlow_Specific_InfoItem* pvalue);

EXTERN E_DCH_MACdFlow_Specific_InfoItem* asn1Test_E_DCH_MACdFlow_Specific_InfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Specific_InfoList                          */
/*                                                            */
/**************************************************************/

/* List of E_DCH_MACdFlow_Specific_InfoItem */
typedef Asn1RTDList E_DCH_MACdFlow_Specific_InfoList;

EXTERN int asn1PE_E_DCH_MACdFlow_Specific_InfoList (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoList* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Specific_InfoList (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoList* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Specific_InfoList
   (const char* name, E_DCH_MACdFlow_Specific_InfoList* pvalue);

EXTERN E_DCH_MACdFlow_Specific_InfoList* asn1Test_E_DCH_MACdFlow_Specific_InfoList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlows_Information                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_MACdFlows_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_Specific_InfoList e_DCH_MACdFlow_Specific_Info;
   Data_Description_Indicator data_Description_Indicator;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_MACdFlows_Information;

EXTERN int asn1PE_E_DCH_MACdFlows_Information (ASN1CTXT* pctxt, E_DCH_MACdFlows_Information* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlows_Information (ASN1CTXT* pctxt, E_DCH_MACdFlows_Information* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlows_Information
   (const char* name, E_DCH_MACdFlows_Information* pvalue);

EXTERN E_DCH_MACdFlows_Information* asn1Test_E_DCH_MACdFlows_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UE_E_DCH_Capability_Information                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UE_E_DCH_Capability_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Maximum_Allowed_UE_UL_Tx_Power maximum_Allowed_UE_UL_Tx_Power;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UE_E_DCH_Capability_Information;

EXTERN int asn1PE_UE_E_DCH_Capability_Information (ASN1CTXT* pctxt, UE_E_DCH_Capability_Information* pvalue);

EXTERN int asn1PD_UE_E_DCH_Capability_Information (ASN1CTXT* pctxt, UE_E_DCH_Capability_Information* pvalue);

EXTERN void asn1Print_UE_E_DCH_Capability_Information
   (const char* name, UE_E_DCH_Capability_Information* pvalue);

EXTERN UE_E_DCH_Capability_Information* asn1Test_UE_E_DCH_Capability_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_FDD_Information                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_FDD_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlows_Information e_DCH_MACdFlows_Information;
   UE_E_DCH_Capability_Information ue_E_DCH_Capability_Info;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_FDD_Information;

EXTERN int asn1PE_E_DCH_FDD_Information (ASN1CTXT* pctxt, E_DCH_FDD_Information* pvalue);

EXTERN int asn1PD_E_DCH_FDD_Information (ASN1CTXT* pctxt, E_DCH_FDD_Information* pvalue);

EXTERN void asn1Print_E_DCH_FDD_Information
   (const char* name, E_DCH_FDD_Information* pvalue);

EXTERN E_DCH_FDD_Information* asn1Test_E_DCH_FDD_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Specific_InformationResp_Item              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_MACdFlow_Specific_InformationResp_Item {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_ID e_DCH_MACdFlow_ID;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_MACdFlow_Specific_InformationResp_Item;

EXTERN int asn1PE_E_DCH_MACdFlow_Specific_InformationResp_Item (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InformationResp_Item* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Specific_InformationResp_Item (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InformationResp_Item* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Specific_InformationResp_Item
   (const char* name, E_DCH_MACdFlow_Specific_InformationResp_Item* pvalue);

EXTERN E_DCH_MACdFlow_Specific_InformationResp_Item* asn1Test_E_DCH_MACdFlow_Specific_InformationResp_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Specific_InformationResp                   */
/*                                                            */
/**************************************************************/

/* List of E_DCH_MACdFlow_Specific_InformationResp_Item */
typedef Asn1RTDList E_DCH_MACdFlow_Specific_InformationResp;

EXTERN int asn1PE_E_DCH_MACdFlow_Specific_InformationResp (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InformationResp* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Specific_InformationResp (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InformationResp* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Specific_InformationResp
   (const char* name, E_DCH_MACdFlow_Specific_InformationResp* pvalue);

EXTERN E_DCH_MACdFlow_Specific_InformationResp* asn1Test_E_DCH_MACdFlow_Specific_InformationResp
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_FDD_Information_Response                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_FDD_Information_Response {
   struct {
      unsigned e_DCH_MACdFlow_Specific_InformationRespPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_Specific_InformationResp e_DCH_MACdFlow_Specific_InformationResp;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_FDD_Information_Response;

EXTERN int asn1PE_E_DCH_FDD_Information_Response (ASN1CTXT* pctxt, E_DCH_FDD_Information_Response* pvalue);

EXTERN int asn1PD_E_DCH_FDD_Information_Response (ASN1CTXT* pctxt, E_DCH_FDD_Information_Response* pvalue);

EXTERN void asn1Print_E_DCH_FDD_Information_Response
   (const char* name, E_DCH_FDD_Information_Response* pvalue);

EXTERN E_DCH_FDD_Information_Response* asn1Test_E_DCH_FDD_Information_Response
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Specific_InfoItem_to_Modify                */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_MACdFlow_Specific_InfoItem_to_Modify {
   struct {
      unsigned allocationRetentionPriorityPresent : 1;
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned tnlQosPresent : 1;
      unsigned maximum_Number_of_Retransmissions_For_E_DCHPresent : 1;
      unsigned eDCH_MACdFlow_Multiplexing_ListPresent : 1;
      unsigned eDCH_Grant_Type_InformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_ID e_DCH_MACdFlow_ID;
   AllocationRetentionPriority allocationRetentionPriority;
   TransportBearerRequestIndicator transportBearerRequestIndicator;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   TnlQos tnlQos;
   Maximum_Number_of_Retransmissions_For_E_DCH maximum_Number_of_Retransmissions_For_E_DCH;
   E_DCH_HARQ_PO_FDD eDCH_HARQ_PO_FDD;
   E_DCH_MACdFlow_Multiplexing_List eDCH_MACdFlow_Multiplexing_List;
   E_DCH_Grant_Type_Information eDCH_Grant_Type_Information;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_MACdFlow_Specific_InfoItem_to_Modify;

EXTERN int asn1PE_E_DCH_MACdFlow_Specific_InfoItem_to_Modify (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoItem_to_Modify* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Specific_InfoItem_to_Modify (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoItem_to_Modify* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Specific_InfoItem_to_Modify
   (const char* name, E_DCH_MACdFlow_Specific_InfoItem_to_Modify* pvalue);

EXTERN E_DCH_MACdFlow_Specific_InfoItem_to_Modify* asn1Test_E_DCH_MACdFlow_Specific_InfoItem_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_Specific_InfoList_to_Modify                */
/*                                                            */
/**************************************************************/

/* List of E_DCH_MACdFlow_Specific_InfoItem_to_Modify */
typedef Asn1RTDList E_DCH_MACdFlow_Specific_InfoList_to_Modify;

EXTERN int asn1PE_E_DCH_MACdFlow_Specific_InfoList_to_Modify (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoList_to_Modify* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_Specific_InfoList_to_Modify (ASN1CTXT* pctxt, E_DCH_MACdFlow_Specific_InfoList_to_Modify* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_Specific_InfoList_to_Modify
   (const char* name, E_DCH_MACdFlow_Specific_InfoList_to_Modify* pvalue);

EXTERN E_DCH_MACdFlow_Specific_InfoList_to_Modify* asn1Test_E_DCH_MACdFlow_Specific_InfoList_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_FDD_Information_to_Modify                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_FDD_Information_to_Modify {
   struct {
      unsigned e_DCH_MACdFlow_Specific_Info_to_ModifyPresent : 1;
      unsigned data_Description_IndicatorPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_Specific_InfoList_to_Modify e_DCH_MACdFlow_Specific_Info_to_Modify;
   Data_Description_Indicator data_Description_Indicator;
   UE_E_DCH_Capability_Information ue_E_DCH_Capability_Info;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_FDD_Information_to_Modify;

EXTERN int asn1PE_E_DCH_FDD_Information_to_Modify (ASN1CTXT* pctxt, E_DCH_FDD_Information_to_Modify* pvalue);

EXTERN int asn1PD_E_DCH_FDD_Information_to_Modify (ASN1CTXT* pctxt, E_DCH_FDD_Information_to_Modify* pvalue);

EXTERN void asn1Print_E_DCH_FDD_Information_to_Modify
   (const char* name, E_DCH_FDD_Information_to_Modify* pvalue);

EXTERN E_DCH_FDD_Information_to_Modify* asn1Test_E_DCH_FDD_Information_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlow_to_Delete_Item                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCH_MACdFlow_to_Delete_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_ID e_DCH_MACdFlow_ID;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCH_MACdFlow_to_Delete_Item;

EXTERN int asn1PE_E_DCH_MACdFlow_to_Delete_Item (ASN1CTXT* pctxt, E_DCH_MACdFlow_to_Delete_Item* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlow_to_Delete_Item (ASN1CTXT* pctxt, E_DCH_MACdFlow_to_Delete_Item* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlow_to_Delete_Item
   (const char* name, E_DCH_MACdFlow_to_Delete_Item* pvalue);

EXTERN E_DCH_MACdFlow_to_Delete_Item* asn1Test_E_DCH_MACdFlow_to_Delete_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCH_MACdFlows_to_Delete                                 */
/*                                                            */
/**************************************************************/

/* List of E_DCH_MACdFlow_to_Delete_Item */
typedef Asn1RTDList E_DCH_MACdFlows_to_Delete;

EXTERN int asn1PE_E_DCH_MACdFlows_to_Delete (ASN1CTXT* pctxt, E_DCH_MACdFlows_to_Delete* pvalue);

EXTERN int asn1PD_E_DCH_MACdFlows_to_Delete (ASN1CTXT* pctxt, E_DCH_MACdFlows_to_Delete* pvalue);

EXTERN void asn1Print_E_DCH_MACdFlows_to_Delete
   (const char* name, E_DCH_MACdFlows_to_Delete* pvalue);

EXTERN E_DCH_MACdFlows_to_Delete* asn1Test_E_DCH_MACdFlows_to_Delete
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_RGCH_E_HICH_FDD_Code_List                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_RGCH_E_HICH_FDD_Code_List {
   OSUINT32 n;
   E_RGCH_E_HICH_FDD_Code_Information_Item elem[1];
} E_RGCH_E_HICH_FDD_Code_List;

EXTERN int asn1PE_E_RGCH_E_HICH_FDD_Code_List (ASN1CTXT* pctxt, E_RGCH_E_HICH_FDD_Code_List* pvalue);

EXTERN int asn1PD_E_RGCH_E_HICH_FDD_Code_List (ASN1CTXT* pctxt, E_RGCH_E_HICH_FDD_Code_List* pvalue);

EXTERN void asn1Print_E_RGCH_E_HICH_FDD_Code_List
   (const char* name, E_RGCH_E_HICH_FDD_Code_List* pvalue);

EXTERN E_RGCH_E_HICH_FDD_Code_List* asn1Test_E_RGCH_E_HICH_FDD_Code_List
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_RGCH_E_HICH_FDD_Code_Information                        */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_E_RGCH_E_HICH_FDD_Code_Information_replace 1
#define T_E_RGCH_E_HICH_FDD_Code_Information_remove_ 2
#define T_E_RGCH_E_HICH_FDD_Code_Information_extElem1 3

typedef struct EXTERN E_RGCH_E_HICH_FDD_Code_Information {
   int t;
   union {
      /* t = 1 */
      E_RGCH_E_HICH_FDD_Code_List *replace;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} E_RGCH_E_HICH_FDD_Code_Information;

EXTERN int asn1PE_E_RGCH_E_HICH_FDD_Code_Information (ASN1CTXT* pctxt, E_RGCH_E_HICH_FDD_Code_Information* pvalue);

EXTERN int asn1PD_E_RGCH_E_HICH_FDD_Code_Information (ASN1CTXT* pctxt, E_RGCH_E_HICH_FDD_Code_Information* pvalue);

EXTERN void asn1Print_E_RGCH_E_HICH_FDD_Code_Information
   (const char* name, E_RGCH_E_HICH_FDD_Code_Information* pvalue);

EXTERN E_RGCH_E_HICH_FDD_Code_Information* asn1Test_E_RGCH_E_HICH_FDD_Code_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCHProvidedBitRate_Item                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN E_DCHProvidedBitRate_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   E_DCHProvidedBitRateValue e_DCHProvidedBitRateValue;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} E_DCHProvidedBitRate_Item;

EXTERN int asn1PE_E_DCHProvidedBitRate_Item (ASN1CTXT* pctxt, E_DCHProvidedBitRate_Item* pvalue);

EXTERN int asn1PD_E_DCHProvidedBitRate_Item (ASN1CTXT* pctxt, E_DCHProvidedBitRate_Item* pvalue);

EXTERN void asn1Print_E_DCHProvidedBitRate_Item
   (const char* name, E_DCHProvidedBitRate_Item* pvalue);

EXTERN E_DCHProvidedBitRate_Item* asn1Test_E_DCHProvidedBitRate_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  E_DCHProvidedBitRate                                      */
/*                                                            */
/**************************************************************/

/* List of E_DCHProvidedBitRate_Item */
typedef Asn1RTDList E_DCHProvidedBitRate;

EXTERN int asn1PE_E_DCHProvidedBitRate (ASN1CTXT* pctxt, E_DCHProvidedBitRate* pvalue);

EXTERN int asn1PD_E_DCHProvidedBitRate (ASN1CTXT* pctxt, E_DCHProvidedBitRate* pvalue);

EXTERN void asn1Print_E_DCHProvidedBitRate
   (const char* name, E_DCHProvidedBitRate* pvalue);

EXTERN E_DCHProvidedBitRate* asn1Test_E_DCHProvidedBitRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPS_Information                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN GPS_Information {
   OSUINT32 n;
   GPS_Information_Item elem[8];
} GPS_Information;

EXTERN int asn1PE_GPS_Information (ASN1CTXT* pctxt, GPS_Information* pvalue);

EXTERN int asn1PD_GPS_Information (ASN1CTXT* pctxt, GPS_Information* pvalue);

EXTERN void asn1Print_GPS_Information
   (const char* name, GPS_Information* pvalue);

EXTERN GPS_Information* asn1Test_GPS_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_MemoryPartitioning_Implicit                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HARQ_MemoryPartitioning_Implicit {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSINT32 number_of_Processes;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HARQ_MemoryPartitioning_Implicit;

EXTERN int asn1PE_HARQ_MemoryPartitioning_Implicit (ASN1CTXT* pctxt, HARQ_MemoryPartitioning_Implicit* pvalue);

EXTERN int asn1PD_HARQ_MemoryPartitioning_Implicit (ASN1CTXT* pctxt, HARQ_MemoryPartitioning_Implicit* pvalue);

EXTERN void asn1Print_HARQ_MemoryPartitioning_Implicit
   (const char* name, HARQ_MemoryPartitioning_Implicit* pvalue);

EXTERN HARQ_MemoryPartitioning_Implicit* asn1Test_HARQ_MemoryPartitioning_Implicit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_MemoryPartitioningItem                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HARQ_MemoryPartitioningItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HARQ_MemoryPartitioningItem_process_Memory_Size process_Memory_Size;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HARQ_MemoryPartitioningItem;

EXTERN int asn1PE_HARQ_MemoryPartitioningItem (ASN1CTXT* pctxt, HARQ_MemoryPartitioningItem* pvalue);

EXTERN int asn1PD_HARQ_MemoryPartitioningItem (ASN1CTXT* pctxt, HARQ_MemoryPartitioningItem* pvalue);

EXTERN void asn1Print_HARQ_MemoryPartitioningItem
   (const char* name, HARQ_MemoryPartitioningItem* pvalue);

EXTERN HARQ_MemoryPartitioningItem* asn1Test_HARQ_MemoryPartitioningItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_MemoryPartitioningList                               */
/*                                                            */
/**************************************************************/

/* List of HARQ_MemoryPartitioningItem */
typedef Asn1RTDList HARQ_MemoryPartitioningList;

EXTERN int asn1PE_HARQ_MemoryPartitioningList (ASN1CTXT* pctxt, HARQ_MemoryPartitioningList* pvalue);

EXTERN int asn1PD_HARQ_MemoryPartitioningList (ASN1CTXT* pctxt, HARQ_MemoryPartitioningList* pvalue);

EXTERN void asn1Print_HARQ_MemoryPartitioningList
   (const char* name, HARQ_MemoryPartitioningList* pvalue);

EXTERN HARQ_MemoryPartitioningList* asn1Test_HARQ_MemoryPartitioningList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_MemoryPartitioning_Explicit                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HARQ_MemoryPartitioning_Explicit {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HARQ_MemoryPartitioningList hARQ_MemoryPartitioningList;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HARQ_MemoryPartitioning_Explicit;

EXTERN int asn1PE_HARQ_MemoryPartitioning_Explicit (ASN1CTXT* pctxt, HARQ_MemoryPartitioning_Explicit* pvalue);

EXTERN int asn1PD_HARQ_MemoryPartitioning_Explicit (ASN1CTXT* pctxt, HARQ_MemoryPartitioning_Explicit* pvalue);

EXTERN void asn1Print_HARQ_MemoryPartitioning_Explicit
   (const char* name, HARQ_MemoryPartitioning_Explicit* pvalue);

EXTERN HARQ_MemoryPartitioning_Explicit* asn1Test_HARQ_MemoryPartitioning_Explicit
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HARQ_MemoryPartitioning                                   */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_HARQ_MemoryPartitioning_implicit 1
#define T_HARQ_MemoryPartitioning_explicit_ 2
#define T_HARQ_MemoryPartitioning_extElem1 3

typedef struct EXTERN HARQ_MemoryPartitioning {
   int t;
   union {
      /* t = 1 */
      HARQ_MemoryPartitioning_Implicit *implicit;
      /* t = 2 */
      HARQ_MemoryPartitioning_Explicit *explicit_;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} HARQ_MemoryPartitioning;

EXTERN int asn1PE_HARQ_MemoryPartitioning (ASN1CTXT* pctxt, HARQ_MemoryPartitioning* pvalue);

EXTERN int asn1PD_HARQ_MemoryPartitioning (ASN1CTXT* pctxt, HARQ_MemoryPartitioning* pvalue);

EXTERN void asn1Print_HARQ_MemoryPartitioning
   (const char* name, HARQ_MemoryPartitioning* pvalue);

EXTERN HARQ_MemoryPartitioning* asn1Test_HARQ_MemoryPartitioning
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHProvidedBitRate_Item                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_DSCHProvidedBitRate_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   HS_DSCHProvidedBitRateValue hS_DSCHProvidedBitRateValue;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_DSCHProvidedBitRate_Item;

EXTERN int asn1PE_HS_DSCHProvidedBitRate_Item (ASN1CTXT* pctxt, HS_DSCHProvidedBitRate_Item* pvalue);

EXTERN int asn1PD_HS_DSCHProvidedBitRate_Item (ASN1CTXT* pctxt, HS_DSCHProvidedBitRate_Item* pvalue);

EXTERN void asn1Print_HS_DSCHProvidedBitRate_Item
   (const char* name, HS_DSCHProvidedBitRate_Item* pvalue);

EXTERN HS_DSCHProvidedBitRate_Item* asn1Test_HS_DSCHProvidedBitRate_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHProvidedBitRate                                    */
/*                                                            */
/**************************************************************/

/* List of HS_DSCHProvidedBitRate_Item */
typedef Asn1RTDList HS_DSCHProvidedBitRate;

EXTERN int asn1PE_HS_DSCHProvidedBitRate (ASN1CTXT* pctxt, HS_DSCHProvidedBitRate* pvalue);

EXTERN int asn1PD_HS_DSCHProvidedBitRate (ASN1CTXT* pctxt, HS_DSCHProvidedBitRate* pvalue);

EXTERN void asn1Print_HS_DSCHProvidedBitRate
   (const char* name, HS_DSCHProvidedBitRate* pvalue);

EXTERN HS_DSCHProvidedBitRate* asn1Test_HS_DSCHProvidedBitRate
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHProvidedBitRateValueInformation_For_CellPortion_I  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellPortionID cellPortionID;
   HS_DSCHProvidedBitRateValue hS_DSCHProvidedBitRateValue;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item;

EXTERN int asn1PE_HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item (ASN1CTXT* pctxt, HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item* pvalue);

EXTERN int asn1PD_HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item (ASN1CTXT* pctxt, HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item* pvalue);

EXTERN void asn1Print_HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item
   (const char* name, HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item* pvalue);

EXTERN HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item* asn1Test_HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHProvidedBitRateValueInformation_For_CellPortion    */
/*                                                            */
/**************************************************************/

/* List of HS_DSCHProvidedBitRateValueInformation_For_CellPortion_Item */
typedef Asn1RTDList HS_DSCHProvidedBitRateValueInformation_For_CellPortion;

EXTERN int asn1PE_HS_DSCHProvidedBitRateValueInformation_For_CellPortion (ASN1CTXT* pctxt, HS_DSCHProvidedBitRateValueInformation_For_CellPortion* pvalue);

EXTERN int asn1PD_HS_DSCHProvidedBitRateValueInformation_For_CellPortion (ASN1CTXT* pctxt, HS_DSCHProvidedBitRateValueInformation_For_CellPortion* pvalue);

EXTERN void asn1Print_HS_DSCHProvidedBitRateValueInformation_For_CellPortion
   (const char* name, HS_DSCHProvidedBitRateValueInformation_For_CellPortion* pvalue);

EXTERN HS_DSCHProvidedBitRateValueInformation_For_CellPortion* asn1Test_HS_DSCHProvidedBitRateValueInformation_For_CellPortion
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPowerPerUEInformation_Item                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_DSCHRequiredPowerPerUEInformation_Item {
   struct {
      unsigned hS_DSCHRequiredPowerPerUEWeightPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CRNC_CommunicationContextID cRNC_CommunicationContextID;
   HS_DSCHRequiredPowerPerUEWeight hS_DSCHRequiredPowerPerUEWeight;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_DSCHRequiredPowerPerUEInformation_Item;

EXTERN int asn1PE_HS_DSCHRequiredPowerPerUEInformation_Item (ASN1CTXT* pctxt, HS_DSCHRequiredPowerPerUEInformation_Item* pvalue);

EXTERN int asn1PD_HS_DSCHRequiredPowerPerUEInformation_Item (ASN1CTXT* pctxt, HS_DSCHRequiredPowerPerUEInformation_Item* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPowerPerUEInformation_Item
   (const char* name, HS_DSCHRequiredPowerPerUEInformation_Item* pvalue);

EXTERN HS_DSCHRequiredPowerPerUEInformation_Item* asn1Test_HS_DSCHRequiredPowerPerUEInformation_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPowerPerUEInformation                      */
/*                                                            */
/**************************************************************/

/* List of HS_DSCHRequiredPowerPerUEInformation_Item */
typedef Asn1RTDList HS_DSCHRequiredPowerPerUEInformation;

EXTERN int asn1PE_HS_DSCHRequiredPowerPerUEInformation (ASN1CTXT* pctxt, HS_DSCHRequiredPowerPerUEInformation* pvalue);

EXTERN int asn1PD_HS_DSCHRequiredPowerPerUEInformation (ASN1CTXT* pctxt, HS_DSCHRequiredPowerPerUEInformation* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPowerPerUEInformation
   (const char* name, HS_DSCHRequiredPowerPerUEInformation* pvalue);

EXTERN HS_DSCHRequiredPowerPerUEInformation* asn1Test_HS_DSCHRequiredPowerPerUEInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPower_Item                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_DSCHRequiredPower_Item {
   struct {
      unsigned hS_DSCHRequiredPowerPerUEInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   HS_DSCHRequiredPowerValue hS_DSCHRequiredPowerValue;
   HS_DSCHRequiredPowerPerUEInformation hS_DSCHRequiredPowerPerUEInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_DSCHRequiredPower_Item;

EXTERN int asn1PE_HS_DSCHRequiredPower_Item (ASN1CTXT* pctxt, HS_DSCHRequiredPower_Item* pvalue);

EXTERN int asn1PD_HS_DSCHRequiredPower_Item (ASN1CTXT* pctxt, HS_DSCHRequiredPower_Item* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPower_Item
   (const char* name, HS_DSCHRequiredPower_Item* pvalue);

EXTERN HS_DSCHRequiredPower_Item* asn1Test_HS_DSCHRequiredPower_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPower                                      */
/*                                                            */
/**************************************************************/

/* List of HS_DSCHRequiredPower_Item */
typedef Asn1RTDList HS_DSCHRequiredPower;

EXTERN int asn1PE_HS_DSCHRequiredPower (ASN1CTXT* pctxt, HS_DSCHRequiredPower* pvalue);

EXTERN int asn1PD_HS_DSCHRequiredPower (ASN1CTXT* pctxt, HS_DSCHRequiredPower* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPower
   (const char* name, HS_DSCHRequiredPower* pvalue);

EXTERN HS_DSCHRequiredPower* asn1Test_HS_DSCHRequiredPower
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPowerValueInformation_For_CellPortion_Ite  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellPortionID cellPortionID;
   HS_DSCHRequiredPowerValue hS_DSCHRequiredPowerValue;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item;

EXTERN int asn1PE_HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item (ASN1CTXT* pctxt, HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item* pvalue);

EXTERN int asn1PD_HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item (ASN1CTXT* pctxt, HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item
   (const char* name, HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item* pvalue);

EXTERN HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item* asn1Test_HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_DSCHRequiredPowerValueInformation_For_CellPortion      */
/*                                                            */
/**************************************************************/

/* List of HS_DSCHRequiredPowerValueInformation_For_CellPortion_Item */
typedef Asn1RTDList HS_DSCHRequiredPowerValueInformation_For_CellPortion;

EXTERN int asn1PE_HS_DSCHRequiredPowerValueInformation_For_CellPortion (ASN1CTXT* pctxt, HS_DSCHRequiredPowerValueInformation_For_CellPortion* pvalue);

EXTERN int asn1PD_HS_DSCHRequiredPowerValueInformation_For_CellPortion (ASN1CTXT* pctxt, HS_DSCHRequiredPowerValueInformation_For_CellPortion* pvalue);

EXTERN void asn1Print_HS_DSCHRequiredPowerValueInformation_For_CellPortion
   (const char* name, HS_DSCHRequiredPowerValueInformation_For_CellPortion* pvalue);

EXTERN HS_DSCHRequiredPowerValueInformation_For_CellPortion* asn1Test_HS_DSCHRequiredPowerValueInformation_For_CellPortion
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_Specific_InfoItem                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_MACdFlow_Specific_InfoItem {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_ID hsDSCH_MACdFlow_ID;
   AllocationRetentionPriority allocationRetentionPriority;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_MACdFlow_Specific_InfoItem;

EXTERN int asn1PE_HSDSCH_MACdFlow_Specific_InfoItem (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoItem* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlow_Specific_InfoItem (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoItem* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_Specific_InfoItem
   (const char* name, HSDSCH_MACdFlow_Specific_InfoItem* pvalue);

EXTERN HSDSCH_MACdFlow_Specific_InfoItem* asn1Test_HSDSCH_MACdFlow_Specific_InfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_Specific_InfoList                         */
/*                                                            */
/**************************************************************/

/* List of HSDSCH_MACdFlow_Specific_InfoItem */
typedef Asn1RTDList HSDSCH_MACdFlow_Specific_InfoList;

EXTERN int asn1PE_HSDSCH_MACdFlow_Specific_InfoList (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoList* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlow_Specific_InfoList (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoList* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_Specific_InfoList
   (const char* name, HSDSCH_MACdFlow_Specific_InfoList* pvalue);

EXTERN HSDSCH_MACdFlow_Specific_InfoList* asn1Test_HSDSCH_MACdFlow_Specific_InfoList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MACdPDU_Size_IndexItem                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MACdPDU_Size_IndexItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SID sID;
   MACdPDU_Size macdPDU_Size;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} MACdPDU_Size_IndexItem;

EXTERN int asn1PE_MACdPDU_Size_IndexItem (ASN1CTXT* pctxt, MACdPDU_Size_IndexItem* pvalue);

EXTERN int asn1PD_MACdPDU_Size_IndexItem (ASN1CTXT* pctxt, MACdPDU_Size_IndexItem* pvalue);

EXTERN void asn1Print_MACdPDU_Size_IndexItem
   (const char* name, MACdPDU_Size_IndexItem* pvalue);

EXTERN MACdPDU_Size_IndexItem* asn1Test_MACdPDU_Size_IndexItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MACdPDU_Size_Indexlist                                    */
/*                                                            */
/**************************************************************/

/* List of MACdPDU_Size_IndexItem */
typedef Asn1RTDList MACdPDU_Size_Indexlist;

EXTERN int asn1PE_MACdPDU_Size_Indexlist (ASN1CTXT* pctxt, MACdPDU_Size_Indexlist* pvalue);

EXTERN int asn1PD_MACdPDU_Size_Indexlist (ASN1CTXT* pctxt, MACdPDU_Size_Indexlist* pvalue);

EXTERN void asn1Print_MACdPDU_Size_Indexlist
   (const char* name, MACdPDU_Size_Indexlist* pvalue);

EXTERN MACdPDU_Size_Indexlist* asn1Test_MACdPDU_Size_Indexlist
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoItem                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PriorityQueue_InfoItem {
   struct {
      unsigned discardTimerPresent : 1;
      unsigned mAChsGuaranteedBitRatePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityQueue_Id priorityQueueId;
   HSDSCH_MACdFlow_ID associatedHSDSCH_MACdFlow;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   T1 t1;
   DiscardTimer discardTimer;
   MAC_hsWindowSize mAC_hsWindowSize;
   MAChsGuaranteedBitRate mAChsGuaranteedBitRate;
   MACdPDU_Size_Indexlist macdPDU_Size_Index;
   RLC_Mode rLC_Mode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} PriorityQueue_InfoItem;

EXTERN int asn1PE_PriorityQueue_InfoItem (ASN1CTXT* pctxt, PriorityQueue_InfoItem* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoItem (ASN1CTXT* pctxt, PriorityQueue_InfoItem* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoItem
   (const char* name, PriorityQueue_InfoItem* pvalue);

EXTERN PriorityQueue_InfoItem* asn1Test_PriorityQueue_InfoItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoList                                    */
/*                                                            */
/**************************************************************/

/* List of PriorityQueue_InfoItem */
typedef Asn1RTDList PriorityQueue_InfoList;

EXTERN int asn1PE_PriorityQueue_InfoList (ASN1CTXT* pctxt, PriorityQueue_InfoList* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoList (ASN1CTXT* pctxt, PriorityQueue_InfoList* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoList
   (const char* name, PriorityQueue_InfoList* pvalue);

EXTERN PriorityQueue_InfoList* asn1Test_PriorityQueue_InfoList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlows_Information                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_MACdFlows_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_Specific_InfoList hSDSCH_MACdFlow_Specific_Info;
   PriorityQueue_InfoList priorityQueue_Info;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_MACdFlows_Information;

EXTERN int asn1PE_HSDSCH_MACdFlows_Information (ASN1CTXT* pctxt, HSDSCH_MACdFlows_Information* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlows_Information (ASN1CTXT* pctxt, HSDSCH_MACdFlows_Information* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlows_Information
   (const char* name, HSDSCH_MACdFlows_Information* pvalue);

EXTERN HSDSCH_MACdFlows_Information* asn1Test_HSDSCH_MACdFlows_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UE_Capability_Information                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UE_Capability_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSINT32 hSDSCH_Physical_Layer_Category;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UE_Capability_Information;

EXTERN int asn1PE_UE_Capability_Information (ASN1CTXT* pctxt, UE_Capability_Information* pvalue);

EXTERN int asn1PD_UE_Capability_Information (ASN1CTXT* pctxt, UE_Capability_Information* pvalue);

EXTERN void asn1Print_UE_Capability_Information
   (const char* name, UE_Capability_Information* pvalue);

EXTERN UE_Capability_Information* asn1Test_UE_Capability_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_FDD_Information                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_FDD_Information {
   struct {
      unsigned cqiRepetitionFactorPresent : 1;
      unsigned hsscch_PowerOffsetPresent : 1;
      unsigned measurement_Power_OffsetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlows_Information hSDSCH_MACdFlows_Information;
   UE_Capability_Information ueCapability_Info;
   MAChsReorderingBufferSize_for_RLC_UM mAChs_Reordering_Buffer_Size_for_RLC_UM;
   CQI_Feedback_Cycle cqiFeedback_CycleK;
   CQI_RepetitionFactor cqiRepetitionFactor;
   AckNack_RepetitionFactor ackNackRepetitionFactor;
   CQI_Power_Offset cqiPowerOffset;
   Ack_Power_Offset ackPowerOffset;
   Nack_Power_Offset nackPowerOffset;
   HSSCCH_PowerOffset hsscch_PowerOffset;
   Measurement_Power_Offset measurement_Power_Offset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_FDD_Information;

EXTERN int asn1PE_HSDSCH_FDD_Information (ASN1CTXT* pctxt, HSDSCH_FDD_Information* pvalue);

EXTERN int asn1PD_HSDSCH_FDD_Information (ASN1CTXT* pctxt, HSDSCH_FDD_Information* pvalue);

EXTERN void asn1Print_HSDSCH_FDD_Information
   (const char* name, HSDSCH_FDD_Information* pvalue);

EXTERN HSDSCH_FDD_Information* asn1Test_HSDSCH_FDD_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_TDD_Information                                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_TDD_Information {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlows_Information hSDSCH_MACdFlows_Information;
   UE_Capability_Information ueCapability_Info;
   MAChsReorderingBufferSize_for_RLC_UM mAChs_Reordering_Buffer_Size_for_RLC_UM;
   TDD_AckNack_Power_Offset tDD_AckNack_Power_Offset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_TDD_Information;

EXTERN int asn1PE_HSDSCH_TDD_Information (ASN1CTXT* pctxt, HSDSCH_TDD_Information* pvalue);

EXTERN int asn1PD_HSDSCH_TDD_Information (ASN1CTXT* pctxt, HSDSCH_TDD_Information* pvalue);

EXTERN void asn1Print_HSDSCH_TDD_Information
   (const char* name, HSDSCH_TDD_Information* pvalue);

EXTERN HSDSCH_TDD_Information* asn1Test_HSDSCH_TDD_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_Specific_InfoItem_to_Modify               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_MACdFlow_Specific_InfoItem_to_Modify {
   struct {
      unsigned allocationRetentionPriorityPresent : 1;
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_ID hsDSCH_MACdFlow_ID;
   AllocationRetentionPriority allocationRetentionPriority;
   TransportBearerRequestIndicator transportBearerRequestIndicator;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_MACdFlow_Specific_InfoItem_to_Modify;

EXTERN int asn1PE_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoItem_to_Modify* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoItem_to_Modify* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify
   (const char* name, HSDSCH_MACdFlow_Specific_InfoItem_to_Modify* pvalue);

EXTERN HSDSCH_MACdFlow_Specific_InfoItem_to_Modify* asn1Test_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_Specific_InfoList_to_Modify               */
/*                                                            */
/**************************************************************/

/* List of HSDSCH_MACdFlow_Specific_InfoItem_to_Modify */
typedef Asn1RTDList HSDSCH_MACdFlow_Specific_InfoList_to_Modify;

EXTERN int asn1PE_HSDSCH_MACdFlow_Specific_InfoList_to_Modify (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoList_to_Modify* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlow_Specific_InfoList_to_Modify (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InfoList_to_Modify* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_Specific_InfoList_to_Modify
   (const char* name, HSDSCH_MACdFlow_Specific_InfoList_to_Modify* pvalue);

EXTERN HSDSCH_MACdFlow_Specific_InfoList_to_Modify* asn1Test_HSDSCH_MACdFlow_Specific_InfoList_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoItem_to_Add                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PriorityQueue_InfoItem_to_Add {
   struct {
      unsigned discardTimerPresent : 1;
      unsigned mAChsGuaranteedBitRatePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityQueue_Id priorityQueueId;
   HSDSCH_MACdFlow_ID associatedHSDSCH_MACdFlow;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   T1 t1;
   DiscardTimer discardTimer;
   MAC_hsWindowSize mAC_hsWindowSize;
   MAChsGuaranteedBitRate mAChsGuaranteedBitRate;
   MACdPDU_Size_Indexlist macdPDU_Size_Index;
   RLC_Mode rLC_Mode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} PriorityQueue_InfoItem_to_Add;

EXTERN int asn1PE_PriorityQueue_InfoItem_to_Add (ASN1CTXT* pctxt, PriorityQueue_InfoItem_to_Add* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoItem_to_Add (ASN1CTXT* pctxt, PriorityQueue_InfoItem_to_Add* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoItem_to_Add
   (const char* name, PriorityQueue_InfoItem_to_Add* pvalue);

EXTERN PriorityQueue_InfoItem_to_Add* asn1Test_PriorityQueue_InfoItem_to_Add
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MACdPDU_Size_IndexItem_to_Modify                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MACdPDU_Size_IndexItem_to_Modify {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SID sID;
   MACdPDU_Size macdPDU_Size;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} MACdPDU_Size_IndexItem_to_Modify;

EXTERN int asn1PE_MACdPDU_Size_IndexItem_to_Modify (ASN1CTXT* pctxt, MACdPDU_Size_IndexItem_to_Modify* pvalue);

EXTERN int asn1PD_MACdPDU_Size_IndexItem_to_Modify (ASN1CTXT* pctxt, MACdPDU_Size_IndexItem_to_Modify* pvalue);

EXTERN void asn1Print_MACdPDU_Size_IndexItem_to_Modify
   (const char* name, MACdPDU_Size_IndexItem_to_Modify* pvalue);

EXTERN MACdPDU_Size_IndexItem_to_Modify* asn1Test_MACdPDU_Size_IndexItem_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MACdPDU_Size_Indexlist_to_Modify                          */
/*                                                            */
/**************************************************************/

/* List of MACdPDU_Size_IndexItem_to_Modify */
typedef Asn1RTDList MACdPDU_Size_Indexlist_to_Modify;

EXTERN int asn1PE_MACdPDU_Size_Indexlist_to_Modify (ASN1CTXT* pctxt, MACdPDU_Size_Indexlist_to_Modify* pvalue);

EXTERN int asn1PD_MACdPDU_Size_Indexlist_to_Modify (ASN1CTXT* pctxt, MACdPDU_Size_Indexlist_to_Modify* pvalue);

EXTERN void asn1Print_MACdPDU_Size_Indexlist_to_Modify
   (const char* name, MACdPDU_Size_Indexlist_to_Modify* pvalue);

EXTERN MACdPDU_Size_Indexlist_to_Modify* asn1Test_MACdPDU_Size_Indexlist_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoItem_to_Modify                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PriorityQueue_InfoItem_to_Modify {
   struct {
      unsigned schedulingPriorityIndicatorPresent : 1;
      unsigned t1Present : 1;
      unsigned discardTimerPresent : 1;
      unsigned mAC_hsWindowSizePresent : 1;
      unsigned mAChsGuaranteedBitRatePresent : 1;
      unsigned macdPDU_Size_Index_to_ModifyPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityQueue_Id priorityQueueId;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   T1 t1;
   DiscardTimer discardTimer;
   MAC_hsWindowSize mAC_hsWindowSize;
   MAChsGuaranteedBitRate mAChsGuaranteedBitRate;
   MACdPDU_Size_Indexlist_to_Modify macdPDU_Size_Index_to_Modify;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} PriorityQueue_InfoItem_to_Modify;

EXTERN int asn1PE_PriorityQueue_InfoItem_to_Modify (ASN1CTXT* pctxt, PriorityQueue_InfoItem_to_Modify* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoItem_to_Modify (ASN1CTXT* pctxt, PriorityQueue_InfoItem_to_Modify* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoItem_to_Modify
   (const char* name, PriorityQueue_InfoItem_to_Modify* pvalue);

EXTERN PriorityQueue_InfoItem_to_Modify* asn1Test_PriorityQueue_InfoItem_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ModifyPriorityQueue                                       */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ModifyPriorityQueue_addPriorityQueue 1
#define T_ModifyPriorityQueue_modifyPriorityQueue 2
#define T_ModifyPriorityQueue_deletePriorityQueue 3
#define T_ModifyPriorityQueue_extElem1  4

typedef struct EXTERN ModifyPriorityQueue {
   int t;
   union {
      /* t = 1 */
      PriorityQueue_InfoItem_to_Add *addPriorityQueue;
      /* t = 2 */
      PriorityQueue_InfoItem_to_Modify *modifyPriorityQueue;
      /* t = 3 */
      PriorityQueue_Id deletePriorityQueue;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} ModifyPriorityQueue;

EXTERN int asn1PE_ModifyPriorityQueue (ASN1CTXT* pctxt, ModifyPriorityQueue* pvalue);

EXTERN int asn1PD_ModifyPriorityQueue (ASN1CTXT* pctxt, ModifyPriorityQueue* pvalue);

EXTERN void asn1Print_ModifyPriorityQueue
   (const char* name, ModifyPriorityQueue* pvalue);

EXTERN ModifyPriorityQueue* asn1Test_ModifyPriorityQueue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoList_to_Modify                          */
/*                                                            */
/**************************************************************/

/* List of ModifyPriorityQueue */
typedef Asn1RTDList PriorityQueue_InfoList_to_Modify;

EXTERN int asn1PE_PriorityQueue_InfoList_to_Modify (ASN1CTXT* pctxt, PriorityQueue_InfoList_to_Modify* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoList_to_Modify (ASN1CTXT* pctxt, PriorityQueue_InfoList_to_Modify* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoList_to_Modify
   (const char* name, PriorityQueue_InfoList_to_Modify* pvalue);

EXTERN PriorityQueue_InfoList_to_Modify* asn1Test_PriorityQueue_InfoList_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_Information_to_Modify                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_Information_to_Modify {
   struct {
      unsigned hsDSCH_MACdFlow_Specific_Info_to_ModifyPresent : 1;
      unsigned priorityQueueInfotoModifyPresent : 1;
      unsigned mAChs_Reordering_Buffer_Size_for_RLC_UMPresent : 1;
      unsigned cqiFeedback_CycleKPresent : 1;
      unsigned cqiRepetitionFactorPresent : 1;
      unsigned ackNackRepetitionFactorPresent : 1;
      unsigned cqiPowerOffsetPresent : 1;
      unsigned ackPowerOffsetPresent : 1;
      unsigned nackPowerOffsetPresent : 1;
      unsigned hsscch_PowerOffsetPresent : 1;
      unsigned measurement_Power_OffsetPresent : 1;
      unsigned hSSCCHCodeChangeGrantPresent : 1;
      unsigned tDDAckNackPowerOffsetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_Specific_InfoList_to_Modify hsDSCH_MACdFlow_Specific_Info_to_Modify;
   PriorityQueue_InfoList_to_Modify priorityQueueInfotoModify;
   MAChsReorderingBufferSize_for_RLC_UM mAChs_Reordering_Buffer_Size_for_RLC_UM;
   CQI_Feedback_Cycle cqiFeedback_CycleK;
   CQI_RepetitionFactor cqiRepetitionFactor;
   AckNack_RepetitionFactor ackNackRepetitionFactor;
   CQI_Power_Offset cqiPowerOffset;
   Ack_Power_Offset ackPowerOffset;
   Nack_Power_Offset nackPowerOffset;
   HSSCCH_PowerOffset hsscch_PowerOffset;
   Measurement_Power_Offset measurement_Power_Offset;
   HSSCCH_Code_Change_Grant hSSCCHCodeChangeGrant;
   TDD_AckNack_Power_Offset tDDAckNackPowerOffset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_Information_to_Modify;

EXTERN int asn1PE_HSDSCH_Information_to_Modify (ASN1CTXT* pctxt, HSDSCH_Information_to_Modify* pvalue);

EXTERN int asn1PD_HSDSCH_Information_to_Modify (ASN1CTXT* pctxt, HSDSCH_Information_to_Modify* pvalue);

EXTERN void asn1Print_HSDSCH_Information_to_Modify
   (const char* name, HSDSCH_Information_to_Modify* pvalue);

EXTERN HSDSCH_Information_to_Modify* asn1Test_HSDSCH_Information_to_Modify
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoItem_to_Modify_Unsynchronised           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN PriorityQueue_InfoItem_to_Modify_Unsynchronised {
   struct {
      unsigned schedulingPriorityIndicatorPresent : 1;
      unsigned discardTimerPresent : 1;
      unsigned mAChsGuaranteedBitRatePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityQueue_Id priorityQueueId;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   DiscardTimer discardTimer;
   MAChsGuaranteedBitRate mAChsGuaranteedBitRate;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} PriorityQueue_InfoItem_to_Modify_Unsynchronised;

EXTERN int asn1PE_PriorityQueue_InfoItem_to_Modify_Unsynchronised (ASN1CTXT* pctxt, PriorityQueue_InfoItem_to_Modify_Unsynchronised* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoItem_to_Modify_Unsynchronised (ASN1CTXT* pctxt, PriorityQueue_InfoItem_to_Modify_Unsynchronised* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoItem_to_Modify_Unsynchronised
   (const char* name, PriorityQueue_InfoItem_to_Modify_Unsynchronised* pvalue);

EXTERN PriorityQueue_InfoItem_to_Modify_Unsynchronised* asn1Test_PriorityQueue_InfoItem_to_Modify_Unsynchronised
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PriorityQueue_InfoList_to_Modify_Unsynchronised           */
/*                                                            */
/**************************************************************/

/* List of PriorityQueue_InfoItem_to_Modify_Unsynchronised */
typedef Asn1RTDList PriorityQueue_InfoList_to_Modify_Unsynchronised;

EXTERN int asn1PE_PriorityQueue_InfoList_to_Modify_Unsynchronised (ASN1CTXT* pctxt, PriorityQueue_InfoList_to_Modify_Unsynchronised* pvalue);

EXTERN int asn1PD_PriorityQueue_InfoList_to_Modify_Unsynchronised (ASN1CTXT* pctxt, PriorityQueue_InfoList_to_Modify_Unsynchronised* pvalue);

EXTERN void asn1Print_PriorityQueue_InfoList_to_Modify_Unsynchronised
   (const char* name, PriorityQueue_InfoList_to_Modify_Unsynchronised* pvalue);

EXTERN PriorityQueue_InfoList_to_Modify_Unsynchronised* asn1Test_PriorityQueue_InfoList_to_Modify_Unsynchronised
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_Information_to_Modify_Unsynchronised               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_Information_to_Modify_Unsynchronised {
   struct {
      unsigned hsDSCH_MACdFlow_Specific_Info_to_ModifyPresent : 1;
      unsigned priorityQueueInfotoModifyUnsynchronisedPresent : 1;
      unsigned cqiPowerOffsetPresent : 1;
      unsigned ackPowerOffsetPresent : 1;
      unsigned nackPowerOffsetPresent : 1;
      unsigned hsscch_PowerOffsetPresent : 1;
      unsigned tDDAckNackPowerOffsetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_Specific_InfoList_to_Modify hsDSCH_MACdFlow_Specific_Info_to_Modify;
   PriorityQueue_InfoList_to_Modify_Unsynchronised priorityQueueInfotoModifyUnsynchronised;
   CQI_Power_Offset cqiPowerOffset;
   Ack_Power_Offset ackPowerOffset;
   Nack_Power_Offset nackPowerOffset;
   HSSCCH_PowerOffset hsscch_PowerOffset;
   TDD_AckNack_Power_Offset tDDAckNackPowerOffset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_Information_to_Modify_Unsynchronised;

EXTERN int asn1PE_HSDSCH_Information_to_Modify_Unsynchronised (ASN1CTXT* pctxt, HSDSCH_Information_to_Modify_Unsynchronised* pvalue);

EXTERN int asn1PD_HSDSCH_Information_to_Modify_Unsynchronised (ASN1CTXT* pctxt, HSDSCH_Information_to_Modify_Unsynchronised* pvalue);

EXTERN void asn1Print_HSDSCH_Information_to_Modify_Unsynchronised
   (const char* name, HSDSCH_Information_to_Modify_Unsynchronised* pvalue);

EXTERN HSDSCH_Information_to_Modify_Unsynchronised* asn1Test_HSDSCH_Information_to_Modify_Unsynchronised
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_Initial_Capacity_AllocationItem                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_Initial_Capacity_AllocationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SchedulingPriorityIndicator schedulingPriorityIndicator;
   MACdPDU_Size maximum_MACdPDU_Size;
   HSDSCH_InitialWindowSize hSDSCH_InitialWindowSize;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_Initial_Capacity_AllocationItem;

EXTERN int asn1PE_HSDSCH_Initial_Capacity_AllocationItem (ASN1CTXT* pctxt, HSDSCH_Initial_Capacity_AllocationItem* pvalue);

EXTERN int asn1PD_HSDSCH_Initial_Capacity_AllocationItem (ASN1CTXT* pctxt, HSDSCH_Initial_Capacity_AllocationItem* pvalue);

EXTERN void asn1Print_HSDSCH_Initial_Capacity_AllocationItem
   (const char* name, HSDSCH_Initial_Capacity_AllocationItem* pvalue);

EXTERN HSDSCH_Initial_Capacity_AllocationItem* asn1Test_HSDSCH_Initial_Capacity_AllocationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_Initial_Capacity_Allocation                        */
/*                                                            */
/**************************************************************/

/* List of HSDSCH_Initial_Capacity_AllocationItem */
typedef Asn1RTDList HSDSCH_Initial_Capacity_Allocation;

EXTERN int asn1PE_HSDSCH_Initial_Capacity_Allocation (ASN1CTXT* pctxt, HSDSCH_Initial_Capacity_Allocation* pvalue);

EXTERN int asn1PD_HSDSCH_Initial_Capacity_Allocation (ASN1CTXT* pctxt, HSDSCH_Initial_Capacity_Allocation* pvalue);

EXTERN void asn1Print_HSDSCH_Initial_Capacity_Allocation
   (const char* name, HSDSCH_Initial_Capacity_Allocation* pvalue);

EXTERN HSDSCH_Initial_Capacity_Allocation* asn1Test_HSDSCH_Initial_Capacity_Allocation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_Specific_InformationResp_Item             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_MACdFlow_Specific_InformationResp_Item {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned hSDSCH_Initial_Capacity_AllocationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_ID hsDSCHMacdFlow_Id;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   HSDSCH_Initial_Capacity_Allocation hSDSCH_Initial_Capacity_Allocation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_MACdFlow_Specific_InformationResp_Item;

EXTERN int asn1PE_HSDSCH_MACdFlow_Specific_InformationResp_Item (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InformationResp_Item* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlow_Specific_InformationResp_Item (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InformationResp_Item* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_Specific_InformationResp_Item
   (const char* name, HSDSCH_MACdFlow_Specific_InformationResp_Item* pvalue);

EXTERN HSDSCH_MACdFlow_Specific_InformationResp_Item* asn1Test_HSDSCH_MACdFlow_Specific_InformationResp_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlow_Specific_InformationResp                  */
/*                                                            */
/**************************************************************/

/* List of HSDSCH_MACdFlow_Specific_InformationResp_Item */
typedef Asn1RTDList HSDSCH_MACdFlow_Specific_InformationResp;

EXTERN int asn1PE_HSDSCH_MACdFlow_Specific_InformationResp (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InformationResp* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlow_Specific_InformationResp (ASN1CTXT* pctxt, HSDSCH_MACdFlow_Specific_InformationResp* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlow_Specific_InformationResp
   (const char* name, HSDSCH_MACdFlow_Specific_InformationResp* pvalue);

EXTERN HSDSCH_MACdFlow_Specific_InformationResp* asn1Test_HSDSCH_MACdFlow_Specific_InformationResp
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Codes                                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSSCCH_Codes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT8 codeNumber;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSSCCH_Codes;

EXTERN int asn1PE_HSSCCH_Codes (ASN1CTXT* pctxt, HSSCCH_Codes* pvalue);

EXTERN int asn1PD_HSSCCH_Codes (ASN1CTXT* pctxt, HSSCCH_Codes* pvalue);

EXTERN void asn1Print_HSSCCH_Codes
   (const char* name, HSSCCH_Codes* pvalue);

EXTERN HSSCCH_Codes* asn1Test_HSSCCH_Codes
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Specific_InformationRespListFDD                    */
/*                                                            */
/**************************************************************/

/* List of HSSCCH_Codes */
typedef Asn1RTDList HSSCCH_Specific_InformationRespListFDD;

EXTERN int asn1PE_HSSCCH_Specific_InformationRespListFDD (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespListFDD* pvalue);

EXTERN int asn1PD_HSSCCH_Specific_InformationRespListFDD (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespListFDD* pvalue);

EXTERN void asn1Print_HSSCCH_Specific_InformationRespListFDD
   (const char* name, HSSCCH_Specific_InformationRespListFDD* pvalue);

EXTERN HSSCCH_Specific_InformationRespListFDD* asn1Test_HSSCCH_Specific_InformationRespListFDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_FDD_Information_Response                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_FDD_Information_Response {
   struct {
      unsigned hsDSCH_MACdFlow_Specific_InformationRespPresent : 1;
      unsigned hsSCCH_Specific_Information_ResponseFDDPresent : 1;
      unsigned hARQ_MemoryPartitioningPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_Specific_InformationResp hsDSCH_MACdFlow_Specific_InformationResp;
   HSSCCH_Specific_InformationRespListFDD hsSCCH_Specific_Information_ResponseFDD;
   HARQ_MemoryPartitioning hARQ_MemoryPartitioning;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_FDD_Information_Response;

EXTERN int asn1PE_HSDSCH_FDD_Information_Response (ASN1CTXT* pctxt, HSDSCH_FDD_Information_Response* pvalue);

EXTERN int asn1PD_HSDSCH_FDD_Information_Response (ASN1CTXT* pctxt, HSDSCH_FDD_Information_Response* pvalue);

EXTERN void asn1Print_HSDSCH_FDD_Information_Response
   (const char* name, HSDSCH_FDD_Information_Response* pvalue);

EXTERN HSDSCH_FDD_Information_Response* asn1Test_HSDSCH_FDD_Information_Response
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSICH_Info                                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSSICH_Info {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HS_SICH_ID hsSICH_ID;
   TimeSlot timeslot;
   MidambleShiftAndBurstType midambleShiftAndBurstType;
   TDD_ChannelisationCode tDD_ChannelisationCode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSSICH_Info;

EXTERN int asn1PE_HSSICH_Info (ASN1CTXT* pctxt, HSSICH_Info* pvalue);

EXTERN int asn1PD_HSSICH_Info (ASN1CTXT* pctxt, HSSICH_Info* pvalue);

EXTERN void asn1Print_HSSICH_Info
   (const char* name, HSSICH_Info* pvalue);

EXTERN HSSICH_Info* asn1Test_HSSICH_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Specific_InformationRespItemTDD                    */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSSCCH_Specific_InformationRespItemTDD {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlot timeslot;
   MidambleShiftAndBurstType midambleShiftAndBurstType;
   TDD_ChannelisationCode tDD_ChannelisationCode;
   HSSICH_Info hSSICH_Info;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSSCCH_Specific_InformationRespItemTDD;

EXTERN int asn1PE_HSSCCH_Specific_InformationRespItemTDD (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespItemTDD* pvalue);

EXTERN int asn1PD_HSSCCH_Specific_InformationRespItemTDD (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespItemTDD* pvalue);

EXTERN void asn1Print_HSSCCH_Specific_InformationRespItemTDD
   (const char* name, HSSCCH_Specific_InformationRespItemTDD* pvalue);

EXTERN HSSCCH_Specific_InformationRespItemTDD* asn1Test_HSSCCH_Specific_InformationRespItemTDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Specific_InformationRespListTDD                    */
/*                                                            */
/**************************************************************/

/* List of HSSCCH_Specific_InformationRespItemTDD */
typedef Asn1RTDList HSSCCH_Specific_InformationRespListTDD;

EXTERN int asn1PE_HSSCCH_Specific_InformationRespListTDD (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespListTDD* pvalue);

EXTERN int asn1PD_HSSCCH_Specific_InformationRespListTDD (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespListTDD* pvalue);

EXTERN void asn1Print_HSSCCH_Specific_InformationRespListTDD
   (const char* name, HSSCCH_Specific_InformationRespListTDD* pvalue);

EXTERN HSSCCH_Specific_InformationRespListTDD* asn1Test_HSSCCH_Specific_InformationRespListTDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSICH_InfoLCR                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSSICH_InfoLCR {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HS_SICH_ID hsSICH_ID;
   TimeSlotLCR timeslotLCR;
   MidambleShiftLCR midambleShiftLCR;
   TDD_ChannelisationCode tDD_ChannelisationCode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSSICH_InfoLCR;

EXTERN int asn1PE_HSSICH_InfoLCR (ASN1CTXT* pctxt, HSSICH_InfoLCR* pvalue);

EXTERN int asn1PD_HSSICH_InfoLCR (ASN1CTXT* pctxt, HSSICH_InfoLCR* pvalue);

EXTERN void asn1Print_HSSICH_InfoLCR
   (const char* name, HSSICH_InfoLCR* pvalue);

EXTERN HSSICH_InfoLCR* asn1Test_HSSICH_InfoLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Specific_InformationRespItemTDDLCR                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSSCCH_Specific_InformationRespItemTDDLCR {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TimeSlotLCR timeslotLCR;
   MidambleShiftLCR midambleShiftLCR;
   TDD_ChannelisationCode first_TDD_ChannelisationCode;
   TDD_ChannelisationCode second_TDD_ChannelisationCode;
   HSSICH_InfoLCR hSSICH_InfoLCR;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSSCCH_Specific_InformationRespItemTDDLCR;

EXTERN int asn1PE_HSSCCH_Specific_InformationRespItemTDDLCR (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespItemTDDLCR* pvalue);

EXTERN int asn1PD_HSSCCH_Specific_InformationRespItemTDDLCR (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespItemTDDLCR* pvalue);

EXTERN void asn1Print_HSSCCH_Specific_InformationRespItemTDDLCR
   (const char* name, HSSCCH_Specific_InformationRespItemTDDLCR* pvalue);

EXTERN HSSCCH_Specific_InformationRespItemTDDLCR* asn1Test_HSSCCH_Specific_InformationRespItemTDDLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSSCCH_Specific_InformationRespListTDDLCR                 */
/*                                                            */
/**************************************************************/

/* List of HSSCCH_Specific_InformationRespItemTDDLCR */
typedef Asn1RTDList HSSCCH_Specific_InformationRespListTDDLCR;

EXTERN int asn1PE_HSSCCH_Specific_InformationRespListTDDLCR (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespListTDDLCR* pvalue);

EXTERN int asn1PD_HSSCCH_Specific_InformationRespListTDDLCR (ASN1CTXT* pctxt, HSSCCH_Specific_InformationRespListTDDLCR* pvalue);

EXTERN void asn1Print_HSSCCH_Specific_InformationRespListTDDLCR
   (const char* name, HSSCCH_Specific_InformationRespListTDDLCR* pvalue);

EXTERN HSSCCH_Specific_InformationRespListTDDLCR* asn1Test_HSSCCH_Specific_InformationRespListTDDLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_TDD_Information_Response                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_TDD_Information_Response {
   struct {
      unsigned hsDSCH_MACdFlow_Specific_InformationRespPresent : 1;
      unsigned hsSCCH_Specific_Information_ResponseTDDPresent : 1;
      unsigned hsSCCH_Specific_Information_ResponseTDDLCRPresent : 1;
      unsigned hARQ_MemoryPartitioningPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_Specific_InformationResp hsDSCH_MACdFlow_Specific_InformationResp;
   HSSCCH_Specific_InformationRespListTDD hsSCCH_Specific_Information_ResponseTDD;
   HSSCCH_Specific_InformationRespListTDDLCR hsSCCH_Specific_Information_ResponseTDDLCR;
   HARQ_MemoryPartitioning hARQ_MemoryPartitioning;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_TDD_Information_Response;

EXTERN int asn1PE_HSDSCH_TDD_Information_Response (ASN1CTXT* pctxt, HSDSCH_TDD_Information_Response* pvalue);

EXTERN int asn1PD_HSDSCH_TDD_Information_Response (ASN1CTXT* pctxt, HSDSCH_TDD_Information_Response* pvalue);

EXTERN void asn1Print_HSDSCH_TDD_Information_Response
   (const char* name, HSDSCH_TDD_Information_Response* pvalue);

EXTERN HSDSCH_TDD_Information_Response* asn1Test_HSDSCH_TDD_Information_Response
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlows_to_Delete_Item                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_MACdFlows_to_Delete_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSDSCH_MACdFlow_ID hsDSCH_MACdFlow_ID;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_MACdFlows_to_Delete_Item;

EXTERN int asn1PE_HSDSCH_MACdFlows_to_Delete_Item (ASN1CTXT* pctxt, HSDSCH_MACdFlows_to_Delete_Item* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlows_to_Delete_Item (ASN1CTXT* pctxt, HSDSCH_MACdFlows_to_Delete_Item* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlows_to_Delete_Item
   (const char* name, HSDSCH_MACdFlows_to_Delete_Item* pvalue);

EXTERN HSDSCH_MACdFlows_to_Delete_Item* asn1Test_HSDSCH_MACdFlows_to_Delete_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_MACdFlows_to_Delete                                */
/*                                                            */
/**************************************************************/

/* List of HSDSCH_MACdFlows_to_Delete_Item */
typedef Asn1RTDList HSDSCH_MACdFlows_to_Delete;

EXTERN int asn1PE_HSDSCH_MACdFlows_to_Delete (ASN1CTXT* pctxt, HSDSCH_MACdFlows_to_Delete* pvalue);

EXTERN int asn1PD_HSDSCH_MACdFlows_to_Delete (ASN1CTXT* pctxt, HSDSCH_MACdFlows_to_Delete* pvalue);

EXTERN void asn1Print_HSDSCH_MACdFlows_to_Delete
   (const char* name, HSDSCH_MACdFlows_to_Delete* pvalue);

EXTERN HSDSCH_MACdFlows_to_Delete* asn1Test_HSDSCH_MACdFlows_to_Delete
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HS_SICH_Reception_Quality_Value                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HS_SICH_Reception_Quality_Value {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HS_SICH_failed failed_HS_SICH;
   HS_SICH_missed missed_HS_SICH;
   HS_SICH_total total_HS_SICH;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HS_SICH_Reception_Quality_Value;

EXTERN int asn1PE_HS_SICH_Reception_Quality_Value (ASN1CTXT* pctxt, HS_SICH_Reception_Quality_Value* pvalue);

EXTERN int asn1PD_HS_SICH_Reception_Quality_Value (ASN1CTXT* pctxt, HS_SICH_Reception_Quality_Value* pvalue);

EXTERN void asn1Print_HS_SICH_Reception_Quality_Value
   (const char* name, HS_SICH_Reception_Quality_Value* pvalue);

EXTERN HS_SICH_Reception_Quality_Value* asn1Test_HS_SICH_Reception_Quality_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_FDD_Update_Information                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_FDD_Update_Information {
   struct {
      unsigned hsSCCHCodeChangeIndicatorPresent : 1;
      unsigned cqiFeedback_CycleKPresent : 1;
      unsigned cqiRepetitionFactorPresent : 1;
      unsigned ackNackRepetitionFactorPresent : 1;
      unsigned cqiPowerOffsetPresent : 1;
      unsigned ackPowerOffsetPresent : 1;
      unsigned nackPowerOffsetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSSCCH_CodeChangeIndicator hsSCCHCodeChangeIndicator;
   CQI_Feedback_Cycle cqiFeedback_CycleK;
   CQI_RepetitionFactor cqiRepetitionFactor;
   AckNack_RepetitionFactor ackNackRepetitionFactor;
   CQI_Power_Offset cqiPowerOffset;
   Ack_Power_Offset ackPowerOffset;
   Nack_Power_Offset nackPowerOffset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_FDD_Update_Information;

EXTERN int asn1PE_HSDSCH_FDD_Update_Information (ASN1CTXT* pctxt, HSDSCH_FDD_Update_Information* pvalue);

EXTERN int asn1PD_HSDSCH_FDD_Update_Information (ASN1CTXT* pctxt, HSDSCH_FDD_Update_Information* pvalue);

EXTERN void asn1Print_HSDSCH_FDD_Update_Information
   (const char* name, HSDSCH_FDD_Update_Information* pvalue);

EXTERN HSDSCH_FDD_Update_Information* asn1Test_HSDSCH_FDD_Update_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSDSCH_TDD_Update_Information                             */
/*                                                            */
/**************************************************************/

typedef struct EXTERN HSDSCH_TDD_Update_Information {
   struct {
      unsigned hsSCCHCodeChangeIndicatorPresent : 1;
      unsigned tDDAckNackPowerOffsetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   HSSCCH_CodeChangeIndicator hsSCCHCodeChangeIndicator;
   TDD_AckNack_Power_Offset tDDAckNackPowerOffset;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} HSDSCH_TDD_Update_Information;

EXTERN int asn1PE_HSDSCH_TDD_Update_Information (ASN1CTXT* pctxt, HSDSCH_TDD_Update_Information* pvalue);

EXTERN int asn1PD_HSDSCH_TDD_Update_Information (ASN1CTXT* pctxt, HSDSCH_TDD_Update_Information* pvalue);

EXTERN void asn1Print_HSDSCH_TDD_Update_Information
   (const char* name, HSDSCH_TDD_Update_Information* pvalue);

EXTERN HSDSCH_TDD_Update_Information* asn1Test_HSDSCH_TDD_Update_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationReportCharacteristicsType_ReportPeriodicity    */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InformationReportCharacteristicsType_ReportPeriodicity_min 1
#define T_InformationReportCharacteristicsType_ReportPeriodicity_hours 2
#define T_InformationReportCharacteristicsType_ReportPeriodicity_extElem1 3

typedef struct EXTERN InformationReportCharacteristicsType_ReportPeriodicity {
   int t;
   union {
      /* t = 1 */
      ReportPeriodicity_Scaledmin min;
      /* t = 2 */
      ReportPeriodicity_Scaledhour hours;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} InformationReportCharacteristicsType_ReportPeriodicity;

EXTERN int asn1PE_InformationReportCharacteristicsType_ReportPeriodicity (ASN1CTXT* pctxt, InformationReportCharacteristicsType_ReportPeriodicity* pvalue);

EXTERN int asn1PD_InformationReportCharacteristicsType_ReportPeriodicity (ASN1CTXT* pctxt, InformationReportCharacteristicsType_ReportPeriodicity* pvalue);

EXTERN void asn1Print_InformationReportCharacteristicsType_ReportPeriodicity
   (const char* name, InformationReportCharacteristicsType_ReportPeriodicity* pvalue);

EXTERN InformationReportCharacteristicsType_ReportPeriodicity* asn1Test_InformationReportCharacteristicsType_ReportPeriodicity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationThresholds                                     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InformationThresholds_dgps    1
#define T_InformationThresholds_extElem1 2

typedef struct EXTERN InformationThresholds {
   int t;
   union {
      /* t = 1 */
      DGPSThresholds *dgps;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} InformationThresholds;

EXTERN int asn1PE_InformationThresholds (ASN1CTXT* pctxt, InformationThresholds* pvalue);

EXTERN int asn1PD_InformationThresholds (ASN1CTXT* pctxt, InformationThresholds* pvalue);

EXTERN void asn1Print_InformationThresholds
   (const char* name, InformationThresholds* pvalue);

EXTERN InformationThresholds* asn1Test_InformationThresholds
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationReportCharacteristicsType_OnModification       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InformationReportCharacteristicsType_OnModification {
   struct {
      unsigned information_thresholdsPresent : 1;
      unsigned ie_ExtensionsPresent : 1;
   } m;
   InformationThresholds information_thresholds;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} InformationReportCharacteristicsType_OnModification;

EXTERN int asn1PE_InformationReportCharacteristicsType_OnModification (ASN1CTXT* pctxt, InformationReportCharacteristicsType_OnModification* pvalue);

EXTERN int asn1PD_InformationReportCharacteristicsType_OnModification (ASN1CTXT* pctxt, InformationReportCharacteristicsType_OnModification* pvalue);

EXTERN void asn1Print_InformationReportCharacteristicsType_OnModification
   (const char* name, InformationReportCharacteristicsType_OnModification* pvalue);

EXTERN InformationReportCharacteristicsType_OnModification* asn1Test_InformationReportCharacteristicsType_OnModification
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationReportCharacteristics                          */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_InformationReportCharacteristics_onDemand 1
#define T_InformationReportCharacteristics_periodic 2
#define T_InformationReportCharacteristics_onModification 3
#define T_InformationReportCharacteristics_extElem1 4

typedef struct EXTERN InformationReportCharacteristics {
   int t;
   union {
      /* t = 1 */
      /* t = 2 */
      InformationReportCharacteristicsType_ReportPeriodicity *periodic;
      /* t = 3 */
      InformationReportCharacteristicsType_OnModification *onModification;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} InformationReportCharacteristics;

EXTERN int asn1PE_InformationReportCharacteristics (ASN1CTXT* pctxt, InformationReportCharacteristics* pvalue);

EXTERN int asn1PD_InformationReportCharacteristics (ASN1CTXT* pctxt, InformationReportCharacteristics* pvalue);

EXTERN void asn1Print_InformationReportCharacteristics
   (const char* name, InformationReportCharacteristics* pvalue);

EXTERN InformationReportCharacteristics* asn1Test_InformationReportCharacteristics
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InformationType                                           */
/*                                                            */
/**************************************************************/

typedef struct EXTERN InformationType {
   struct {
      unsigned gPSInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Information_Type_Item information_Type_Item;
   GPS_Information gPSInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} InformationType;

EXTERN int asn1PE_InformationType (ASN1CTXT* pctxt, InformationType* pvalue);

EXTERN int asn1PD_InformationType (ASN1CTXT* pctxt, InformationType* pvalue);

EXTERN void asn1Print_InformationType
   (const char* name, InformationType* pvalue);

EXTERN InformationType* asn1Test_InformationType
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageStructure_element                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN MessageStructure_element {
   struct {
      unsigned repetitionNumberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ProtocolIE_ID iE_ID;
   RepetitionNumber1 repetitionNumber;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} MessageStructure_element;

EXTERN int asn1PE_MessageStructure_element (ASN1CTXT* pctxt, MessageStructure_element* pvalue);

EXTERN int asn1PD_MessageStructure_element (ASN1CTXT* pctxt, MessageStructure_element* pvalue);

EXTERN void asn1Print_MessageStructure_element
   (const char* name, MessageStructure_element* pvalue);

EXTERN MessageStructure_element* asn1Test_MessageStructure_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MessageStructure                                          */
/*                                                            */
/**************************************************************/

/* List of MessageStructure_element */
typedef Asn1RTDList MessageStructure;

EXTERN int asn1PE_MessageStructure (ASN1CTXT* pctxt, MessageStructure* pvalue);

EXTERN int asn1PD_MessageStructure (ASN1CTXT* pctxt, MessageStructure* pvalue);

EXTERN void asn1Print_MessageStructure
   (const char* name, MessageStructure* pvalue);

EXTERN MessageStructure* asn1Test_MessageStructure
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UC_Id                                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UC_Id {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RNC_ID rNC_ID;
   C_ID c_ID;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UC_Id;

EXTERN int asn1PE_UC_Id (ASN1CTXT* pctxt, UC_Id* pvalue);

EXTERN int asn1PD_UC_Id (ASN1CTXT* pctxt, UC_Id* pvalue);

EXTERN void asn1Print_UC_Id
   (const char* name, UC_Id* pvalue);

EXTERN UC_Id* asn1Test_UC_Id
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NeighbouringFDDCellMeasurementInformation                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NeighbouringFDDCellMeasurementInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UC_Id uC_Id;
   UARFCN uARFCN;
   PrimaryScramblingCode primaryScramblingCode;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} NeighbouringFDDCellMeasurementInformation;

EXTERN int asn1PE_NeighbouringFDDCellMeasurementInformation (ASN1CTXT* pctxt, NeighbouringFDDCellMeasurementInformation* pvalue);

EXTERN int asn1PD_NeighbouringFDDCellMeasurementInformation (ASN1CTXT* pctxt, NeighbouringFDDCellMeasurementInformation* pvalue);

EXTERN void asn1Print_NeighbouringFDDCellMeasurementInformation
   (const char* name, NeighbouringFDDCellMeasurementInformation* pvalue);

EXTERN NeighbouringFDDCellMeasurementInformation* asn1Test_NeighbouringFDDCellMeasurementInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NeighbouringTDDCellMeasurementInformation                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NeighbouringTDDCellMeasurementInformation {
   struct {
      unsigned timeSlotPresent : 1;
      unsigned midambleShiftAndBurstTypePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UC_Id uC_Id;
   UARFCN uARFCN;
   CellParameterID cellParameterID;
   TimeSlot timeSlot;
   MidambleShiftAndBurstType midambleShiftAndBurstType;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} NeighbouringTDDCellMeasurementInformation;

EXTERN int asn1PE_NeighbouringTDDCellMeasurementInformation (ASN1CTXT* pctxt, NeighbouringTDDCellMeasurementInformation* pvalue);

EXTERN int asn1PD_NeighbouringTDDCellMeasurementInformation (ASN1CTXT* pctxt, NeighbouringTDDCellMeasurementInformation* pvalue);

EXTERN void asn1Print_NeighbouringTDDCellMeasurementInformation
   (const char* name, NeighbouringTDDCellMeasurementInformation* pvalue);

EXTERN NeighbouringTDDCellMeasurementInformation* asn1Test_NeighbouringTDDCellMeasurementInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NeighbouringCellMeasurementInformation_element            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_NeighbouringCellMeasurementInformation_element_neighbouringFDDCellMeasurementInformation 1
#define T_NeighbouringCellMeasurementInformation_element_neighbouringTDDCellMeasurementInformation 2
#define T_NeighbouringCellMeasurementInformation_element_extension_neighbouringCellMeasurementInformation 3
#define T_NeighbouringCellMeasurementInformation_element_extElem1 4

typedef struct EXTERN NeighbouringCellMeasurementInformation_element {
   int t;
   union {
      /* t = 1 */
      NeighbouringFDDCellMeasurementInformation *neighbouringFDDCellMeasurementInformation;
      /* t = 2 */
      NeighbouringTDDCellMeasurementInformation *neighbouringTDDCellMeasurementInformation;
      /* t = 3 */
      Extension_neighbouringCellMeasurementInformation *extension_neighbouringCellMeasurementInformation;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} NeighbouringCellMeasurementInformation_element;

EXTERN int asn1PE_NeighbouringCellMeasurementInformation_element (ASN1CTXT* pctxt, NeighbouringCellMeasurementInformation_element* pvalue);

EXTERN int asn1PD_NeighbouringCellMeasurementInformation_element (ASN1CTXT* pctxt, NeighbouringCellMeasurementInformation_element* pvalue);

EXTERN void asn1Print_NeighbouringCellMeasurementInformation_element
   (const char* name, NeighbouringCellMeasurementInformation_element* pvalue);

EXTERN NeighbouringCellMeasurementInformation_element* asn1Test_NeighbouringCellMeasurementInformation_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NeighbouringCellMeasurementInformation                    */
/*                                                            */
/**************************************************************/

/* List of NeighbouringCellMeasurementInformation_element */
typedef Asn1RTDList NeighbouringCellMeasurementInformation;

EXTERN int asn1PE_NeighbouringCellMeasurementInformation (ASN1CTXT* pctxt, NeighbouringCellMeasurementInformation* pvalue);

EXTERN int asn1PD_NeighbouringCellMeasurementInformation (ASN1CTXT* pctxt, NeighbouringCellMeasurementInformation* pvalue);

EXTERN void asn1Print_NeighbouringCellMeasurementInformation
   (const char* name, NeighbouringCellMeasurementInformation* pvalue);

EXTERN NeighbouringCellMeasurementInformation* asn1Test_NeighbouringCellMeasurementInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NeighbouringTDDCellMeasurementInformationLCR              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NeighbouringTDDCellMeasurementInformationLCR {
   struct {
      unsigned timeSlotLCRPresent : 1;
      unsigned midambleShiftLCRPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UC_Id uC_Id;
   UARFCN uARFCN;
   CellParameterID cellParameterID;
   TimeSlotLCR timeSlotLCR;
   MidambleShiftLCR midambleShiftLCR;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} NeighbouringTDDCellMeasurementInformationLCR;

EXTERN int asn1PE_NeighbouringTDDCellMeasurementInformationLCR (ASN1CTXT* pctxt, NeighbouringTDDCellMeasurementInformationLCR* pvalue);

EXTERN int asn1PD_NeighbouringTDDCellMeasurementInformationLCR (ASN1CTXT* pctxt, NeighbouringTDDCellMeasurementInformationLCR* pvalue);

EXTERN void asn1Print_NeighbouringTDDCellMeasurementInformationLCR
   (const char* name, NeighbouringTDDCellMeasurementInformationLCR* pvalue);

EXTERN NeighbouringTDDCellMeasurementInformationLCR* asn1Test_NeighbouringTDDCellMeasurementInformationLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NI_Information                                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN NI_Information {
   OSUINT32 n;
   Notification_Indicator elem[256];
} NI_Information;

EXTERN int asn1PE_NI_Information (ASN1CTXT* pctxt, NI_Information* pvalue);

EXTERN int asn1PD_NI_Information (ASN1CTXT* pctxt, NI_Information* pvalue);

EXTERN void asn1Print_NI_Information
   (const char* name, NI_Information* pvalue);

EXTERN NI_Information* asn1Test_NI_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RL_Specific_DCH_Info_Item                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RL_Specific_DCH_Info_Item {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportlayeraddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DCH_ID dCH_id;
   BindingID bindingID;
   TransportLayerAddress transportlayeraddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} RL_Specific_DCH_Info_Item;

EXTERN int asn1PE_RL_Specific_DCH_Info_Item (ASN1CTXT* pctxt, RL_Specific_DCH_Info_Item* pvalue);

EXTERN int asn1PD_RL_Specific_DCH_Info_Item (ASN1CTXT* pctxt, RL_Specific_DCH_Info_Item* pvalue);

EXTERN void asn1Print_RL_Specific_DCH_Info_Item
   (const char* name, RL_Specific_DCH_Info_Item* pvalue);

EXTERN RL_Specific_DCH_Info_Item* asn1Test_RL_Specific_DCH_Info_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RL_Specific_DCH_Info                                      */
/*                                                            */
/**************************************************************/

/* List of RL_Specific_DCH_Info_Item */
typedef Asn1RTDList RL_Specific_DCH_Info;

EXTERN int asn1PE_RL_Specific_DCH_Info (ASN1CTXT* pctxt, RL_Specific_DCH_Info* pvalue);

EXTERN int asn1PD_RL_Specific_DCH_Info (ASN1CTXT* pctxt, RL_Specific_DCH_Info* pvalue);

EXTERN void asn1Print_RL_Specific_DCH_Info
   (const char* name, RL_Specific_DCH_Info* pvalue);

EXTERN RL_Specific_DCH_Info* asn1Test_RL_Specific_DCH_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RL_Specific_E_DCH_Info_Item                               */
/*                                                            */
/**************************************************************/

typedef struct EXTERN RL_Specific_E_DCH_Info_Item {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportlayeraddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_DCH_MACdFlow_ID e_DCH_MACdFlow_ID;
   BindingID bindingID;
   TransportLayerAddress transportlayeraddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} RL_Specific_E_DCH_Info_Item;

EXTERN int asn1PE_RL_Specific_E_DCH_Info_Item (ASN1CTXT* pctxt, RL_Specific_E_DCH_Info_Item* pvalue);

EXTERN int asn1PD_RL_Specific_E_DCH_Info_Item (ASN1CTXT* pctxt, RL_Specific_E_DCH_Info_Item* pvalue);

EXTERN void asn1Print_RL_Specific_E_DCH_Info_Item
   (const char* name, RL_Specific_E_DCH_Info_Item* pvalue);

EXTERN RL_Specific_E_DCH_Info_Item* asn1Test_RL_Specific_E_DCH_Info_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RL_Specific_E_DCH_Info                                    */
/*                                                            */
/**************************************************************/

/* List of RL_Specific_E_DCH_Info_Item */
typedef Asn1RTDList RL_Specific_E_DCH_Info;

EXTERN int asn1PE_RL_Specific_E_DCH_Info (ASN1CTXT* pctxt, RL_Specific_E_DCH_Info* pvalue);

EXTERN int asn1PD_RL_Specific_E_DCH_Info (ASN1CTXT* pctxt, RL_Specific_E_DCH_Info* pvalue);

EXTERN void asn1Print_RL_Specific_E_DCH_Info
   (const char* name, RL_Specific_E_DCH_Info* pvalue);

EXTERN RL_Specific_E_DCH_Info* asn1Test_RL_Specific_E_DCH_Info
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_ReportPeriodicity               */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ReportCharacteristicsType_ReportPeriodicity_msec 1
#define T_ReportCharacteristicsType_ReportPeriodicity_min 2
#define T_ReportCharacteristicsType_ReportPeriodicity_extElem1 3

typedef struct EXTERN ReportCharacteristicsType_ReportPeriodicity {
   int t;
   union {
      /* t = 1 */
      ReportPeriodicity_Scaledmsec msec;
      /* t = 2 */
      ReportPeriodicity_Scaledmin min;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} ReportCharacteristicsType_ReportPeriodicity;

EXTERN int asn1PE_ReportCharacteristicsType_ReportPeriodicity (ASN1CTXT* pctxt, ReportCharacteristicsType_ReportPeriodicity* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_ReportPeriodicity (ASN1CTXT* pctxt, ReportCharacteristicsType_ReportPeriodicity* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_ReportPeriodicity
   (const char* name, ReportCharacteristicsType_ReportPeriodicity* pvalue);

EXTERN ReportCharacteristicsType_ReportPeriodicity* asn1Test_ReportCharacteristicsType_ReportPeriodicity
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_MeasurementThreshold            */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ReportCharacteristicsType_MeasurementThreshold_received_total_wide_band_power 1
#define T_ReportCharacteristicsType_MeasurementThreshold_transmitted_carrier_power 2
#define T_ReportCharacteristicsType_MeasurementThreshold_acknowledged_prach_preambles 3
#define T_ReportCharacteristicsType_MeasurementThreshold_uL_TimeslotISCP 4
#define T_ReportCharacteristicsType_MeasurementThreshold_sir 5
#define T_ReportCharacteristicsType_MeasurementThreshold_sir_error 6
#define T_ReportCharacteristicsType_MeasurementThreshold_transmitted_code_power 7
#define T_ReportCharacteristicsType_MeasurementThreshold_rscp 8
#define T_ReportCharacteristicsType_MeasurementThreshold_rx_timing_deviation 9
#define T_ReportCharacteristicsType_MeasurementThreshold_round_trip_time 10
#define T_ReportCharacteristicsType_MeasurementThreshold_notUsed_1_acknowledged_PCPCH_access_preambles 11
#define T_ReportCharacteristicsType_MeasurementThreshold_notUsed_2_detected_PCPCH_access_preambles 12
#define T_ReportCharacteristicsType_MeasurementThreshold_extension_ReportCharacteristicsType_MeasurementThreshold 13
#define T_ReportCharacteristicsType_MeasurementThreshold_extElem1 14

typedef struct EXTERN ReportCharacteristicsType_MeasurementThreshold {
   int t;
   union {
      /* t = 1 */
      Received_total_wide_band_power_Value received_total_wide_band_power;
      /* t = 2 */
      Transmitted_Carrier_Power_Value transmitted_carrier_power;
      /* t = 3 */
      Acknowledged_PRACH_preambles_Value acknowledged_prach_preambles;
      /* t = 4 */
      UL_TimeslotISCP_Value uL_TimeslotISCP;
      /* t = 5 */
      SIR_Value sir;
      /* t = 6 */
      SIR_Error_Value sir_error;
      /* t = 7 */
      Transmitted_Code_Power_Value transmitted_code_power;
      /* t = 8 */
      RSCP_Value rscp;
      /* t = 9 */
      Rx_Timing_Deviation_Value rx_timing_deviation;
      /* t = 10 */
      Round_Trip_Time_Value round_trip_time;
      /* t = 11 */
      /* t = 12 */
      /* t = 13 */
      Extension_ReportCharacteristicsType_MeasurementThreshold *extension_ReportCharacteristicsType_MeasurementThreshold;
      /* t = 14 */
      ASN1OpenType *extElem1;
   } u;
} ReportCharacteristicsType_MeasurementThreshold;

EXTERN int asn1PE_ReportCharacteristicsType_MeasurementThreshold (ASN1CTXT* pctxt, ReportCharacteristicsType_MeasurementThreshold* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_MeasurementThreshold (ASN1CTXT* pctxt, ReportCharacteristicsType_MeasurementThreshold* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_MeasurementThreshold
   (const char* name, ReportCharacteristicsType_MeasurementThreshold* pvalue);

EXTERN ReportCharacteristicsType_MeasurementThreshold* asn1Test_ReportCharacteristicsType_MeasurementThreshold
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_ScaledMeasurementHysteresisTim  */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ReportCharacteristicsType_ScaledMeasurementHysteresisTime_msec 1
#define T_ReportCharacteristicsType_ScaledMeasurementHysteresisTime_extElem1 2

typedef struct EXTERN ReportCharacteristicsType_ScaledMeasurementHysteresisTime {
   int t;
   union {
      /* t = 1 */
      MeasurementHysteresisTime_Scaledmsec msec;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} ReportCharacteristicsType_ScaledMeasurementHysteresisTime;

EXTERN int asn1PE_ReportCharacteristicsType_ScaledMeasurementHysteresisTime (ASN1CTXT* pctxt, ReportCharacteristicsType_ScaledMeasurementHysteresisTime* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_ScaledMeasurementHysteresisTime (ASN1CTXT* pctxt, ReportCharacteristicsType_ScaledMeasurementHysteresisTime* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_ScaledMeasurementHysteresisTime
   (const char* name, ReportCharacteristicsType_ScaledMeasurementHysteresisTime* pvalue);

EXTERN ReportCharacteristicsType_ScaledMeasurementHysteresisTime* asn1Test_ReportCharacteristicsType_ScaledMeasurementHysteresisTime
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_EventA                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_EventA {
   struct {
      unsigned measurementHysteresisTimePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold;
   ReportCharacteristicsType_ScaledMeasurementHysteresisTime measurementHysteresisTime;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_EventA;

EXTERN int asn1PE_ReportCharacteristicsType_EventA (ASN1CTXT* pctxt, ReportCharacteristicsType_EventA* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_EventA (ASN1CTXT* pctxt, ReportCharacteristicsType_EventA* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_EventA
   (const char* name, ReportCharacteristicsType_EventA* pvalue);

EXTERN ReportCharacteristicsType_EventA* asn1Test_ReportCharacteristicsType_EventA
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_EventB                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_EventB {
   struct {
      unsigned measurementHysteresisTimePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold;
   ReportCharacteristicsType_ScaledMeasurementHysteresisTime measurementHysteresisTime;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_EventB;

EXTERN int asn1PE_ReportCharacteristicsType_EventB (ASN1CTXT* pctxt, ReportCharacteristicsType_EventB* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_EventB (ASN1CTXT* pctxt, ReportCharacteristicsType_EventB* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_EventB
   (const char* name, ReportCharacteristicsType_EventB* pvalue);

EXTERN ReportCharacteristicsType_EventB* asn1Test_ReportCharacteristicsType_EventB
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_MeasurementIncreaseDecreaseThr  */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_received_total_wide_band_power 1
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_transmitted_carrier_power 2
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_acknowledged_prach_preambles 3
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_uL_TimeslotISCP 4
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_sir 5
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_sir_error 6
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_transmitted_code_power 7
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_rscp 8
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_round_trip_time 9
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_notUsed_1_acknowledged_PCPCH_access_preambles 10
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_notUsed_2_detected_PCPCH_access_preambles 11
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold 12
#define T_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold_extElem1 13

typedef struct EXTERN ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold {
   int t;
   union {
      /* t = 1 */
      Received_total_wide_band_power_Value_IncrDecrThres received_total_wide_band_power;
      /* t = 2 */
      Transmitted_Carrier_Power_Value transmitted_carrier_power;
      /* t = 3 */
      Acknowledged_PRACH_preambles_Value acknowledged_prach_preambles;
      /* t = 4 */
      UL_TimeslotISCP_Value_IncrDecrThres uL_TimeslotISCP;
      /* t = 5 */
      SIR_Value_IncrDecrThres sir;
      /* t = 6 */
      SIR_Error_Value_IncrDecrThres sir_error;
      /* t = 7 */
      Transmitted_Code_Power_Value_IncrDecrThres transmitted_code_power;
      /* t = 8 */
      RSCP_Value_IncrDecrThres rscp;
      /* t = 9 */
      Round_Trip_Time_IncrDecrThres round_trip_time;
      /* t = 10 */
      /* t = 11 */
      /* t = 12 */
      Extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold *extension_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold;
      /* t = 13 */
      ASN1OpenType *extElem1;
   } u;
} ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold;

EXTERN int asn1PE_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold (ASN1CTXT* pctxt, ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold (ASN1CTXT* pctxt, ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold
   (const char* name, ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* pvalue);

EXTERN ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold* asn1Test_ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_ScaledMeasurementChangeTime     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ReportCharacteristicsType_ScaledMeasurementChangeTime_msec 1
#define T_ReportCharacteristicsType_ScaledMeasurementChangeTime_extElem1 2

typedef struct EXTERN ReportCharacteristicsType_ScaledMeasurementChangeTime {
   int t;
   union {
      /* t = 1 */
      MeasurementChangeTime_Scaledmsec msec;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} ReportCharacteristicsType_ScaledMeasurementChangeTime;

EXTERN int asn1PE_ReportCharacteristicsType_ScaledMeasurementChangeTime (ASN1CTXT* pctxt, ReportCharacteristicsType_ScaledMeasurementChangeTime* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_ScaledMeasurementChangeTime (ASN1CTXT* pctxt, ReportCharacteristicsType_ScaledMeasurementChangeTime* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_ScaledMeasurementChangeTime
   (const char* name, ReportCharacteristicsType_ScaledMeasurementChangeTime* pvalue);

EXTERN ReportCharacteristicsType_ScaledMeasurementChangeTime* asn1Test_ReportCharacteristicsType_ScaledMeasurementChangeTime
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_EventC                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_EventC {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold measurementIncreaseThreshold;
   ReportCharacteristicsType_ScaledMeasurementChangeTime measurementChangeTime;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_EventC;

EXTERN int asn1PE_ReportCharacteristicsType_EventC (ASN1CTXT* pctxt, ReportCharacteristicsType_EventC* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_EventC (ASN1CTXT* pctxt, ReportCharacteristicsType_EventC* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_EventC
   (const char* name, ReportCharacteristicsType_EventC* pvalue);

EXTERN ReportCharacteristicsType_EventC* asn1Test_ReportCharacteristicsType_EventC
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_EventD                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_EventD {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementIncreaseDecreaseThreshold measurementDecreaseThreshold;
   ReportCharacteristicsType_ScaledMeasurementChangeTime measurementChangeTime;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_EventD;

EXTERN int asn1PE_ReportCharacteristicsType_EventD (ASN1CTXT* pctxt, ReportCharacteristicsType_EventD* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_EventD (ASN1CTXT* pctxt, ReportCharacteristicsType_EventD* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_EventD
   (const char* name, ReportCharacteristicsType_EventD* pvalue);

EXTERN ReportCharacteristicsType_EventD* asn1Test_ReportCharacteristicsType_EventD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_EventE                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_EventE {
   struct {
      unsigned measurementThreshold2Present : 1;
      unsigned measurementHysteresisTimePresent : 1;
      unsigned reportPeriodicityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold1;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold2;
   ReportCharacteristicsType_ScaledMeasurementHysteresisTime measurementHysteresisTime;
   ReportCharacteristicsType_ReportPeriodicity reportPeriodicity;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_EventE;

EXTERN int asn1PE_ReportCharacteristicsType_EventE (ASN1CTXT* pctxt, ReportCharacteristicsType_EventE* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_EventE (ASN1CTXT* pctxt, ReportCharacteristicsType_EventE* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_EventE
   (const char* name, ReportCharacteristicsType_EventE* pvalue);

EXTERN ReportCharacteristicsType_EventE* asn1Test_ReportCharacteristicsType_EventE
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_EventF                          */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_EventF {
   struct {
      unsigned measurementThreshold2Present : 1;
      unsigned measurementHysteresisTimePresent : 1;
      unsigned reportPeriodicityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold1;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold2;
   ReportCharacteristicsType_ScaledMeasurementHysteresisTime measurementHysteresisTime;
   ReportCharacteristicsType_ReportPeriodicity reportPeriodicity;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_EventF;

EXTERN int asn1PE_ReportCharacteristicsType_EventF (ASN1CTXT* pctxt, ReportCharacteristicsType_EventF* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_EventF (ASN1CTXT* pctxt, ReportCharacteristicsType_EventF* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_EventF
   (const char* name, ReportCharacteristicsType_EventF* pvalue);

EXTERN ReportCharacteristicsType_EventF* asn1Test_ReportCharacteristicsType_EventF
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristics                                     */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_ReportCharacteristics_onDemand 1
#define T_ReportCharacteristics_periodic 2
#define T_ReportCharacteristics_event_a 3
#define T_ReportCharacteristics_event_b 4
#define T_ReportCharacteristics_event_c 5
#define T_ReportCharacteristics_event_d 6
#define T_ReportCharacteristics_event_e 7
#define T_ReportCharacteristics_event_f 8
#define T_ReportCharacteristics_extension_ReportCharacteristics 9
#define T_ReportCharacteristics_extElem1 10

typedef struct EXTERN ReportCharacteristics {
   int t;
   union {
      /* t = 1 */
      /* t = 2 */
      ReportCharacteristicsType_ReportPeriodicity *periodic;
      /* t = 3 */
      ReportCharacteristicsType_EventA *event_a;
      /* t = 4 */
      ReportCharacteristicsType_EventB *event_b;
      /* t = 5 */
      ReportCharacteristicsType_EventC *event_c;
      /* t = 6 */
      ReportCharacteristicsType_EventD *event_d;
      /* t = 7 */
      ReportCharacteristicsType_EventE *event_e;
      /* t = 8 */
      ReportCharacteristicsType_EventF *event_f;
      /* t = 9 */
      Extension_ReportCharacteristics *extension_ReportCharacteristics;
      /* t = 10 */
      ASN1OpenType *extElem1;
   } u;
} ReportCharacteristics;

EXTERN int asn1PE_ReportCharacteristics (ASN1CTXT* pctxt, ReportCharacteristics* pvalue);

EXTERN int asn1PD_ReportCharacteristics (ASN1CTXT* pctxt, ReportCharacteristics* pvalue);

EXTERN void asn1Print_ReportCharacteristics
   (const char* name, ReportCharacteristics* pvalue);

EXTERN ReportCharacteristics* asn1Test_ReportCharacteristics
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristicsType_OnModification                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN ReportCharacteristicsType_OnModification {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ReportCharacteristicsType_MeasurementThreshold measurementThreshold;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} ReportCharacteristicsType_OnModification;

EXTERN int asn1PE_ReportCharacteristicsType_OnModification (ASN1CTXT* pctxt, ReportCharacteristicsType_OnModification* pvalue);

EXTERN int asn1PD_ReportCharacteristicsType_OnModification (ASN1CTXT* pctxt, ReportCharacteristicsType_OnModification* pvalue);

EXTERN void asn1Print_ReportCharacteristicsType_OnModification
   (const char* name, ReportCharacteristicsType_OnModification* pvalue);

EXTERN ReportCharacteristicsType_OnModification* asn1Test_ReportCharacteristicsType_OnModification
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Received_total_wide_band_power_For_CellPortion_Value_Ite  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Received_total_wide_band_power_For_CellPortion_Value_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellPortionID cellPortionID;
   Received_total_wide_band_power_Value received_total_wide_band_power_value;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Received_total_wide_band_power_For_CellPortion_Value_Item;

EXTERN int asn1PE_Received_total_wide_band_power_For_CellPortion_Value_Item (ASN1CTXT* pctxt, Received_total_wide_band_power_For_CellPortion_Value_Item* pvalue);

EXTERN int asn1PD_Received_total_wide_band_power_For_CellPortion_Value_Item (ASN1CTXT* pctxt, Received_total_wide_band_power_For_CellPortion_Value_Item* pvalue);

EXTERN void asn1Print_Received_total_wide_band_power_For_CellPortion_Value_Item
   (const char* name, Received_total_wide_band_power_For_CellPortion_Value_Item* pvalue);

EXTERN Received_total_wide_band_power_For_CellPortion_Value_Item* asn1Test_Received_total_wide_band_power_For_CellPortion_Value_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Received_total_wide_band_power_For_CellPortion_Value      */
/*                                                            */
/**************************************************************/

/* List of Received_total_wide_band_power_For_CellPortion_Value_Item */
typedef Asn1RTDList Received_total_wide_band_power_For_CellPortion_Value;

EXTERN int asn1PE_Received_total_wide_band_power_For_CellPortion_Value (ASN1CTXT* pctxt, Received_total_wide_band_power_For_CellPortion_Value* pvalue);

EXTERN int asn1PD_Received_total_wide_band_power_For_CellPortion_Value (ASN1CTXT* pctxt, Received_total_wide_band_power_For_CellPortion_Value* pvalue);

EXTERN void asn1Print_Received_total_wide_band_power_For_CellPortion_Value
   (const char* name, Received_total_wide_band_power_For_CellPortion_Value* pvalue);

EXTERN Received_total_wide_band_power_For_CellPortion_Value* asn1Test_Received_total_wide_band_power_For_CellPortion_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtItem                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SAT_Info_Almanac_ExtItem {
   struct {
      unsigned ie_ExtensionsPresent : 1;
   } m;
   DATA_ID data_id;
   SAT_ID sat_id;
   SAT_Info_Almanac_ExtItem_gps_e_alm gps_e_alm;
   SAT_Info_Almanac_ExtItem_gps_toa_alm gps_toa_alm;
   SAT_Info_Almanac_ExtItem_gps_delta_I_alm gps_delta_I_alm;
   SAT_Info_Almanac_ExtItem_omegadot_alm omegadot_alm;
   SAT_Info_Almanac_ExtItem_svhealth_alm svhealth_alm;
   SAT_Info_Almanac_ExtItem_gps_a_sqrt_alm gps_a_sqrt_alm;
   SAT_Info_Almanac_ExtItem_omegazero_alm omegazero_alm;
   SAT_Info_Almanac_ExtItem_m_zero_alm m_zero_alm;
   SAT_Info_Almanac_ExtItem_gps_omega_alm gps_omega_alm;
   SAT_Info_Almanac_ExtItem_gps_af_zero_alm gps_af_zero_alm;
   SAT_Info_Almanac_ExtItem_gps_af_one_alm gps_af_one_alm;
   ProtocolExtensionContainer ie_Extensions;
   Asn1RTDList extElem1;
} SAT_Info_Almanac_ExtItem;

EXTERN int asn1PE_SAT_Info_Almanac_ExtItem (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtItem (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtItem* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtItem
   (const char* name, SAT_Info_Almanac_ExtItem* pvalue);

EXTERN SAT_Info_Almanac_ExtItem* asn1Test_SAT_Info_Almanac_ExtItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SAT_Info_Almanac_ExtList                                  */
/*                                                            */
/**************************************************************/

/* List of SAT_Info_Almanac_ExtItem */
typedef Asn1RTDList SAT_Info_Almanac_ExtList;

EXTERN int asn1PE_SAT_Info_Almanac_ExtList (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtList* pvalue);

EXTERN int asn1PD_SAT_Info_Almanac_ExtList (ASN1CTXT* pctxt, SAT_Info_Almanac_ExtList* pvalue);

EXTERN void asn1Print_SAT_Info_Almanac_ExtList
   (const char* name, SAT_Info_Almanac_ExtList* pvalue);

EXTERN SAT_Info_Almanac_ExtList* asn1Test_SAT_Info_Almanac_ExtList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Secondary_CPICH_Information_Change                        */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_Secondary_CPICH_Information_Change_new_secondary_CPICH 1
#define T_Secondary_CPICH_Information_Change_secondary_CPICH_shall_not_be_used 2
#define T_Secondary_CPICH_Information_Change_extElem1 3

typedef struct EXTERN Secondary_CPICH_Information_Change {
   int t;
   union {
      /* t = 1 */
      CommonPhysicalChannelID new_secondary_CPICH;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} Secondary_CPICH_Information_Change;

EXTERN int asn1PE_Secondary_CPICH_Information_Change (ASN1CTXT* pctxt, Secondary_CPICH_Information_Change* pvalue);

EXTERN int asn1PD_Secondary_CPICH_Information_Change (ASN1CTXT* pctxt, Secondary_CPICH_Information_Change* pvalue);

EXTERN void asn1Print_Secondary_CPICH_Information_Change
   (const char* name, Secondary_CPICH_Information_Change* pvalue);

EXTERN Secondary_CPICH_Information_Change* asn1Test_Secondary_CPICH_Information_Change
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Serving_E_DCH_RL_in_this_NodeB                            */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Serving_E_DCH_RL_in_this_NodeB {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RL_ID rL_ID;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Serving_E_DCH_RL_in_this_NodeB;

EXTERN int asn1PE_Serving_E_DCH_RL_in_this_NodeB (ASN1CTXT* pctxt, Serving_E_DCH_RL_in_this_NodeB* pvalue);

EXTERN int asn1PD_Serving_E_DCH_RL_in_this_NodeB (ASN1CTXT* pctxt, Serving_E_DCH_RL_in_this_NodeB* pvalue);

EXTERN void asn1Print_Serving_E_DCH_RL_in_this_NodeB
   (const char* name, Serving_E_DCH_RL_in_this_NodeB* pvalue);

EXTERN Serving_E_DCH_RL_in_this_NodeB* asn1Test_Serving_E_DCH_RL_in_this_NodeB
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Serving_E_DCH_RL_ID                                       */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_Serving_E_DCH_RL_ID_serving_E_DCH_RL_in_this_NodeB 1
#define T_Serving_E_DCH_RL_ID_serving_E_DCH_RL_not_in_this_NodeB 2
#define T_Serving_E_DCH_RL_ID_extElem1  3

typedef struct EXTERN Serving_E_DCH_RL_ID {
   int t;
   union {
      /* t = 1 */
      Serving_E_DCH_RL_in_this_NodeB *serving_E_DCH_RL_in_this_NodeB;
      /* t = 2 */
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} Serving_E_DCH_RL_ID;

EXTERN int asn1PE_Serving_E_DCH_RL_ID (ASN1CTXT* pctxt, Serving_E_DCH_RL_ID* pvalue);

EXTERN int asn1PD_Serving_E_DCH_RL_ID (ASN1CTXT* pctxt, Serving_E_DCH_RL_ID* pvalue);

EXTERN void asn1Print_Serving_E_DCH_RL_ID
   (const char* name, Serving_E_DCH_RL_ID* pvalue);

EXTERN Serving_E_DCH_RL_ID* asn1Test_Serving_E_DCH_RL_ID
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNMeasurementThresholdInformation                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SFNSFNMeasurementThresholdInformation {
   struct {
      unsigned sFNSFNChangeLimitPresent : 1;
      unsigned predictedSFNSFNDeviationLimitPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SFNSFNChangeLimit sFNSFNChangeLimit;
   PredictedSFNSFNDeviationLimit predictedSFNSFNDeviationLimit;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SFNSFNMeasurementThresholdInformation;

EXTERN int asn1PE_SFNSFNMeasurementThresholdInformation (ASN1CTXT* pctxt, SFNSFNMeasurementThresholdInformation* pvalue);

EXTERN int asn1PD_SFNSFNMeasurementThresholdInformation (ASN1CTXT* pctxt, SFNSFNMeasurementThresholdInformation* pvalue);

EXTERN void asn1Print_SFNSFNMeasurementThresholdInformation
   (const char* name, SFNSFNMeasurementThresholdInformation* pvalue);

EXTERN SFNSFNMeasurementThresholdInformation* asn1Test_SFNSFNMeasurementThresholdInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNValue                                               */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_SFNSFNValue_sFNSFN_FDD        1
#define T_SFNSFNValue_sFNSFN_TDD        2
#define T_SFNSFNValue_extElem1          3

typedef struct EXTERN SFNSFNValue {
   int t;
   union {
      /* t = 1 */
      SFNSFN_FDD sFNSFN_FDD;
      /* t = 2 */
      SFNSFN_TDD sFNSFN_TDD;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} SFNSFNValue;

EXTERN int asn1PE_SFNSFNValue (ASN1CTXT* pctxt, SFNSFNValue* pvalue);

EXTERN int asn1PD_SFNSFNValue (ASN1CTXT* pctxt, SFNSFNValue* pvalue);

EXTERN void asn1Print_SFNSFNValue
   (const char* name, SFNSFNValue* pvalue);

EXTERN SFNSFNValue* asn1Test_SFNSFNValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNTimeStamp_TDD                                       */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SFNSFNTimeStamp_TDD {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SFN sFN;
   TimeSlot timeSlot;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SFNSFNTimeStamp_TDD;

EXTERN int asn1PE_SFNSFNTimeStamp_TDD (ASN1CTXT* pctxt, SFNSFNTimeStamp_TDD* pvalue);

EXTERN int asn1PD_SFNSFNTimeStamp_TDD (ASN1CTXT* pctxt, SFNSFNTimeStamp_TDD* pvalue);

EXTERN void asn1Print_SFNSFNTimeStamp_TDD
   (const char* name, SFNSFNTimeStamp_TDD* pvalue);

EXTERN SFNSFNTimeStamp_TDD* asn1Test_SFNSFNTimeStamp_TDD
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNTimeStampInformation                                */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_SFNSFNTimeStampInformation_sFNSFNTimeStamp_FDD 1
#define T_SFNSFNTimeStampInformation_sFNSFNTimeStamp_TDD 2
#define T_SFNSFNTimeStampInformation_extElem1 3

typedef struct EXTERN SFNSFNTimeStampInformation {
   int t;
   union {
      /* t = 1 */
      SFN sFNSFNTimeStamp_FDD;
      /* t = 2 */
      SFNSFNTimeStamp_TDD *sFNSFNTimeStamp_TDD;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} SFNSFNTimeStampInformation;

EXTERN int asn1PE_SFNSFNTimeStampInformation (ASN1CTXT* pctxt, SFNSFNTimeStampInformation* pvalue);

EXTERN int asn1PD_SFNSFNTimeStampInformation (ASN1CTXT* pctxt, SFNSFNTimeStampInformation* pvalue);

EXTERN void asn1Print_SFNSFNTimeStampInformation
   (const char* name, SFNSFNTimeStampInformation* pvalue);

EXTERN SFNSFNTimeStampInformation* asn1Test_SFNSFNTimeStampInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNMeasurementValueInformation_successfullNeighbourin  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element {
   struct {
      unsigned sFNSFNQualityPresent : 1;
      unsigned sFNSFNDriftRateQualityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UC_Id uC_Id;
   SFNSFNValue sFNSFNValue;
   SFNSFNQuality sFNSFNQuality;
   SFNSFNDriftRate sFNSFNDriftRate;
   SFNSFNDriftRateQuality sFNSFNDriftRateQuality;
   SFNSFNTimeStampInformation sFNSFNTimeStampInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element;

EXTERN int asn1PE_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* pvalue);

EXTERN int asn1PD_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* pvalue);

EXTERN void asn1Print_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element
   (const char* name, SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* pvalue);

EXTERN SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* asn1Test_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNMeasurementValueInformation_successfullNeighbourin  */
/*                                                            */
/**************************************************************/

/* List of SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element */
typedef Asn1RTDList SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation;

EXTERN int asn1PE_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* pvalue);

EXTERN int asn1PD_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* pvalue);

EXTERN void asn1Print_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation
   (const char* name, SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* pvalue);

EXTERN SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* asn1Test_SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNMeasurementValueInformation_unsuccessfullNeighbour  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UC_Id uC_Id;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element;

EXTERN int asn1PE_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* pvalue);

EXTERN int asn1PD_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* pvalue);

EXTERN void asn1Print_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element
   (const char* name, SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* pvalue);

EXTERN SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element* asn1Test_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNMeasurementValueInformation_unsuccessfullNeighbour  */
/*                                                            */
/**************************************************************/

/* List of SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation_element */
typedef Asn1RTDList SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation;

EXTERN int asn1PE_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* pvalue);

EXTERN int asn1PD_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* pvalue);

EXTERN void asn1Print_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation
   (const char* name, SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* pvalue);

EXTERN SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation* asn1Test_SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SFNSFNMeasurementValueInformation                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SFNSFNMeasurementValueInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SFNSFNMeasurementValueInformation_successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation successfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation;
   SFNSFNMeasurementValueInformation_unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation unsuccessfullNeighbouringCellSFNSFNObservedTimeDifferenceMeasurementInformation;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SFNSFNMeasurementValueInformation;

EXTERN int asn1PE_SFNSFNMeasurementValueInformation (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation* pvalue);

EXTERN int asn1PD_SFNSFNMeasurementValueInformation (ASN1CTXT* pctxt, SFNSFNMeasurementValueInformation* pvalue);

EXTERN void asn1Print_SFNSFNMeasurementValueInformation
   (const char* name, SFNSFNMeasurementValueInformation* pvalue);

EXTERN SFNSFNMeasurementValueInformation* asn1Test_SFNSFNMeasurementValueInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SyncDLCodeInfoItemLCR                                     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SyncDLCodeInfoItemLCR {
   struct {
      unsigned syncDLCodeIdArrivTimePresent : 1;
      unsigned syncDLCodeIdTimingThrePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SYNCDlCodeId syncDLCodeId;
   CellSyncBurstTimingLCR syncDLCodeIdArrivTime;
   CellSyncBurstTimingThreshold syncDLCodeIdTimingThre;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SyncDLCodeInfoItemLCR;

EXTERN int asn1PE_SyncDLCodeInfoItemLCR (ASN1CTXT* pctxt, SyncDLCodeInfoItemLCR* pvalue);

EXTERN int asn1PD_SyncDLCodeInfoItemLCR (ASN1CTXT* pctxt, SyncDLCodeInfoItemLCR* pvalue);

EXTERN void asn1Print_SyncDLCodeInfoItemLCR
   (const char* name, SyncDLCodeInfoItemLCR* pvalue);

EXTERN SyncDLCodeInfoItemLCR* asn1Test_SyncDLCodeInfoItemLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SyncDLCodeInfoListLCR                                     */
/*                                                            */
/**************************************************************/

/* List of SyncDLCodeInfoItemLCR */
typedef Asn1RTDList SyncDLCodeInfoListLCR;

EXTERN int asn1PE_SyncDLCodeInfoListLCR (ASN1CTXT* pctxt, SyncDLCodeInfoListLCR* pvalue);

EXTERN int asn1PD_SyncDLCodeInfoListLCR (ASN1CTXT* pctxt, SyncDLCodeInfoListLCR* pvalue);

EXTERN void asn1Print_SyncDLCodeInfoListLCR
   (const char* name, SyncDLCodeInfoListLCR* pvalue);

EXTERN SyncDLCodeInfoListLCR* asn1Test_SyncDLCodeInfoListLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SyncDLCodeIdThreInfoList                                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN SyncDLCodeIdThreInfoList {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SyncFrameNumber syncFrameNoToReceive;
   SyncDLCodeInfoListLCR syncDLCodeIdInfoLCR;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} SyncDLCodeIdThreInfoList;

EXTERN int asn1PE_SyncDLCodeIdThreInfoList (ASN1CTXT* pctxt, SyncDLCodeIdThreInfoList* pvalue);

EXTERN int asn1PD_SyncDLCodeIdThreInfoList (ASN1CTXT* pctxt, SyncDLCodeIdThreInfoList* pvalue);

EXTERN void asn1Print_SyncDLCodeIdThreInfoList
   (const char* name, SyncDLCodeIdThreInfoList* pvalue);

EXTERN SyncDLCodeIdThreInfoList* asn1Test_SyncDLCodeIdThreInfoList
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SyncDLCodeIdThreInfoLCR                                   */
/*                                                            */
/**************************************************************/

/* List of SyncDLCodeIdThreInfoList */
typedef Asn1RTDList SyncDLCodeIdThreInfoLCR;

EXTERN int asn1PE_SyncDLCodeIdThreInfoLCR (ASN1CTXT* pctxt, SyncDLCodeIdThreInfoLCR* pvalue);

EXTERN int asn1PD_SyncDLCodeIdThreInfoLCR (ASN1CTXT* pctxt, SyncDLCodeIdThreInfoLCR* pvalue);

EXTERN void asn1Print_SyncDLCodeIdThreInfoLCR
   (const char* name, SyncDLCodeIdThreInfoLCR* pvalue);

EXTERN SyncDLCodeIdThreInfoLCR* asn1Test_SyncDLCodeIdThreInfoLCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmission_Gap_Pattern_Sequence_Information_element     */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Transmission_Gap_Pattern_Sequence_Information_element {
   struct {
      unsigned tGL2Present : 1;
      unsigned not_to_be_used_1Present : 1;
      unsigned downlink_Compressed_Mode_MethodPresent : 1;
      unsigned uplink_Compressed_Mode_MethodPresent : 1;
      unsigned delta_SIR2Present : 1;
      unsigned delta_SIR_after2Present : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TGPSID tGPSID;
   TGSN tGSN;
   GapLength tGL1;
   GapLength tGL2;
   TGD tGD;
   GapDuration tGPL1;
   GapDuration not_to_be_used_1;
   UL_DL_mode uL_DL_mode;
   Downlink_Compressed_Mode_Method downlink_Compressed_Mode_Method;
   Uplink_Compressed_Mode_Method uplink_Compressed_Mode_Method;
   DL_FrameType dL_FrameType;
   DeltaSIR delta_SIR1;
   DeltaSIR delta_SIR_after1;
   DeltaSIR delta_SIR2;
   DeltaSIR delta_SIR_after2;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Transmission_Gap_Pattern_Sequence_Information_element;

EXTERN int asn1PE_Transmission_Gap_Pattern_Sequence_Information_element (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Information_element* pvalue);

EXTERN int asn1PD_Transmission_Gap_Pattern_Sequence_Information_element (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Information_element* pvalue);

EXTERN void asn1Print_Transmission_Gap_Pattern_Sequence_Information_element
   (const char* name, Transmission_Gap_Pattern_Sequence_Information_element* pvalue);

EXTERN Transmission_Gap_Pattern_Sequence_Information_element* asn1Test_Transmission_Gap_Pattern_Sequence_Information_element
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmission_Gap_Pattern_Sequence_Information             */
/*                                                            */
/**************************************************************/

/* List of Transmission_Gap_Pattern_Sequence_Information_element */
typedef Asn1RTDList Transmission_Gap_Pattern_Sequence_Information;

EXTERN int asn1PE_Transmission_Gap_Pattern_Sequence_Information (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Information* pvalue);

EXTERN int asn1PD_Transmission_Gap_Pattern_Sequence_Information (ASN1CTXT* pctxt, Transmission_Gap_Pattern_Sequence_Information* pvalue);

EXTERN void asn1Print_Transmission_Gap_Pattern_Sequence_Information
   (const char* name, Transmission_Gap_Pattern_Sequence_Information* pvalue);

EXTERN Transmission_Gap_Pattern_Sequence_Information* asn1Test_Transmission_Gap_Pattern_Sequence_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellPortionID cellPortionID;
   TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue transmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionValue;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item;

EXTERN int asn1PE_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item (ASN1CTXT* pctxt, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item* pvalue);

EXTERN int asn1PD_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item (ASN1CTXT* pctxt, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item* pvalue);

EXTERN void asn1Print_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item
   (const char* name, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item* pvalue);

EXTERN TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item* asn1Test_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_  */
/*                                                            */
/**************************************************************/

/* List of TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue_Item */
typedef Asn1RTDList TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue;

EXTERN int asn1PE_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue (ASN1CTXT* pctxt, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue* pvalue);

EXTERN int asn1PD_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue (ASN1CTXT* pctxt, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue* pvalue);

EXTERN void asn1Print_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue
   (const char* name, TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue* pvalue);

EXTERN TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue* asn1Test_TransmittedCarrierPowerOfAllCodesNotUsedForHS_PDSCHOrHS_SCCHTransmissionCellPortionValue
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmitted_Carrier_Power_For_CellPortion_Value_Item      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN Transmitted_Carrier_Power_For_CellPortion_Value_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellPortionID cellPortionID;
   Transmitted_Carrier_Power_Value transmitted_Carrier_Power_Value;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} Transmitted_Carrier_Power_For_CellPortion_Value_Item;

EXTERN int asn1PE_Transmitted_Carrier_Power_For_CellPortion_Value_Item (ASN1CTXT* pctxt, Transmitted_Carrier_Power_For_CellPortion_Value_Item* pvalue);

EXTERN int asn1PD_Transmitted_Carrier_Power_For_CellPortion_Value_Item (ASN1CTXT* pctxt, Transmitted_Carrier_Power_For_CellPortion_Value_Item* pvalue);

EXTERN void asn1Print_Transmitted_Carrier_Power_For_CellPortion_Value_Item
   (const char* name, Transmitted_Carrier_Power_For_CellPortion_Value_Item* pvalue);

EXTERN Transmitted_Carrier_Power_For_CellPortion_Value_Item* asn1Test_Transmitted_Carrier_Power_For_CellPortion_Value_Item
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Transmitted_Carrier_Power_For_CellPortion_Value           */
/*                                                            */
/**************************************************************/

/* List of Transmitted_Carrier_Power_For_CellPortion_Value_Item */
typedef Asn1RTDList Transmitted_Carrier_Power_For_CellPortion_Value;

EXTERN int asn1PE_Transmitted_Carrier_Power_For_CellPortion_Value (ASN1CTXT* pctxt, Transmitted_Carrier_Power_For_CellPortion_Value* pvalue);

EXTERN int asn1PD_Transmitted_Carrier_Power_For_CellPortion_Value (ASN1CTXT* pctxt, Transmitted_Carrier_Power_For_CellPortion_Value* pvalue);

EXTERN void asn1Print_Transmitted_Carrier_Power_For_CellPortion_Value
   (const char* name, Transmitted_Carrier_Power_For_CellPortion_Value* pvalue);

EXTERN Transmitted_Carrier_Power_For_CellPortion_Value* asn1Test_Transmitted_Carrier_Power_For_CellPortion_Value
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPS                                                 */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TUTRANGPS {
   OSUINT16 ms_part;
   OSUINT32 ls_part;
} TUTRANGPS;

EXTERN int asn1PE_TUTRANGPS (ASN1CTXT* pctxt, TUTRANGPS* pvalue);

EXTERN int asn1PD_TUTRANGPS (ASN1CTXT* pctxt, TUTRANGPS* pvalue);

EXTERN void asn1Print_TUTRANGPS
   (const char* name, TUTRANGPS* pvalue);

EXTERN TUTRANGPS* asn1Test_TUTRANGPS
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSMeasurementThresholdInformation                  */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TUTRANGPSMeasurementThresholdInformation {
   struct {
      unsigned tUTRANGPSChangeLimitPresent : 1;
      unsigned predictedTUTRANGPSDeviationLimitPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TUTRANGPSChangeLimit tUTRANGPSChangeLimit;
   PredictedTUTRANGPSDeviationLimit predictedTUTRANGPSDeviationLimit;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TUTRANGPSMeasurementThresholdInformation;

EXTERN int asn1PE_TUTRANGPSMeasurementThresholdInformation (ASN1CTXT* pctxt, TUTRANGPSMeasurementThresholdInformation* pvalue);

EXTERN int asn1PD_TUTRANGPSMeasurementThresholdInformation (ASN1CTXT* pctxt, TUTRANGPSMeasurementThresholdInformation* pvalue);

EXTERN void asn1Print_TUTRANGPSMeasurementThresholdInformation
   (const char* name, TUTRANGPSMeasurementThresholdInformation* pvalue);

EXTERN TUTRANGPSMeasurementThresholdInformation* asn1Test_TUTRANGPSMeasurementThresholdInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TUTRANGPSMeasurementValueInformation                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN TUTRANGPSMeasurementValueInformation {
   struct {
      unsigned tUTRANGPSQualityPresent : 1;
      unsigned tUTRANGPSDriftRateQualityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TUTRANGPS tUTRANGPS;
   TUTRANGPSQuality tUTRANGPSQuality;
   TUTRANGPSDriftRate tUTRANGPSDriftRate;
   TUTRANGPSDriftRateQuality tUTRANGPSDriftRateQuality;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} TUTRANGPSMeasurementValueInformation;

EXTERN int asn1PE_TUTRANGPSMeasurementValueInformation (ASN1CTXT* pctxt, TUTRANGPSMeasurementValueInformation* pvalue);

EXTERN int asn1PD_TUTRANGPSMeasurementValueInformation (ASN1CTXT* pctxt, TUTRANGPSMeasurementValueInformation* pvalue);

EXTERN void asn1Print_TUTRANGPSMeasurementValueInformation
   (const char* name, TUTRANGPSMeasurementValueInformation* pvalue);

EXTERN TUTRANGPSMeasurementValueInformation* asn1Test_TUTRANGPSMeasurementValueInformation
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UL_Synchronisation_Parameters_LCR                         */
/*                                                            */
/**************************************************************/

typedef struct EXTERN UL_Synchronisation_Parameters_LCR {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UL_Synchronisation_StepSize uL_Synchronisation_StepSize;
   UL_Synchronisation_Frequency uL_Synchronisation_Frequency;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} UL_Synchronisation_Parameters_LCR;

EXTERN int asn1PE_UL_Synchronisation_Parameters_LCR (ASN1CTXT* pctxt, UL_Synchronisation_Parameters_LCR* pvalue);

EXTERN int asn1PD_UL_Synchronisation_Parameters_LCR (ASN1CTXT* pctxt, UL_Synchronisation_Parameters_LCR* pvalue);

EXTERN void asn1Print_UL_Synchronisation_Parameters_LCR
   (const char* name, UL_Synchronisation_Parameters_LCR* pvalue);

EXTERN UL_Synchronisation_Parameters_LCR* asn1Test_UL_Synchronisation_Parameters_LCR
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  USCH_InformationItem                                      */
/*                                                            */
/**************************************************************/

typedef struct EXTERN USCH_InformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   USCH_ID uSCH_ID;
   CCTrCH_ID cCTrCH_ID;
   TransportFormatSet transportFormatSet;
   AllocationRetentionPriority allocationRetentionPriority;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} USCH_InformationItem;

EXTERN int asn1PE_USCH_InformationItem (ASN1CTXT* pctxt, USCH_InformationItem* pvalue);

EXTERN int asn1PD_USCH_InformationItem (ASN1CTXT* pctxt, USCH_InformationItem* pvalue);

EXTERN void asn1Print_USCH_InformationItem
   (const char* name, USCH_InformationItem* pvalue);

EXTERN USCH_InformationItem* asn1Test_USCH_InformationItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  USCH_Information                                          */
/*                                                            */
/**************************************************************/

/* List of USCH_InformationItem */
typedef Asn1RTDList USCH_Information;

EXTERN int asn1PE_USCH_Information (ASN1CTXT* pctxt, USCH_Information* pvalue);

EXTERN int asn1PD_USCH_Information (ASN1CTXT* pctxt, USCH_Information* pvalue);

EXTERN void asn1Print_USCH_Information
   (const char* name, USCH_Information* pvalue);

EXTERN USCH_Information* asn1Test_USCH_Information
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  USCH_InformationResponseItem                              */
/*                                                            */
/**************************************************************/

typedef struct EXTERN USCH_InformationResponseItem {
   struct {
      unsigned bindingIDPresent : 1;
      unsigned transportLayerAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   USCH_ID uSCH_ID;
   BindingID bindingID;
   TransportLayerAddress transportLayerAddress;
   ProtocolExtensionContainer iE_Extensions;
   Asn1RTDList extElem1;
} USCH_InformationResponseItem;

EXTERN int asn1PE_USCH_InformationResponseItem (ASN1CTXT* pctxt, USCH_InformationResponseItem* pvalue);

EXTERN int asn1PD_USCH_InformationResponseItem (ASN1CTXT* pctxt, USCH_InformationResponseItem* pvalue);

EXTERN void asn1Print_USCH_InformationResponseItem
   (const char* name, USCH_InformationResponseItem* pvalue);

EXTERN USCH_InformationResponseItem* asn1Test_USCH_InformationResponseItem
   (ASN1CTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  USCH_InformationResponse                                  */
/*                                                            */
/**************************************************************/

/* List of USCH_InformationResponseItem */
typedef Asn1RTDList USCH_InformationResponse;

EXTERN int asn1PE_USCH_InformationResponse (ASN1CTXT* pctxt, USCH_InformationResponse* pvalue);

EXTERN int asn1PD_USCH_InformationResponse (ASN1CTXT* pctxt, USCH_InformationResponse* pvalue);

EXTERN void asn1Print_USCH_InformationResponse
   (const char* name, USCH_InformationResponse* pvalue);

EXTERN USCH_InformationResponse* asn1Test_USCH_InformationResponse
   (ASN1CTXT* pctxt);

#ifdef __cplusplus
}
#endif

#endif
